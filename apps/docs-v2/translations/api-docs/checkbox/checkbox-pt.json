{
  "componentDescription": "",
  "propDescriptions": {
    "checked": "If <code>true</code>, the component is checked.",
    "checkedIcon": "The icon to display when the component is checked.",
    "classes": "Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\"#css\">API CSS</a> abaixo para maiores detalhes.",
    "color": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\"https://mui.com/material-ui/customization/palette/#adding-new-colors\">palette customization guide</a>.",
    "defaultChecked": "The default checked state. Use when the component is not controlled.",
    "disabled": "Se <code>true</code>, o componente est√° desabilitado.",
    "disableRipple": "If <code>true</code>, the ripple effect is disabled.",
    "icon": "The icon to display when the component is unchecked.",
    "id": "The id of the <code>input</code> element.",
    "indeterminate": "If <code>true</code>, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a <code>data-indeterminate</code> attribute on the <code>input</code>.",
    "indeterminateIcon": "The icon to display when the component is indeterminate.",
    "inputProps": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\">Attributes</a> applied to the <code>input</code> element.",
    "inputRef": "Pass a ref to the <code>input</code> element.",
    "onChange": "Callback fired when the state is changed.<br><br><strong>Signature:</strong><br><code>function(event: object) =&gt; void</code><br><em>event:</em> The event source of the callback. You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean).",
    "required": "If <code>true</code>, the <code>input</code> element is required.",
    "size": "The size of the checkbox. <code>small</code> is equivalent to the dense checkbox styling.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "value": "The value of the component. The DOM API casts this to a string. The browser uses &quot;on&quot; as the default value."
  },
  "classDescriptions": {
    "root": {
      "description": "Estilos aplicados ao elemento raiz."
    },
    "checked": {
      "description": "Pseudo-class aplicada a {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>checked={true}</code>"
    },
    "disabled": {
      "description": "Pseudo-class aplicada a {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>disabled={true}</code>"
    },
    "indeterminate": {
      "description": "Pseudo-class aplicada a {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>indeterminate={true}</code>"
    },
    "colorPrimary": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"primary\"</code>"
    },
    "colorSecondary": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"secondary\"</code>"
    }
  }
}
