{
  "componentDescription": "",
  "propDescriptions": {
    "children": "Node passed into the SVG element.",
    "classes": "Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\"#css\">API CSS</a> abaixo para maiores detalhes.",
    "color": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\"https://mui.com/material-ui/customization/palette/#adding-new-colors\">palette customization guide</a>. You can use the <code>htmlColor</code> prop to apply a color attribute to the SVG element.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "fontSize": "The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",
    "htmlColor": "Applies a color attribute to the SVG element.",
    "inheritViewBox": "Useful when you want to reference a custom <code>component</code> and have <code>SvgIcon</code> pass that <code>component</code>&#39;s viewBox to the root node. If <code>true</code>, the root node will inherit the custom <code>component</code>&#39;s viewBox and the <code>viewBox</code> prop will be ignored.",
    "shapeRendering": "The shape-rendering attribute. The behavior of the different options is described on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering\">MDN Web Docs</a>. If you are having issues with blurry icons you should investigate this prop.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "titleAccess": "Provides a human-readable title for the element that contains it. <a href=\"https://www.w3.org/TR/SVG-access/#Equivalent\">https://www.w3.org/TR/SVG-access/#Equivalent</a>",
    "viewBox": "Allows you to redefine what the coordinates without units mean inside an SVG element. For example, if the SVG element is 500 (width) by 200 (height), and you pass viewBox=&quot;0 0 50 20&quot;, this means that the coordinates inside the SVG will go from the top left corner (0,0) to bottom right (50,20) and each unit will be worth 10px."
  },
  "classDescriptions": {
    "root": {
      "description": "Estilos aplicados ao elemento raiz."
    },
    "colorPrimary": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"primary\"</code>"
    },
    "colorSecondary": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"secondary\"</code>"
    },
    "colorAction": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"action\"</code>"
    },
    "colorError": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"error\"</code>"
    },
    "colorDisabled": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>color=\"disabled\"</code>"
    },
    "fontSizeInherit": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>fontSize=\"inherit\"</code>"
    },
    "fontSizeSmall": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>fontSize=\"small\"</code>"
    },
    "fontSizeLarge": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>fontSize=\"large\"</code>"
    }
  }
}
