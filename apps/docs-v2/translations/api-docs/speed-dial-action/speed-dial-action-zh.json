{
  "componentDescription": "",
  "propDescriptions": {
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "delay": "Adds a transition delay, to allow a series of SpeedDialActions to be animated.",
    "FabProps": "Props applied to the <a href=\"/material-ui/api/fab/\"><code>Fab</code></a> component.",
    "icon": "The Icon to display in the SpeedDial Fab.",
    "id": "This prop is used to help implement the accessibility logic. If you don&#39;t provide this prop. It falls back to a randomly generated id.",
    "open": "Control the popup` open state.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "TooltipClasses": "<code>classes</code> prop applied to the <a href=\"/material-ui/api/tooltip/\"><code>Tooltip</code></a> element.",
    "tooltipOpen": "Make the tooltip always visible when the SpeedDial is open.",
    "tooltipPlacement": "Placement of the tooltip.",
    "tooltipTitle": "Label to display in the tooltip."
  },
  "classDescriptions": {
    "fab": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the Fab component"
    },
    "fabClosed": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Fab component",
      "conditions": "<code>open={false}</code>"
    },
    "staticTooltip": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>tooltipOpen={true}</code>"
    },
    "staticTooltipClosed": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>tooltipOpen={true}</code> and <code>open={false}</code>"
    },
    "staticTooltipLabel": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the static tooltip label",
      "conditions": "<code>tooltipOpen={true}</code>"
    },
    "tooltipPlacementLeft": {
      "description": "Styles applied to the root element if `tooltipOpen={true}` and `tooltipPlacement=\"left\"``"
    },
    "tooltipPlacementRight": {
      "description": "Styles applied to the root element if `tooltipOpen={true}` and `tooltipPlacement=\"right\"``"
    }
  }
}
