{
  "componentDescription": "Uses an additional container component if `ListItemSecondaryAction` is the last child.",
  "propDescriptions": {
    "alignItems": "Defines the <code>align-items</code> style property.",
    "autoFocus": "If <code>true</code>, the list item is focused during the first mount. Focus will also be triggered if the value changes from false to true.",
    "button": "If <code>true</code>, the list item is a button (using <code>ButtonBase</code>). Props intended for <code>ButtonBase</code> can then be applied to <code>ListItem</code>.",
    "children": "The content of the component if a <code>ListItemSecondaryAction</code> is used it must be the last child.",
    "classes": "Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\"#css\">API CSS</a> abaixo para maiores detalhes.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "components": "The components used for each slot inside the InputBase. Either a string to use a HTML element or a component.",
    "componentsProps": "The props used for each slot inside the Input.",
    "ContainerComponent": "The container component used when a <code>ListItemSecondaryAction</code> is the last child.<br>⚠️ <a href=\"/material-ui/guides/composition/#caveat-with-refs\">Needs to be able to hold a ref</a>.",
    "ContainerProps": "Props applied to the container component if used.",
    "dense": "If <code>true</code>, compact vertical padding designed for keyboard and mouse input is used. The prop defaults to the value inherited from the parent List component.",
    "disabled": "Se <code>true</code>, o componente está desabilitado.",
    "disableGutters": "If <code>true</code>, the left and right padding is removed.",
    "disablePadding": "If <code>true</code>, all padding is removed.",
    "divider": "If <code>true</code>, a 1px light border is added to the bottom of the list item.",
    "secondaryAction": "The element to display at the end of ListItem.",
    "selected": "Use to apply selected styling.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details."
  },
  "classDescriptions": {
    "root": {
      "description": "Styles applied to {{nodeName}}. May be wrapped by a `container`.",
      "nodeName": "the (normally root) `component` element"
    },
    "container": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "the container element",
      "conditions": "<code>children</code> includes <code>ListItemSecondaryAction</code>"
    },
    "focusVisible": {
      "description": "Pseudo-class aplicada a {{nodeName}} se {{conditions}}.",
      "nodeName": "the `component`'s `focusVisibleClassName` prop",
      "conditions": "<code>button={true}</code>"
    },
    "dense": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "the component element",
      "conditions": "dense"
    },
    "alignItemsFlexStart": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "the component element",
      "conditions": "<code>alignItems=\"flex-start\"</code>"
    },
    "disabled": {
      "description": "Pseudo-class aplicada a {{nodeName}} se {{conditions}}.",
      "nodeName": "the inner `component` element",
      "conditions": "<code>disabled={true}</code>"
    },
    "divider": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "the inner `component` element",
      "conditions": "<code>divider={true}</code>"
    },
    "gutters": {
      "description": "Estilos aplicados em {{nodeName}} a menos que {{conditions}}.",
      "nodeName": "the inner `component` element",
      "conditions": "<code>disableGutters={true}</code>"
    },
    "padding": {
      "description": "Estilos aplicados em {{nodeName}} a menos que {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>disablePadding={true}</code>"
    },
    "button": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "the inner `component` element",
      "conditions": "<code>button={true}</code>"
    },
    "secondaryAction": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "the component element",
      "conditions": "<code>children</code> includes <code>ListItemSecondaryAction</code>"
    },
    "selected": {
      "description": "Pseudo-class aplicada a {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>selected={true}</code>"
    }
  }
}
