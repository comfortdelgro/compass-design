{
  "componentDescription": "",
  "propDescriptions": {
    "anchorOrigin": "The anchor of the badge.",
    "badgeContent": "The content rendered within the badge.",
    "children": "The badge will be added relative to this node.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "color": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\"https://mui.com/material-ui/customization/palette/#adding-new-colors\">palette customization guide</a>.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "components": "The components used for each slot inside.<br>This prop is an alias for the <code>slots</code> prop. It&#39;s recommended to use the <code>slots</code> prop instead.",
    "componentsProps": "The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>slotProps</code> prop. It&#39;s recommended to use the <code>slotProps</code> prop instead, as <code>componentsProps</code> will be deprecated in the future.",
    "invisible": "If <code>true</code>, the badge is invisible.",
    "max": "Max count to show.",
    "overlap": "Wrapped shape the badge should overlap.",
    "showZero": "Controls whether the badge is hidden when <code>badgeContent</code> is zero.",
    "slotProps": "The props used for each slot inside the Badge.",
    "slots": "The components used for each slot inside the Badge. Either a string to use a HTML element or a component.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "variant": "The variant to use."
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "badge": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the badge <code>span</code> element"
    },
    "dot": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>variant=\"dot\"</code>"
    },
    "standard": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>variant=\"standard\"</code>"
    },
    "anchorOriginTopRight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'top', 'right' }}</code>"
    },
    "anchorOriginBottomRight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'bottom', 'right' }}</code>"
    },
    "anchorOriginTopLeft": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'top', 'left' }}</code>"
    },
    "anchorOriginBottomLeft": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'bottom', 'left' }}</code>"
    },
    "invisible": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>invisible={true}</code>"
    },
    "colorPrimary": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"primary\"</code>"
    },
    "colorSecondary": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"secondary\"</code>"
    },
    "colorError": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"error\"</code>"
    },
    "colorInfo": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"info\"</code>"
    },
    "colorSuccess": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"success\"</code>"
    },
    "colorWarning": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"warning\"</code>"
    },
    "anchorOriginTopRightRectangular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'top', 'right' }} overlap=\"rectangular\"</code>"
    },
    "anchorOriginBottomRightRectangular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangular\"</code>"
    },
    "anchorOriginTopLeftRectangular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'top', 'left' }} overlap=\"rectangular\"</code>"
    },
    "anchorOriginBottomLeftRectangular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangular\"</code>"
    },
    "anchorOriginTopRightCircular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'top', 'right' }} overlap=\"circular\"</code>"
    },
    "anchorOriginBottomRightCircular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'bottom', 'right' }} overlap=\"circular\"</code>"
    },
    "anchorOriginTopLeftCircular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'top', 'left' }} overlap=\"circular\"</code>"
    },
    "anchorOriginBottomLeftCircular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'bottom', 'left' }} overlap=\"circular\"</code>"
    },
    "overlapRectangular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>overlap=\"rectangular\"</code>"
    },
    "overlapCircular": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>overlap=\"circular\"</code>"
    }
  }
}
