{
  "componentDescription": "",
  "propDescriptions": {
    "children": "The content of the component.<br>If <code>&#39; &#39;</code> is provided, the component reserves one line height for displaying a future message.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "disabled": "If <code>true</code>, the helper text should be displayed in a disabled state.",
    "error": "If <code>true</code>, helper text should be displayed in an error state.",
    "filled": "If <code>true</code>, the helper text should use filled classes key.",
    "focused": "If <code>true</code>, the helper text should use focused classes key.",
    "margin": "If <code>dense</code>, will adjust vertical spacing. This is normally obtained via context from FormControl.",
    "required": "If <code>true</code>, the helper text should use required classes key.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "variant": "The variant to use."
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "error": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>error={true}</code>"
    },
    "disabled": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disabled={true}</code>"
    },
    "sizeSmall": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>size=\"small\"</code>"
    },
    "contained": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"filled\"</code> or <code>variant=\"outlined\"</code>"
    },
    "focused": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>focused={true}</code>"
    },
    "filled": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>filled={true}</code>"
    },
    "required": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>required={true}</code>"
    }
  }
}
