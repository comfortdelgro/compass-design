{
  "componentDescription": "",
  "propDescriptions": {
    "boundaryCount": "Number of always visible pages at the beginning and end.",
    "classes": "Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\"#css\">API CSS</a> abaixo para maiores detalhes.",
    "color": "The active color. It supports both default and custom theme colors, which can be added as shown in the <a href=\"https://mui.com/material-ui/customization/palette/#adding-new-colors\">palette customization guide</a>.",
    "count": "The total number of pages.",
    "defaultPage": "The page selected by default when the component is uncontrolled.",
    "disabled": "Se <code>true</code>, o componente est√° desabilitado.",
    "getItemAriaLabel": "Accepts a function which returns a string value that provides a user-friendly name for the current page. This is important for screen reader users.<br>For localization purposes, you can use the provided <a href=\"/material-ui/guides/localization/\">translations</a>.<br><br><strong>Signature:</strong><br><code>function(type: string, page: number, selected: bool) =&gt; string</code><br><em>type:</em> The link or button type to format (&#39;page&#39; | &#39;first&#39; | &#39;last&#39; | &#39;next&#39; | &#39;previous&#39;). Defaults to &#39;page&#39;.<br><em>page:</em> The page number to format.<br><em>selected:</em> If true, the current page is selected.",
    "hideNextButton": "If <code>true</code>, hide the next-page button.",
    "hidePrevButton": "If <code>true</code>, hide the previous-page button.",
    "onChange": "Callback fired when the page is changed.<br><br><strong>Signature:</strong><br><code>function(event: object, page: number) =&gt; void</code><br><em>event:</em> The event source of the callback.<br><em>page:</em> The page selected.",
    "page": "The current page.",
    "renderItem": "Render the item.<br><br><strong>Signature:</strong><br><code>function(params: PaginationRenderItemParams) =&gt; ReactNode</code><br><em>params:</em> The props to spread on a PaginationItem.",
    "shape": "The shape of the pagination items.",
    "showFirstButton": "If <code>true</code>, show the first-page button.",
    "showLastButton": "If <code>true</code>, show the last-page button.",
    "siblingCount": "Number of always visible pages before and after the current page.",
    "size": "The size of the autocomplete.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "variant": "A variante a usar."
  },
  "classDescriptions": {
    "root": {
      "description": "Estilos aplicados ao elemento raiz."
    },
    "ul": {
      "description": "Estilos aplicados a {{nodeName}}.",
      "nodeName": "the ul element"
    },
    "outlined": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>variant=\"outlined\"</code>"
    },
    "text": {
      "description": "Estilos aplicados para {{nodeName}} se {{conditions}}.",
      "nodeName": "o elemento raiz",
      "conditions": "<code>variant=\"text\"</code>"
    }
  }
}
