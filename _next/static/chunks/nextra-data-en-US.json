{"/components/accordions":{"title":"Accordions","data":{"":"The accordion component allows the user to show and hide sections of related content on a page.\nYou can see how this component is implemented on\nladle","import#Import:":"import {Accordion} from '@comfortdelgro/react-compass'\nor\nimport Accordion from '@comfortdelgro/react-compass/accordion'","basic-example#Basic Example":"import {Accordion} from '@comfortdelgro/react-compass'\n\nfunction BasicExample() {\nreturn (\n<Accordion>\n<Accordion.Title>Title</Accordion.Title>\n<p>\nLorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi,\nofficiis\n</p>\n</Accordion>\n)\n}\n\n\n\nTitle\n\nLorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi, officiis","controlled-accordion#Controlled Accordion":"Manually control the behavior of accordions\nimport {Accordion} from '@comfortdelgro/react-compass'\n\nfunction ControlledAccordion() {\nconst lorem = `Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi,\nofficiis corporis magnam quo expedita nostrum temporibus quibusdam ipsa\niste a consequuntur, adipisci eaque. Nobis voluptates impedit obcaecati\nerror optio consequatur.`\n\nconst [expand, setExpand] = useState<string | false>(false)\n\nconst handleControlledAccordion = (id: string) => () => {\nsetExpand((previous) => {\nif (previous === id) {\nreturn false\n}\nreturn id\n})\n}\n\nreturn (\n<Accordion\nexpand={expand === 'first'}\nonExpandChange={handleControlledAccordion('first')}\n>\n<Accordion.Title>\n<p>{lorem}</p>\n</Accordion.Title>\n{lorem}\n{lorem}\n</Accordion>\n\n<Accordion\nexpand={expand === 'second'}\nonExpandChange={handleControlledAccordion('second')}\n>\n<Accordion.Title>\n<p>{lorem}</p>\n</Accordion.Title>\n{lorem}\n{lorem}\n</Accordion>\n\n<Accordion\nexpand={expand === 'third'}\nonExpandChange={handleControlledAccordion('third')}\n>\n<Accordion.Title>\n<p>{lorem}</p>\n</Accordion.Title>\n{lorem}\n{lorem}\n</Accordion>\n)\n}\n\nSee this example in\nladle","expand-by-default#Expand by default":"Set the Accordion to expand by default\nimport {Accordion} from '@comfortdelgro/react-compass'\n\nfunction ExpandDefault() {\nreturn (\n<Accordion defaultExpand={true}>\n<Accordion.Title>Title</Accordion.Title>\n<p>\nLorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi,\nofficiis\n</p>\n</Accordion>\n)\n}\n\n\n\n\nTitle\n\n\nLorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi, officiis","table-accordion#Table Accordion":"import {Accordion} from '@comfortdelgro/react-compass'\n\nfunction TableAccordion() {\nconst data = [\n{id: 1, leftData: 'Job ID', rightData: 'CDG180-1120'},\n{id: 2, leftData: 'Status', rightData: 'Ended'},\n{id: 3, leftData: 'Job Title', rightData: 'Demo 8'},\n{id: 4, leftData: 'Number of Pax', rightData: '4'},\n{id: 5, leftData: 'Job Type', rightData: 'One-way Transfer'},\n{id: 6, leftData: 'Date/Time', rightData: '10/10/2022, 04:10 PM'},\n{id: 7, leftData: 'Pick-up Location', rightData: 'Comfort Building'},\n]\n\nconst renderAccordionTableItems = () => {\nreturn data.map((eachData) => {\nreturn (\n<div key={eachData.id}>\n<p>\n<b>{eachData.leftData}</b>\n</p>\n<p style={{textAlign: 'left'}}>{eachData.rightData}</p>\n</div>\n)\n})\n}\n\nreturn (\n<Accordion>\n<Accordion.Title>\n<h2>Business Profile</h2>\n</Accordion.Title>\n<p>{lorem}</p>\n<Accordion.Table>{renderAccordionTableItems()}</Accordion.Table>\n<p>{lorem}</p>\n</Accordion>\n)\n}\n\nSee this example in\nladle","custom-accordions#Custom Accordions":"You can customize your accordions whatever you like !\nimport {Accordion} from '@comfortdelgro/react-compass'\n\nfunction CustomizedColors() {\nreturn (\n<Accordion\ndefaultExpand={true}\ncss={{background: 'Wheat', color: 'SaddleBrown'}}\n>\n<Accordion.Title\ncss={{\ntextAlign: 'center',\nbackground: 'burlywood',\ntextAlign: 'center',\ncolor: 'currentColor',\n}}\n>\n<p>\nLorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi,\nofficiis Lorem ipsum dolor sit amet consectetur, adipisicing elit.\nQuasi, officiis\n</p>\n</Accordion.Title>\n<p>\nLorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi,\nofficiis\n</p>\n</Accordion>\n)\n}\n\n\n\n\nLorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi,\nofficiis Lorem ipsum dolor sit amet consectetur, adipisicing elit.\nQuasi, officiis\n\n\nLorem ipsum dolor sit amet consectetur, adipisicing elit. Quasi, officiis","props#Props":"","accordion#Accordion":"Name\tType\tDefault\tDescription\tchildren *\tReactNode\t—\tThe content to display in the accordion.\texpand\tboolean\tfalse\tIf true, expands the accordion, otherwise collapse it. Setting this prop enables control over the accordion.\tdefaultExpand\tboolean\tfalse\tIf true, expands the accordion by default.\tonExpandChange\tfunction\t—\tCallback fired when the expand/collapse state is changed.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","accordiontitle#Accordion.Title":"Name\tType\tDefault\tDescription\tchildren\tReactNode | string\t—\tThe content to display in the accordion title. If you pass children as a string, it will be render as h1\ticon\tReactNode | false\t—\tThe icon of accordion title. By default it is a circle question mark. You can disable the icon by passing false\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","accordiontable#Accordion.Table":"Name\tType\tDefault\tDescription\tchildren *\tReactNode\t—\tThe content to display in the accordion table.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles."}},"/components/alerts":{"title":"Alerts","data":{"":"Alerts provide short, timely, and relevant information for your users without interrupting their tasks.\nYou can see how this component is implemented on\nladle","import#Import:":"import {Alert} from '@comfortdelgro/react-compass'\nor\nimport Alert from '@comfortdelgro/react-compass/alert'","basic-alerts#Basic alerts:":"This is an info alert — check it out!\n\nThis is a sucess alert — check it out!\n\nThis is a danger alert — check it out!\n\nThis is a warning alert — check it out!\n\n\n<Alert color='info'> This is an info alert — check it out! </Alert>\n\n<Alert color='success'> This is a sucess alert — check it out! </Alert>\n\n<Alert color='danger'> This is a danger alert — check it out! </Alert>\n\n<Alert color='warning'> This is a warning alert — check it out! </Alert>","dismissible#Dismissible:":"This is an info alert — check it out!\n\n\n<Alert color='info' dismissible onDismiss={() => {}}>\nThis is an info alert — check it out!\n</Alert>","transition#Transition:":"You can use a transition component such as AnimatePresence and motion to transition the appearance of the alert.Click ladle to see this in action.\nconst MotionAlert = motion(Alert)\n\nexport const Dismissible: React.FC = () => {\nconst [alerts, setAlerts] = useState([\n{color: 'info' as const, key: 'info'},\n{color: 'success' as const, key: 'success'},\n{color: 'danger' as const, key: 'danger'},\n])\n\nconst removeAlert = (key: string) =>\nsetAlerts((alerts) => alerts.filter((alert) => alert.key !== key))\n\nreturn (\n<Column>\n<AnimatePresence mode='popLayout'>\n{alerts.map((alert) => (\n<MotionAlert\nkey={alert.key}\ncolor={alert.color}\ndismissible\nonDismiss={() => removeAlert(alert.key)}\n// motion\nlayout\nanimate={{x: 0, opacity: 1}}\nexit={{x: -20, opacity: 0}}\ntransition={{duration: 0.2}}\n>\n<AlertContent />\n</MotionAlert>\n))}\n</AnimatePresence>\n</Column>\n)\n}","icons#Icons:":"The icon prop allows you to add an icon to the beginning of the alert component. This will override the default icon for the specified severity.\n\nThis is a success alert — check it out!\n\n\n<Alert color='success' icon={<BugIcon />}>\nThis is a success alert — check it out!\n</Alert>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\nThis is a success alert — check it out!\n\n\n<Alert\ncolor='success'\ncss={{backgroundColor: 'orange', '&:hover': {backgroundColor: 'red'}}}\n>\nThis is a success alert — check it out!\n</Alert>","props#Props:":"Name\tType\tDefault\tDescription\tchildren\tReactNode |String\t—\tThe content to display in the alerts.\tdismissible\tboolean\tfalse\tIf true, show the close icon.\tonDismiss\tfunction\t—\tCallback to close the alerts.\ticon\tReactNode | false\t—\tThe icon of the alerts. It'd disappear if the value is false.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/avatars":{"title":"Avatar","data":{"":"Avatars can be used in everything including a person's profile picture, dialog menu, ext.\nYou can see how this component is implemented on\nladle","import#Import:":"import {Avatar} from '@comfortdelgro/react-compass'\nor\nimport Avatar from '@comfortdelgro/react-compass/avatar'","image-avatars#Image avatars:":"<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?img=32'\nsize='lg'\n/>\n\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?img=31'\nsize='lg'\n/>\n\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?img=60'\nsize='lg'\n/>","letter-avatars#Letter avatars:":"<Avatar label='Albert Einstein' size='lg' />\n\n<Avatar label='Adam Levine' size='lg' />\n\n<Avatar label='Dwane Johnson' size='lg' />","sizes#Sizes:":"<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?img=32'\nsize='xs'\n/>\n\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?img=31'\nsize='sm'\n/>\n\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?img=60'\nsize='md'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e29026704d'\nsize='lg'\n/>","icon-avatars#Icon avatars:":"<Avatar label='Albert Einstein' icon={<BugIcon />} size='lg' />","grouped#Grouped":"<Avatar.Group display={3}>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e29026704d'\nsize='lg'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a0581f4e29d026704d'\nsize='lg'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e429026704d'\nsize='lg'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e42239026704d'\nsize='lg'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a0425e81f4234e429026704d'\nsize='lg'\n/>\n</Avatar.Group>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a0425e81423429026704d'\nsize='lg'\ncss={{opacity: '0.8', '&:hover': {opacity: '0.5', cursor: 'pointer'}}}\n/>","props#Props:":"","avatar-#<Avatar/> :":"Name\tType\tDefault\tDescription\tlabel\tString\t—\tThe label, used as fallback for image. The avatars would show the initials of the labels.\timage\tString \t—\tImage of the avatars takes the highest priority. We pass the image's address as string to this prop.\tsize\txs|sm|md|lg\t—\tSizes of the avatars.\ticon\tReactNode|false| true\tfalse\tThe icon of the alerts. It'd disappear if the value is false.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","avatargroup-#<Avatar.Group/> :":"Name\tType\tDefault\tDescription\tchildren\tReactNode | String\t—\tWe pass our avatars as children props to Avatar.Group.\tdisplay\tNumber\t—\tDisplay prop determines the number of avatar displayed.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/badges":{"title":"Badge","data":{"":"Badges can be used to highlight important bits of information such as labels, notifications, data trends & status.\nYou can see how this component is implemented on\nladle","import#Import:":"import {Badge} from '@comfortdelgro/react-compass'\nor\nimport Badge from '@comfortdelgro/react-compass/badge'","basic#Basic:":"<Badge label='Default' />","colors-#Colors :":"<Badge label='Info' color='info' />\n\n<Badge label='Success' color='success' />\n\n<Badge label='Danger' color='danger' />\n\n<Badge label='Warning' color='warning' />","variants#Variants:":"<Badge label='Primary' color='danger' variant='primary' />\n<Badge label='Secondary' color='danger' variant='secondary' />\n<Badge label='Outline' color='danger' variant='outline' />","default-icon#Default icon:":"<Badge label='Primary' color='info' variant='primary' icon />\n<Badge label='Success' color='success' variant='primary' icon />\n<Badge label='Secondary' color='danger' variant='secondary' icon />\n<Badge label='Outline' color='warning' variant='outline' icon />","custom-icon#Custom icon:":"<Badge\nlabel='LGTM'\ncolor='success'\nvariant='secondary'\nicon={<BugIcon />}\n/>\n<Badge\nlabel='Practice Social Distancing'\ncolor='danger'\nvariant='outline'\nicon={<BugIcon />}\n/>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\n<Badge\nlabel='Outline'\ncolor='warning'\nvariant='outline'\ncss={{color: 'purple', '&:hover': {backgroundColor: 'grey'}}}\n/>","props#Props:":"Name\tType\tDefault\tDescription\tcolor\tinfo | success | warning | danger\tinfo\tThese colors will determine the color of background of the badges.\tlabel\tString \t—\tLable of the badges.\tvariant\tprimary | secondary | outline\tprimary\tVariants will determine the color of the badges' label, border and the darkness of its background .\ticon\tReactNode|false| true\tfalse\tWhen false, no icon is shown in the badge. When true, the default icons are shown. And you can pass in custom icons to this prop.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/banner":{"title":"Banner","data":{"":"The Banner component is a reusable React component that displays a banner or header section on a web page. The Banner component typically contains a large image or background, along with text and other content.\nThe Banner component is designed to be flexible and customizable, with options for changing the background image, the text content, and the styling of the component\nYou can see how this component is implemented on\nladle","import#Import:":"import {Banner} from '@comfortdelgro/react-compass'\nor\nimport Banner from '@comfortdelgro/react-compass/banner'","basic#Basic:":"My Title\n\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti\nesse qui earum dolorum.\n\n\n\n<Banner>\n<Banner.Image src='https://images.unsplash.com/photo-1614227154650-69524d5fb1a5?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80' />\n<Banner.Title>My Title</Banner.Title>\n<Banner.Description>\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti esse\nqui earum dolorum.\n</Banner.Description>\n</Banner>","sizes#Sizes:":"My Title\n\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti\nesse qui earum dolorum.\n\n\n\n\n\nMy Title\n\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti esse\nqui earum dolorum.\n\n\n\n\n\nMy Title\n\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti\nesse qui earum dolorum.\n\n\n\n<Banner size='sm'>\n<Banner.Image src='https://images.unsplash.com/photo-1614227154650-69524d5fb1a5?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80' />\n<Banner.Title>My Title</Banner.Title>\n<Banner.Description>\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti\nesse qui earum dolorum.\n</Banner.Description>\n</Banner>\n\n<Banner size='md'>\n<Banner.Image src='https://images.unsplash.com/photo-1614227154650-69524d5fb1a5?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80' />\n<Banner.Title>My Title</Banner.Title>\n<Banner.Description>\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti esse\nqui earum dolorum.\n</Banner.Description>\n</Banner>\n\n<Banner size='lg'>\n<Banner.Image src='https://images.unsplash.com/photo-1614227154650-69524d5fb1a5?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80' />\n<Banner.Title>My Title</Banner.Title>\n<Banner.Description>\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti\nesse qui earum dolorum.\n</Banner.Description>\n</Banner>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\nMy Title\n\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti\nesse qui earum dolorum.\n\n\n\n<Banner size='md'>\n<Banner.Image src='https://images.unsplash.com/photo-1614227154650-69524d5fb1a5?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80' />\n<Banner.Title css={{color: 'red'}}>My Title</Banner.Title>\n<Banner.Description css={{color: 'white'}}>\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti esse\nqui earum dolorum.\n</Banner.Description>\n</Banner>","props#Props:":"Name\tType\tDefault\tDescription\tsize\tsm|md| lg\t—\tThis prop will determine the size of the banner\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\tonError\tfunction\t—\tThis prop will allow users to handle error when loading the background image of the banner.\n\nCheck out our\nladle\nfor more info on this component."}},"/components/box":{"title":"Box","data":{"":"The Box component serves as a wrapper component for most of the CSS utility needs.\nYou can see how this component is implemented on\nladle","import#Import:":"import {Box} from '@comfortdelgro/react-compass'\nor\nimport Box from '@comfortdelgro/react-compass/box'","the-as-prop#The 'as' prop:":"The 'as' prop refers to the HTML element that the Box component should render as. By default, the Box component will render as a div element, but if you pass a different value to the as prop, it will render as that element instead.\n\n\n\nMy 'div' box\n\n\n\n\n\nMy 'h2' box\n\n\n\n\n<Box\ncss={{\nbackgroundColor: 'grey',\nwidth: '8rem',\ntextAlign: 'center',\nheight: '2rem',\ntextAlign: 'center',\npaddingTop: '0.3rem',\n}}\n>\n<p>My 'div' box</p>\n</Box>\n\n<Box as='h2' color='red'>\n<p>My 'h2' box</p>\n</Box>","dynalic-styling#Dynalic Styling:":"You can use prop 'css' for styling. This is so much powerful than the regular 'style' prop.\n\n\nMy box\n\n\n\n<Box\ncss={{\nbackgroundColor: 'grey',\nwidth: '8rem',\ntextAlign: 'center',\n'& p': {\ncolor: 'white',\n},\n}}\n>\n<p>My box</p>\n</Box>","system-props-you-can-pass-the-box-component#System props you can pass the Box component:":"Name\tType\tDefault\tDescription\tborder\tstring\t\t\tborderBottom\tstring\t\t\tborderColor\tstring\t\t\tborderLeft\tstring\t\t\tborderRadius\tstring\t\t\tborderRight\tstring\t\t\tborderTop\tstring\t\t\tboxShadow\tstring\t\t\tdisplayPrint\tstring\t\t\tdisplayRaw\tstring\t\t\talignContent\tstring\t\t\talignItems\tstring\t\t\talignSelf\tstring\t\t\tflex\tstring\t\t\tflexDirection\tstring\t\t\tflexGrow\tstring\t\t\tflexShrink\tstring\t\t\tflexWrap\tstring\t\t\tjustifyContent\tstring\t\t\torder\tstring\t\t\tgap\tstring\t\t\tcolumnGap\tstring\t\t\trowGap\tstring\t\t\tgridColumn\tstring\t\t\tgridRow\tstring\t\t\tgridAutoFlow\tstring\t\t\tgridAutoColumns\tstring\t\t\tgridAutoRows\tstring\t\t\tgridTemplateColumns\tstring\t\t\tgridTemplateRows\tstring\t\t\tgridTemplateAreas\tstring\t\t\tgridArea\tstring\t\t\tbgcolor\tstring\t\t\tcolor\tstring\t\t\tbottom\tstring\t\t\tleft\tstring\t\t\tposition\tstring\t\t\tright\tstring\t\t\ttop\tstring\t\t\tzIndex\tstring\t\t\theight\tstring\t\t\tmaxHeight\tstring\t\t\tmaxWidth\tstring\t\t\tminHeight\tstring\t\t\tminWidth\tstring\t\t\twidth\tstring\t\t\tboxSizing\tstring\t\t\tmargin\tstring\t\t\tmarginBottom\tstring\t\t\tmarginLeft\tstring\t\t\tmarginRight\tstring\t\t\tmarginTop\tstring\t\t\tmarginX\tstring\t\t\tmarginY\tstring\t\t\tmarginInline\tstring\t\t\tmarginInlineStart\tstring\t\t\tmarginInlineEnd\tstring\t\t\tmarginBlock\tstring\t\t\tmarginBlockStart\tstring\t\t\tmarginBlockEnd\tstring\t\t\tpadding\tstring\t\t\tpaddingBottom\tstring\t\t\tpaddingLeft\tstring\t\t\tpaddingRight\tstring\t\t\tpaddingTop\tstring\t\t\tpaddingX\tstring\t\t\tpaddingY\tstring\t\t\tpaddingInline\tstring\t\t\tpaddingInlineStart\tstring\n\nCheck out our\nladle\nfor more info on this component."}},"/components/breadcrumbs":{"title":"Breadcrumbs","data":{"":"Breadcrumbs consist of a list of links that help a user visualize a page's location within the hierarchical structure of a website, and allow navigation up to any of its \"ancestors\".\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Breadcrumbs} from '@comfortdelgro/react-compass'\nor\nimport Breadcrumbs from '@comfortdelgro/react-compass/breadcrumbs'","basic#Basic:":"const isCurrent = (i: number) => {\nif (window && window.location) return window.location.hash === `#${i}`\nreturn false\n}\n\n;<Breadcrumbs isCurrent={isCurrent}>\n<Breadcrumbs.Item href='#0'>Home</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#1'>Library</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#2' isDisabled>\nDisabled\n</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#3'>Data</Breadcrumbs.Item>\n</Breadcrumbs>","colors-#Colors :":"const isCurrent = (i: number) => {\nif (window && window.location) return window.location.hash === `#${i}`\nreturn false\n}\n;<Breadcrumbs dividerIcon={<BugIcon />} isCurrent={isCurrent}>\n<BreadcrumbItem href='#0'>Home</BreadcrumbItem>\n<BreadcrumbItem href='#1'>Library</BreadcrumbItem>\n<BreadcrumbItem href='#2'>Data</BreadcrumbItem>\n</Breadcrumbs>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\nconst isCurrent = (i: number) => {\nif (window && window.location) return window.location.hash === `#${i}`\nreturn false\n}\n\n;<Breadcrumbs isCurrent={isCurrent}>\n<Breadcrumbs.Item href='#0' css={{'&:hover': {color: 'black'}}}>\nHome\n</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#1' css={{'&:hover': {color: 'black'}}}>\nLibrary\n</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#2' css={{'&:hover': {color: 'black'}}}>\nData\n</Breadcrumbs.Item>\n</Breadcrumbs>","props#Props:":"Name\tType\tDefault\tDescription\tisCurrent\t(i:number) => boolean\tfalse\t\tdividerIcon\tReactNode|false| true\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/buttons":{"title":"Button","data":{"":"Buttons allow users to take actions, and make choices, with a single tap.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Button} from '@comfortdelgro/react-compass'\nor\nimport Button from '@comfortdelgro/react-compass/button'","button-sizes#Button Sizes:":"Large\n\nMedium (Default)\n\nSmall\n\n\n<Button size='lg'>Large</Button>\n<Button size='md'>Medium (Default)</Button>\n<Button size='sm'>Small</Button>","button-with-ripple-effect#Button with ripple effect:":"Primary\n\nSecondary\n\nDanger\n\nGhost\n\n\n<Button variant='primary' ripple>\nPrimary\n</Button>\n<Button variant='secondary' ripple>\nSecondary\n</Button>\n<Button variant='danger' ripple>\nDanger\n</Button>\n<Button variant='ghost' ripple>\nGhost\n</Button>","button-variants#Button Variants:":"Primary\n\nSecondary\n\nDanger\n\nGhost\n\nDisabled\n\n\n<Button variant='primary'>Primary</Button>\n<Button variant='secondary'>Secondary</Button>\n<Button variant='danger'>Danger</Button>\n<Button variant='ghost'>Ghost</Button>\n<Button isDisabled>Disabled</Button>","buttons-with-left-icons-#Buttons with left icons :":"Secondary\n\nDanger\n\nGhost\n\n\n<Button variant='secondary' leftIcon={<Icon icon={faThumbsUp} />}>\nSecondary\n</Button>\n<Button variant='danger' leftIcon={<Icon icon={faThumbsUp} />}>\nDanger\n</Button>\n<Button variant='ghost' leftIcon={<Icon icon={faThumbsUp} />}>\nGhost\n</Button>","buttons-with-right-icons-#Buttons with right icons :":"Secondary\n\nDanger\n\nGhost\n\n\n<Button variant='secondary' rightIcon={<Icon icon={faThumbsUp} />}>\nSecondary\n</Button>\n<Button variant='danger' rightIcon={<Icon icon={faThumbsUp} />}>\nDanger\n</Button>\n<Button variant='ghost' rightIcon={<Icon icon={faThumbsUp} />}>\nGhost\n</Button>","buttons-with-both-left-and-right-icons-#Buttons with both left and right icons :":"Secondary\n\nDanger\n\nGhost\n\n\n<Button variant='secondary' rightIcon={<Icon icon={faThumbsUp} />} leftIcon={<Icon icon={faVirus} />}>\nSecondary\n</Button>\n<Button variant='danger' rightIcon={<Icon icon={faThumbsUp} />} leftIcon={<Icon icon={faVirus} />}>\nDanger\n</Button>\n<Button variant='ghost' rightIcon={<Icon icon={faThumbsUp} />} leftIcon={<Icon icon={faVirus} />}>\nGhost\n</Button>","buttons-with-icons-as-content#Buttons with icons as content:":"import Icon from '@comfortdelgro/react-compass/icon'\n\n<Button variant='secondary'>\n<Icon icon={faVirus} />\n</Button>\n<Button variant='danger'>\n<Icon icon={faVirus} />\n</Button>\n<Button variant='ghost'>\n<Icon icon={faVirus} />\n</Button>","loading-buttons-#Loading buttons :":"Secondary\n\nDanger\n\nGhost\n\n\n<Button variant='secondary' loading>\nSecondary\n</Button>\n<Button variant='danger' loading rightIcon={<Icon icon={faThumbsUp} />}>\nDanger\n</Button>\n<Button variant='ghost' loading rightIcon={<Icon icon={faThumbsUp} />}>\nGhost\n</Button>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\nDanger\n\n\n<Button\nvariant='danger'\nrightIcon={<Icon icon={faThumbsUp} />}\ncss={{'&:hover': {color: 'grey'}}}\n>\nDanger\n</Button>","props#Props:":"Name\tType\tDefault\tDescription\tcolor\tinfo | success | warning | danger\t\t\trightIcon\tReactNode|false| true\t—\t\tleftIcon\tReactNode|false| true\t\t\tvariant\tprimary | secondary | danger | ghost\t\t\tcss\tCSS\t—\t\tisDisabled\t\t\t\tloading\tfalse| true\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/calendar":{"title":"Calendar","data":{"":"Calendars display a grid of days in one or more months and allow users to select a single date.","pre-install#Pre-Install":"Install these packages to use their utilities\n\nbash npm i @react-aria/i18n @internationalized/date\n\nbash yarn add @react-aria/i18n @internationalized/date\n\nbash pnpm add @react-aria/i18n @internationalized/date","import#Import":"import {Calendar} from '@comfortdelgro/react-compass'\nor\nimport Calendar from '@comfortdelgro/react-compass/calendar'","basic#Basic":"<Calendar />","controlled#Controlled":"import {Calendar} from '@comfortdelgro/react-compass'\nimport {\nDateValue,\ngetLocalTimeZone,\nparseDate,\ntoday,\n} from '@internationalized/date'\nimport {useDateFormatter} from '@react-aria/i18n'\n\nfunction ControlledCalendar() {\nconst [date, setDate] = React.useState<DateValue>(\nparseDate(today(getLocalTimeZone()).toString()),\n)\nconst formatter = useDateFormatter({dateStyle: 'full'})\n\nreturn (\n<>\n<p>\n<b>Selected date:</b>\n<span style={{marginLeft: '4px'}}>\n{formatter.format(date.toDate(getLocalTimeZone()))}\n</span>\n</p>\n<Calendar value={date} onChange={(e) => setDate(e)} />\n</>\n)\n}","validation#Validation":"Calendar supports marking certain dates as unavailable. These dates cannot be selected by the user and are displayed with a crossed out appearance. The isDateUnavailable prop accepts a callback that is called to evaluate whether each visible date is unavailable.This example prevents selecting weekends.\n\n\n\n\nfunction ValidatedCalendar() {\nconst {locale} = useLocale()\nreturn <Calendar isDateUnavailable={(date) => isWeekend(date, locale)} />\n}","disabled#Disabled":"<Calendar aria-label='Event date' isDisabled />","read-only#Read only":"<Calendar aria-label='Event date' isReadOnly />","props#Props":"Name\tType\tDefault\tDescription\tminValue\tDateValue\t\tThe minimum allowed date that a user may select.\tmaxValue\tDateValue\t\tThe maximum allowed date that a user may select.\tisReadOnly\tboolean\tfalse\tWhether the calendar value is immutable.\tisDisabled\tboolean\tfalse\tWhether the calendar is disabled.\thasFooter\tboolean\tfalse\tWhether the calendar footer is shown.\tvalue\tDateValue || null\t\tThe current value (controlled).\tdefaultValue\tDateValue\t\tThe default value (uncontrolled).\tonChange\t(e: DateValue || null) => void\t\tThe default value (uncontrolled).\tisDateUnavailable\t(date: DateValue) => boolean\t\tCallback that is called for each date of the calendar. If it returns true, then the date is unavailable.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/cards":{"title":"Cards","data":{"":"Cards provide a flexible and extensible content container with multiple variants and options\nCheck out our ladle for more info on this\ncomponent.","example#Example":"import {Card} from '@comfortdelgro/react-compass'\n\nfunction BasicExample() {\nreturn (\n<Card size='sm'>\n<Card.Body>\n<Card.Title>Card title</Card.Title>\n<p>This is a card paragraph</p>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\nCard title\n\nThis is a card paragraph","content#Content":"","body#Body":"Use <Card.Body> to pad content inside a <Card>.\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction BodyOnlyExample() {\nreturn (\n<Card size='sm'>\n<Card.Body>\n<p>This is a paragraph within a card body</p>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\nThis is a paragraph within a card body","title#Title":"Use <Card.Title> to create a title inside a <Card.Body>.\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction TitleExample() {\nreturn (\n<Card size='sm'>\n<Card.Body>\n<Card.Title>Card title</Card.Title>\n<p>This is a paragraph within a card body</p>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\nCard title\n\nThis is a paragraph within a card body\n\n\n\nYou can also use a different heading tag inside <Card.Title>\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction H1TitleExample() {\nreturn (\n<Card size='lg'>\n<Card.Body>\n<Card.Title>\n<h1>Card title as H1</h1>\n</Card.Title>\n<p>This is a paragraph within a card body</p>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\n\nCard title as H1\n\n\nThis is a paragraph within a card body","action#Action":"Use <Card.Action> to create an area for action buttons in a card <Card.Body>.\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction CardActionExample() {\nreturn (\n<Card size='lg'>\n<Card.Body>\n<Card.Title>Card title as H1</Card.Title>\n<p>This is a paragraph within a card body</p>\n<Card.Action>\n<Button variant='primary'>Button</Button>\n<Button variant='secondary'>Button</Button>\n</Card.Action>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\nCard title as H1\n\nThis is a paragraph within a card body\n\n\nButton\n\nButton","image#Image":"Use <Card.Image> to embed the image in a card <Card>.\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction ImageExample() {\nconst imageSrc =\n'https://images.unsplash.com/flagged/photo-1562503542-2a1e6f03b16b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8c2luZ2Fwb3JlfGVufDB8fDB8fA%3D%3D&w=1000&q=80'\n\nreturn (\n<Card size='lg'>\n<Card.Image src={imageSrc} />\n<Card.Body>\n<Card.Title>Card with image</Card.Title>\n<p>This is a paragraph within a card body</p>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\n\n\nCard with image\n\nThis is a paragraph within a card body","sizes#Sizes":"Card comes with different sizes: sm, lg and full.\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction SizesExample() {\nconst sizes = ['sm', 'lg', 'full']\n\nreturn (\n{sizes.map((size) => (\n<Card size={size}>\n<Card.Body>\n<Card.Title>\nCard with size: {size}\n</Card.Title>\n<p>This is a paragraph within a card body</p>\n</Card.Body>\n</Card>\n))}\n);\n}\n\n\nYou can fully customize the card size.\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction CustomizedWidthExample() {\nconst cardSize = '460px'\n\nreturn (\n<Card css={{width: cardSize}}>\n<Card.Body>\n<Card.Title>Card with customized size</Card.Title>\n<p>This is a paragraph within a card body</p>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\nCard with customized size\n\nThis is a paragraph within a card body","disabled#Disabled":"Card can be disabled by passing isDisabled prop.\nimport {Card} from '@comfortdelgro/react-compass'\nimport Button from '@comfortdelgro/react-compass/button'\n\nfunction DisabledCard() {\nconst isDisabled = true\nreturn (\n<Card size='sm' isDisabled={isDisabled}>\n<Card.Body>\n<Card.Title>Disabled Card</Card.Title>\n<p>This is a paragraph within a card body</p>\n<Card.Action>\n<Button isDisabled={isDisabled} variant='primary'>\nButton\n</Button>\n</Card.Action>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\nDisabled Card\n\nThis is a paragraph within a card body\n\n\nButton","clickable#Clickable":"Card can be clicked and focused by passing isClickable prop.\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction DisabledCard() {\nreturn (\n<Card size='sm' isClickable onClick={() => alert('clicked')}>\n<Card.Body>\n<Card.Title>Clickable Card</Card.Title>\n<p>This is a paragraph within a card body</p>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\nClickable Card\n\nThis is a paragraph within a card body\n\n\nButton","shadowless#Shadowless":"Card will not have shadows when passing isShadowless prop.\nimport {Card} from '@comfortdelgro/react-compass'\n\nfunction DisabledCard() {\nreturn (\n<Card size='sm' isShadowless>\n<Card.Body>\n<Card.Title>Shadowless Card</Card.Title>\n<p>This is a paragraph within a card body</p>\n</Card.Body>\n</Card>\n)\n}\n\n\n\n\nShadowless Card\n\nThis is a paragraph within a card body","props#Props":"","card#Card":"Name\tType\tDefault\tDescription\tchildren\tReactNode\t—\tThe content to display in the Card.\tsize\tsm | lg | full\tfull\tThe size of the Card\tisDisabled\tboolean\tfalse\tWhether the card is disabled.\tisClickable\tboolean\tfalse\tWhether the card is clickable.\tisShadowless\tboolean\tfalse\tWhether the card is shadowless.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","card-body#Card Body":"Name\tType\tDefault\tDescription\tchildren\tReactNode\t—\tThe content to display in the Card Image.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","card-title#Card Title":"Name\tType\tDefault\tDescription\tchildren\tReactNode\t—\tThe content to display in the Card Image.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","card-action#Card Action":"Name\tType\tDefault\tDescription\tchildren\tReactNode\t—\tThe content to display in the Card Image.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","card-image#Card Image":"Name\tType\tDefault\tDescription\tsrc *\tstring\t—\tThe URL of the image.\talt *\tstring\t—\tText description of the image.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles."}},"/components/carousel":{"title":"Carousel","data":{"":"A group of slider components. The core component is CarouselSlider with common feature is switching slides. It allows you to pass a list of children elements, to keep it flexible.\nChildren should be CarouselSlide or CarouselImageSlide. In case you want to customize it, please use slider-side class name for children and active class name for slide that activated.For next version of carousel, we have CarouselSlider.Promotion, this component extends and reuse CarouselSlider component. To use it, you just need to simply pass the array of data into it.The design for mobile mode is too different with desktop mode, we can not handle it by using the same template, so now we have CarouselSlider.Mobile component. Otherwise, CarouselSlider will have basic responsive layout itself.\nCheck out our ladle for more info on this\ncomponent.","components#Components:":"Name\tType\tDefault\tDescription\tCarouselSlider\tComponent\t\tCore slider that can be reused for multiple purpose of sliding things\tCarouselSlider.Promotion\tComponent\t\tNext version of current carousel that extends from CarouselSlider\tCarouselSlider.Mobile\tComponent\t\tSepecial extended version of CarouselSlider to support different layout on mobile\tCarouselSlider.Slide\tComponent\t\tA component that contains slide content\tCarouselSlider.ImageSlide\tComponent\t\tSlide component use for a slider that accept only images","types#Types:":"Name\tType\tDefault\tDescription\tCarouselSliderItem\tCarouselSliderItem\t\tPromotion slider item data\tSocicalIcon\tSocicalIcon\t\tItem contains social icon data: icon and url\tNinePartAlignment\tNinePartAlignment\t\tAlignment that apply for a single slide item, remember to put it into CarouselSliderItem data\tCarouselSliderButton\tCarouselSliderButton\t\tButton that use in sliders definition: type, label, callback\tButtonType\tButtonType\t\tprimary secondary","props#Props:":"Name\tType\tDefault\tDescription\tautoSwitch\tboolean\ttrue\tTo let the slider auto switch in every 300ms\tuseNavigation\tboolean\ttrue\tTo show next and previous buttons\tuseDotIndicator\tboolean\ttrue\tTo show dot indicators\tnavigationButtonType\ticon text\ticon\tTo use arrow icon or next & prev text\teffect\tfade slide\tfade\tThe effect of transition between slides\tdata\tCarouselSliderItem[]\t-\tRequired parameters\tsocials\tSocicalIcon[]\t[]\tList of social icons definition\tbuttons\tCarouselSliderButton[]\t[]\tButtons that displays under the slider, so currently it only works with CarouselMobile","methods#Methods:":"Name\tType\tDefault\tDescription\tonSwitchSlide\t(index: number) => void\tnumber\tEvent that calls when slide has switched","import#Import:":"// Carousel\nimport {CarouselSlider} from '@comfortdelgro/react-compass'\n\n// Types\nimport {\nCarouselSliderButton,\nCarouselSliderItem,\nNinePartAlignment,\nSocicalIcon,\n} from '@comfortdelgro/react-compass'","image-only-slider#Image only slider:":"const [activeIndex, setActiveIndex] = useState(0)\n\nconst imageUrls = [\n'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(15).webp',\n'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(22).webp',\n'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(23).webp',\n]\n\nconst handleSwitchSlide = (index: number) => {\nsetActiveIndex(index)\n}\n\nreturn (\n<CarouselSlider\nonSwitchSlide={handleSwitchSlide}\nclassName='floating-slide'\nstyle={{height: '512px'}}\n>\n{imageUrls.map((imageUrl: string, index: number) => (\n<CarouselSlider.ImageSlide\nkey={index}\nactive={activeIndex === index}\nimageUrl={imageUrl}\n/>\n))}\n</CarouselSlider>\n)","promotion-slider#Promotion slider:":"Let's init some data\n\nconst slideData: CarouselSliderItem[] = [\n{\nimage: 'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(15).webp',\ntitle: 'Content slider is awesome',\ndescription: 'You can put whatever you want here',\nbuttons: [\n{type: 'primary', label: 'Awesome'},\n{type: 'secondary', label: 'Take a tour'},\n],\nmask: 0.2,\n},\n{\nimage: 'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(15).webp',\ntitle: 'This slide contains buttons',\ndescription: 'These button can listen and handle user click event',\nalignment: 'center-end',\nbuttons: [\n{type: 'primary', label: 'Awesome'},\n{type: 'secondary', label: 'Take a tour'},\n],\nmask: 0.5,\n},\n{\nimage: 'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(23).webp',\ntitle: 'This slide has different alignment',\ndescription: 'You can use the document for the other alignment options',\nalignment: 'end-center',\n},\n{\nimage: 'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(15).webp',\ntitle: 'Content slider is awesome',\ndescription: 'You can put whatever you want here',\nmask: 0.1,\n},\n{\nimage: 'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(15).webp',\ntitle: 'This slide contains buttons',\ndescription: 'These button can listen and handle user click event',\nalignment: 'center-end',\n},\n{\nimage: 'https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(23).webp',\ntitle: 'This slide has different alignment',\ndescription: 'You can use the document for the other alignment options',\nalignment: 'end-center',\nmask: 0.3,\n},\n]\n\n\n\n\n\n\n<CarouselSlider.Promotion data={slideData} />","slide-effect#Slide effect":"<CarouselSlider.Promotion data={slideData} effect={'slide'} />","mobile-mode#Mobile mode:":"<CarouselSlider.Mobile\ndata={slideData}\nuseNavigation={false}\nbuttons={buttons}\n/>","mobile---floating-content#Mobile - floating content:":"<CarouselSlider.Mobile\ndata={slideData}\nfloatingContent={true}\nbuttons={buttons}\n/>","pause#Pause:":"<CarouselSlider.Promotion data={slideData} autoSwitch={false} />","slide-alignment#Slide alignment:":"// Nine parts alignment\n* 'start-start'\n* 'center-start'\n* 'end-start'\n* 'start-center'\n* 'center-center'\n* 'end-center'\n* 'start-end'\n* 'center-end'\n* 'end-end'\nconst slides: CarouselSliderItem[] = [\n{\n...\ntitle: 'This slide contains buttons',\ndescription: 'These button can listen and handle user click event',\n\n// Place your alignment here\nalignment: 'start-start',\n...\n},\n]\n<CarouselSlider.Promotion data={alignmentData} autoSwitch={false} />","with-socials-icons#With socials icons:":"import BugIcon from '@comfortdelgro/compass-icons/react/bug'\n\nconst socials: SocicalIcon[] = [\n{\nicon: <BugIcon />,\nurl: 'https://www.pinterest.com.au/',\n},\n{icon: <BugIcon />, url: 'https://www.tiktok.com/'},\n{icon: <BugIcon />, url: 'https://telegram.org/'},\n]\n\nexport const PromotionSliderWithSocials = () => {\nreturn <CarouselSlider.Promotion data={slideData} socials={socials} />\n}","text-buttons#Text buttons:":"<CarouselSlider onSwitchSlide={handleSwitchSlide} navigationButtonType='text'>\n...Slider content\n</CarouselSlider>\n\nOr\n<CarouselSlider.Promotion onSwitchSlide={handleSwitchSlide} navigationButtonType='text'/>\n\nOr\n<CarouselSlider.Mobile onSwitchSlide={handleSwitchSlide} navigationButtonType='text'/>","any-content-slider#Any content slider:":"const [activeIndex, setActiveIndex] = useState(0)\n\nconst handleSwitchSlide = (index: number) => {\nsetActiveIndex(index)\n}\n\nreturn (\n<CarouselSlider onSwitchSlide={handleSwitchSlide}>\n<CarouselSlider.Slide active={activeIndex === 0}>\n<h3>First slide</h3>\n<br />\nYou can put any content here\n<br />\nReplace this content with everything you want\n<br />\nWith your own custom styles\n<br />\n<i>The gray background here is just for this sample</i>\n</CarouselSlider.Slide>\n<CarouselSlider.Slide active={activeIndex === 1}>\n<h3>Second slide</h3>\n<br />\nEven if you&apos;re using a <b>rich text content</b>,{' '}\n<i>It also works!</i>\n<br />\n<Image\nwidth={100}\nheight={100}\nalt='sample image'\nsrc='https://mdbcdn.b-cdn.net/img/Photos/Slides/img%20(15).webp'\n/>\n</CarouselSlider.Slide>\n<CarouselSlider.Slide active={activeIndex === 2}>\n<h3>This is the last slide</h3>\n</CarouselSlider.Slide>\n</CarouselSlider>\n)\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/chart":{"title":"Chart","data":{"":"The Chart using for visualize your data.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Chart} from '@comfortdelgro/react-compass'\nor\nimport Chart from '@comfortdelgro/react-compass/chart'","column#Column:":"<Chart.Column\nlabels={['January', 'February', 'March', 'April', 'May', 'June', 'July']}\ndata={[\n{\nlabel: 'Dataset 1',\ndata: new Array(7).fill(0).map(() => Math.floor(Math.random() * 1000)),\n},\n{\nlabel: 'Dataset 2',\ndata: new Array(7).fill(0).map(() => Math.floor(Math.random() * 1000)),\n},\n]}\ntitle='Column Chart'\n/>","bar#Bar:":"<Chart.Bar\nlabels={['January', 'February', 'March', 'April', 'May', 'June', 'July']}\ndata={[\n{\nlabel: 'Dataset 1',\ndata: new Array(7).fill(0).map(() => Math.floor(Math.random() * 1000)),\n},\n{\nlabel: 'Dataset 2',\ndata: new Array(7).fill(0).map(() => Math.floor(Math.random() * 1000)),\n},\n]}\ntitle='Bar Chart'\n/>","line#Line:":"<Chart.Line\nlabels={['January', 'February', 'March', 'April', 'May', 'June', 'July']}\ndata={[\n{\nlabel: 'Dataset 1',\ndata: new Array(7).fill(0).map(() => Math.floor(Math.random() * 1000)),\n},\n{\nlabel: 'Dataset 2',\ndata: new Array(7).fill(0).map(() => Math.floor(Math.random() * 1000)),\n},\n]}\ntitle='Line Chart'\n/>","area#Area:":"<Chart.Area\nlabels={['January', 'February', 'March', 'April', 'May', 'June', 'July']}\ndata={[\n{\nlabel: 'Dataset 1',\ndata: new Array(7).fill(0).map(() => Math.floor(Math.random() * 1000)),\n},\n{\nlabel: 'Dataset 2',\ndata: new Array(7).fill(0).map(() => Math.floor(Math.random() * 1000)),\n},\n]}\ntitle='Area Chart'\n/>","props#Props:":"Name\tType\tDefault\tDescription\tdata\tDataset[]\t-\tData set of the chart\tlabels\tstring[]\t-\tList of lables in the chart\tunit\tstring\t-\tUnit of the dataset lables\ttitle\tstring\t-\tDisplay title of the chart\thideYAxis\tboolean\tfalse\tHide the y-axis of the chart\thideXAxis\tboolean\tfalse\tHide the x-axis of the chart\tlegendPosition\ttop|bottom|left|right\tfalse\tPosition of the legends\nType of DataSet includes:\nName\tType\tDefault\tDescription\t\tlabel\tstring\t-\tName of the dataset\t\tdata\tnumber[]\t-\tList of value in dataset\t\tbackgroundColor\tstring\t-\tBackground color in 1 point of the dataset\t\tborderColor\tstring\t-\tBorder color in 1 point of the dataset\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/checkbox":{"title":"Checkbox","data":{"":"Checkbox is a small interactive box that can be toggled by the user to indicate an affirmative or negative choice.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Checkbox} from '@comfortdelgro/react-compass'\nor\nimport Checkbox from '@comfortdelgro/react-compass/checkbox'","example-checkbox#Example Checkbox:":"Default\n\n\nUnselected\n\nSelected\n\nUnselected (disabled)\n\nSelected (disabled)\n\nIndeterminate\n\nIndeterminate (disabled)\n\nRead ony\n\n\nRounded\n\n\nUnselected\n\nSelected\n\nUnselected (disabled)\n\nSelected (disabled)\n\nIndeterminate\n\nIndeterminate (disabled)\n\nRead ony\n\n\nUncontrolled\n\n\nUnselected\n\nSelected\n\nUnselected (disabled)\n\nSelected (disabled)\n\nIndeterminate\n\nIndeterminate (disabled)\n\n\nWithout Labels\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n4. HTML forms\n\n\n\nSubscribe\n\n\n\n\n\n<Column>\n<Column>\n<Checkbox isSelected={false}>Unselected</Checkbox>\n<Checkbox isSelected>Selected</Checkbox>\n<Checkbox isDisabled>Unselected (disabled)</Checkbox>\n<Checkbox isSelected isDisabled>\nSelected (disabled)\n</Checkbox>\n<Checkbox isIndeterminate isSelected>\nIndeterminate\n</Checkbox>\n<Checkbox isIndeterminate isDisabled isSelected>\nIndeterminate (disabled)\n</Checkbox>\n</Column>\n\n<h3>Rounded</h3>\n<Column>\n<Checkbox variant='rounded' isSelected={false}>\nUnselected\n</Checkbox>\n<Checkbox variant='rounded' isSelected>\nSelected\n</Checkbox>\n<Checkbox variant='rounded' isDisabled>\nUnselected (disabled)\n</Checkbox>\n<Checkbox variant='rounded' isSelected isDisabled>\nSelected (disabled)\n</Checkbox>\n<Checkbox variant='rounded' isIndeterminate isSelected>\nIndeterminate\n</Checkbox>\n<Checkbox variant='rounded' isIndeterminate isDisabled isSelected>\nIndeterminate (disabled)\n</Checkbox>\n</Column>\n\n<h3>Uncontrolled</h3>\n<Column>\n<Checkbox variant='rounded'>Unselected</Checkbox>\n<Checkbox variant='rounded' defaultSelected>\nSelected\n</Checkbox>\n<Checkbox variant='rounded' isDisabled>\nUnselected (disabled)\n</Checkbox>\n<Checkbox variant='rounded' defaultSelected isDisabled>\nSelected (disabled)\n</Checkbox>\n<Checkbox variant='rounded' isIndeterminate defaultSelected>\nIndeterminate\n</Checkbox>\n<Checkbox variant='rounded' isIndeterminate isDisabled defaultSelected>\nIndeterminate (disabled)\n</Checkbox>\n</Column>\n\n<h3>Without Labels</h3>\n<Column>\n<Row>\n<Checkbox />\n<Checkbox defaultSelected />\n<Checkbox isDisabled />\n<Checkbox defaultSelected isDisabled />\n<Checkbox isIndeterminate defaultSelected />\n<Checkbox isIndeterminate isDisabled defaultSelected />\n</Row>\n<Row>\n<Checkbox variant='rounded' />\n<Checkbox variant='rounded' defaultSelected />\n<Checkbox variant='rounded' isDisabled />\n<Checkbox variant='rounded' defaultSelected isDisabled />\n<Checkbox variant='rounded' isIndeterminate defaultSelected />\n<Checkbox variant='rounded' isIndeterminate isDisabled defaultSelected />\n</Row>\n</Column>\n\n<h3>4. HTML forms</h3>\n<Column>\n<Row>\n<Checkbox name='newsletter' value='subscribe'>\nSubscribe\n</Checkbox>\n</Row>\n</Column>\n</Column>","props#Props:":"Name\tType\tDefault\tDescription\tisSelected\tboolean\t—\t\tvariant\t'default' or 'rounded'\t—\t\tisIndeterminate\tboolean\t—\t\tdefaultSelected\tboolean\t—\t\tisDisabled\tboolean\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/dashboard-sidecard":{"title":"Dashboard Sidecard","data":{"":"Dashboard Sidecard presents section of data on dashboard.\nCheck out our ladle for more info\non this component.","import#Import:":"import {DashboardSidecard} from '@comfortdelgro/react-compass'\nor\nimport DashboardSidecard from '@comfortdelgro/react-compass/dashboard-sidecard'","basic#Basic:":"My header\n\n\n\nTitle\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Quo hic quae,\nadipisci tempore minus beatae itaque tenetur.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTitle\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Quo hic quae,\nadipisci tempore minus beatae itaque tenetur.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAction\n\nWarning\n\n\n\n\n<DashboardSidecard>\n<DashboardSidecard.Header>My header</DashboardSidecard.Header>\n<DashboardSidecard.Content>\n<div\nstyle={{\nbackgroundColor: 'white',\nborderRadius: '8px',\nwidth: '100%',\nheight: '11rem',\npadding: '1rem',\ndisplay: 'flex',\nflexDirection: 'column',\njustifyContent: 'space-between',\n}}\n>\n<div style={{fontWeight: '500', fontSize: '1.2em'}}>Title</div>\n<div\nstyle={{\nfontSize: '0.8em',\ntextAlign: 'justify',\n}}\n>\nLorem ipsum dolor sit amet consectetur adipisicing elit. Quo hic quae,\nadipisci tempore minus beatae itaque tenetur.\n</div>\n<Avatar.Group display={3} size='sm'>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e29026704d'\nsize='sm'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a0581f4e29d026704d'\nsize='sm'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e429026704d'\nsize='sm'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e42239026704d'\nsize='sm'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a0425e81f4234e429026704d'\nsize='sm'\n/>\n</Avatar.Group>\n</div>\n</DashboardSidecard.Content>\n<DashboardSidecard.Content>\n<div\nstyle={{\nbackgroundColor: 'white',\nborderRadius: '8px',\nwidth: '100%',\nheight: '11rem',\npadding: '1rem',\ndisplay: 'flex',\nflexDirection: 'column',\njustifyContent: 'space-between',\n}}\n>\n<div style={{fontWeight: '500', fontSize: '1.2em'}}>Title</div>\n<div\nstyle={{\nfontSize: '0.8em',\ntextAlign: 'justify',\n}}\n>\nLorem ipsum dolor sit amet consectetur adipisicing elit. Quo hic quae,\nadipisci tempore minus beatae itaque tenetur.\n</div>\n<Avatar.Group display={3} size='sm'>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e29026704d'\nsize='sm'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a0581f4e29d026704d'\nsize='sm'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e429026704d'\nsize='sm'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a042581f4e42239026704d'\nsize='sm'\n/>\n<Avatar\nlabel='Albert Einstein'\nimage='https://i.pravatar.cc/150?u=a0425e81f4234e429026704d'\nsize='sm'\n/>\n</Avatar.Group>\n</div>\n<div\nstyle={{\nwidth: '100%',\ndisplay: 'flex',\njustifyContent: 'space-between',\n}}\n>\n<Button css={{width: '48%'}}>Action</Button>\n<Button variant='danger' css={{width: '48%'}}>\nWarning\n</Button>\n</div>\n</DashboardSidecard.Content>\n</DashboardSidecard>","file-preview-props#File Preview Props:":"Name\tType\tDefault\tDescription\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info\non this component."}},"/components/date-picker":{"title":"DatePicker","data":{"":"DatePickers combine input and a Calendar popover to allow users to enter or select a date","pre-install#Pre-Install":"Install these packages to use their utilities\n\nbash npm i @react-aria/i18n @internationalized/date\n\nbash yarn add @react-aria/i18n @internationalized/date\n\nbash pnpm add @react-aria/i18n @internationalized/date","import#Import":"import {DatePicker} from '@comfortdelgro/react-compass'\nor\nimport DatePicker from '@comfortdelgro/react-compass/date-picker'","i18nprovider#I18nProvider":"I18nProvider allows you to override the default locale as determined by the browser/system setting with a locale defined by your application (e.g. application setting).\nIn this docs, we will use English(Singapore) en-SG as default locale","basic#Basic":"<DatePicker label='Date' />","controlled#Controlled":"import {DatePicker} from '@comfortdelgro/react-compass'\nimport {\nDateValue,\ngetLocalTimeZone,\nparseDate,\ntoday,\n} from '@internationalized/date'\nimport {I18nProvider, useDateFormatter} from '@react-aria/i18n'\n\nexport function ControlledDatePickers() {\nconst [date, setDate] = useState<DateValue>(\nparseDate(today(getLocalTimeZone()).toString()),\n)\n\nconst formatter = useDateFormatter({dateStyle: 'full'})\n\nreturn (\n<I18nProvider locale='en-SG'>\n<p>\n<b>Selected date:</b>\n<span style={{marginLeft: '4px'}}>\n{formatter.format(date.toDate(getLocalTimeZone()))}\n</span>\n</p>\n<DatePicker\nlabel='Date'\nvalue={date}\ndefaultValue={today(getLocalTimeZone())}\nonChange={setDate}\n/>\n</I18nProvider>\n)\n}","granularity#Granularity":"The granularity prop allows you to control the smallest unit that is displayed by a DatePicker.\n\n\n\n\n<DatePicker label='Date' granularity='second' />","labeling#Labeling":"A visual label should be provided for the DatePicker using the label prop. If the DatePicker is required, the isRequired and necessityIndicator props can be used to show a required state.\n\n\n\n\n\n\n\n\n\n\n<DatePicker label='Date'/>\n<DatePicker label='Date' isRequired necessityIndicator=\"icon\"/>\n<DatePicker label='Date' isRequired necessityIndicator=\"label\"/>\n<DatePicker label=\"Date\" necessityIndicator=\"label\" />","validation#Validation":"function ValidatedDatePickers() {\nconst {locale} = useLocale()\n\nreturn (\n<DatePicker\nlabel='Date'\nisDateUnavailable={(date) => isWeekend(date, locale)}\n/>\n)\n}","disabled#Disabled":"<DatePicker isDisabled />","read-only#Read only":"<DatePicker isReadOnly />","invalid#Invalid":"<DatePicker isInvalid />","props#Props":"Name\tType\tDefault\tDescription\tcalendarCSS\tCSS\t\tStyle for calendar\tminValue\tDateValue\t\tThe minimum allowed date that a user may select.\tmaxValue\tDateValue\t\tThe maximum allowed date that a user may select.\tgranularity\t'day' | 'hour' | 'minute' | 'second'\t\tDetermines the smallest unit that is displayed in the date picker. By default, this is \"day\" for dates, and \"minute\" for times.\tisReadOnly\tboolean\tfalse\tWhether the calendar value is immutable.\tisDisabled\tboolean\tfalse\tWhether the calendar is disabled.\tvalue\tDateValue\t\tThe current value (controlled).\tdefaultValue\tDateValue\t\tThe default value (uncontrolled).\thourCycle\t12                                       | 24\t\tWhether to display the time in 12 or 24 hour format. By default, this is determined by the user's locale.\tlabel\tReact.ReactNode\t\tThe content to display as the label.\thelperText\tReact.ReactNode\t\tThe content to display as helper text\tnecessityIndicator\t'icon' | 'label'\t\tWhether the required state should be shown as an icon or text.\tshouldCloseOnSelect\tboolean\tfalse\tWhether the overlay will close after selected. If granularity is selected, shouldCloseOnSelect will be set to true due to core library issues\tisMobile\tboolean\tfalse\tWhether the overlay is in mobile variant.\tisOpen\tboolean\tfalse\tWhether the overlay is open by default (controlled).\tdefaultOpen\tboolean\tfalse\tWhether the overlay is open by default (uncontrolled).\tonChange\t(e: DateValue) => void\t\tThe default value (uncontrolled).\tonCancel\t() => void\t\tCallback that is called when the cancel button is triggered\tisDateUnavailable\t(date: DateValue) => boolean\t\tCallback that is called for each date of the calendar. If it returns true, then the date is unavailable.\n\nCheck out our ladle for more info on\nthis component."}},"/components/date-range-picker":{"title":"DateRangePicker","data":{"":"DateRangePickers combine two inpui fields and a RangeCalendar popover to allow users to enter or select a date and time range.","pre-install#Pre-Install":"Install these packages to use their utilities\n\nbash npm i @react-aria/i18n @internationalized/date\n\nbash yarn add @react-aria/i18n @internationalized/date\n\nbash pnpm add @react-aria/i18n @internationalized/date","import#Import":"import {DateRangePicker} from '@comfortdelgro/react-compass'\nor\nimport DateRangePicker from '@comfortdelgro/react-compass/date-range-picker'","i18nprovider#I18nProvider":"I18nProvider allows you to override the default locale as determined by the browser/system setting with a locale defined by your application (e.g. application setting).\nIn this docs, we will use English(Singapore) en-SG as default locale","basic#Basic":"<DateRangePicker startDateLabel='Start Date' endDateLabel='End Date' />","controlled#Controlled":"import {DateRangePicker, RangeValue} from '@comfortdelgro/react-compass'\nimport {DateValue, getLocalTimeZone, parseDate} from '@internationalized/date'\nimport {I18nProvider, useDateFormatter} from '@react-aria/i18n'\n\nfunction ControlledDateRangePicker() {\nconst [range, setRange] = useState<RangeValue<DateValue>>({\nstart: parseDate('2020-02-03'),\nend: parseDate('2020-02-08'),\n})\nconst formatter = useDateFormatter({dateStyle: 'long'})\n\nconst onChangeDateRangePicker = (value: RangeValue<DateValue> | null) => {\nsetRange(value as RangeValue<DateValue>)\n}\n\nreturn (\n<I18nProvider locale='en-SG'>\n{range &&\nformatter.formatRange(\nrange.start.toDate(getLocalTimeZone()),\nrange.end.toDate(getLocalTimeZone()),\n)}\n<DateRangePicker value={range} onChange={onChangeDateRangePicker} />\n</I18nProvider>\n)\n}","granularity#Granularity":"The granularity prop allows you to control the smallest unit that is displayed by a DateRangePicker.\n\n\n\n\n<DateRangePicker granularity='second' />","labeling#Labeling":"DateRangePicker component receives two props startDateLabel and endDateLabelA visual label should be provided for the DatePicker using the label prop. If the DateRangePicker is required, the isRequired and necessityIndicator props can be used to show a required state.\n\n\n\n\n\n\n\n\n\n\n<DateRangePicker startDateLabel='Start Date'/>\n<DateRangePicker startDateLabel='Start Date' endDateLabel=\"End Date\" isRequired necessityIndicator=\"icon\" />\n<DateRangePicker startDateLabel='Start Date' endDateLabel=\"End Date\" isRequired necessityIndicator=\"label\" />\n<DateRangePicker startDateLabel=\"Start Date\" endDateLabel=\"End Date\" necessityIndicator=\"label\" />","validation#Validation":"Date Range Picker supports marking certain dates as unavailable. These dates cannot be selected by the user and are displayed with a crossed out appearance. The isDateUnavailable prop accepts a callback that is called to evaluate whether each visible date is unavailable.These examples prevent selecting weekends.","contiguous-ranges#Contiguous ranges":"function ValidatedDateRangePickers() {\nconst {locale} = useLocale()\n\nreturn (\n<DateRangePicker isDateUnavailable={(date) => isWeekend(date, locale)} />\n)\n}","non-contiguous-ranges#Non-contiguous ranges":"The allowsNonContiguousRanges prop enables a range to be selected even if there are unavailable dates in the middle.\nThe value emitted in the onChange event will still be a single range with a start and end property,\nbut unavailable dates will not be displayed as selected.\nIt is up to applications to split the full selected range into multiple as needed for business logic.\n\n\n\n\nfunction ValidatedDateRangePickers() {\nconst {locale} = useLocale()\n\nreturn (\n<DateRangePicker isDateUnavailable={(date) => isWeekend(date, locale)} />\n)\n}","disabled#Disabled":"<DateRangePicker isDisabled />","read-only#Read only":"<DateRangePicker isReadOnly />","invalid#Invalid":"<DateRangePicker isInvalid />","props#Props":"Name\tType\tDefault\tDescription\tcalendarCSS\tCSS\t\tStyle for calendar\tallowsNonContiguousRanges\tboolean\t\tWhen combined with isDateUnavailable, determines whether non-contiguous ranges, i.e. ranges containing unavailable dates, may be selected.\tminValue\tDateValue\t\tThe minimum allowed date that a user may select.\tmaxValue\tDateValue\t\tThe maximum allowed date that a user may select.\tgranularity\t'day' | 'hour' | 'minute' | 'second'\t\tDetermines the smallest unit that is displayed in the date picker. By default, this is \"day\" for dates, and \"minute\" for times.\tisReadOnly\tboolean\tfalse\tWhether the calendar value is immutable.\tisDisabled\tboolean\tfalse\tWhether the calendar is disabled.\tvalue\tRangeValue<DateValue>\t\tThe current value (controlled).\tdefaultValue\tRangeValue<DateValue>\t\tThe default value (uncontrolled).\thourCycle\t12                                       | 24\t\tWhether to display the time in 12 or 24 hour format. By default, this is determined by the user's locale.\tstartDateLabel\tReact.ReactNode\t\tThe content to display as the label.\tendDateLabel\tReact.ReactNode\t\tThe content to display as the label.\thelperText\tReact.ReactNode\t\tThe content to display as helper text\tnecessityIndicator\t'icon' | 'label'\t\tWhether the required state should be shown as an icon or text.\tshouldCloseOnSelect\tboolean\tfalse\tWhether the overlay will close after selected.\tisMobile\tboolean\tfalse\tWhether the overlay is in mobile variant.\tisOpen\tboolean\tfalse\tWhether the overlay is open by default (controlled).\tdefaultOpen\tboolean\tfalse\tWhether the overlay is open by default (uncontrolled).\tonChange\t(e: RangeValue<MappedDateValue<DateValue>>) => void\t\tThe default value (uncontrolled).\tonCancel\t() => void\t\tCallback that is called when the cancel button is triggered\tonApply\t(e: RangeValue<MappedDateValue<DateValue>>) => void\t\tCallback that is called when the apply button is triggered\tisDateUnavailable\t(date: DateValue) => boolean\t\tCallback that is called for each date of the calendar. If it returns true, then the date is unavailable.\n\nCheck out our ladle for more info\non this component."}},"/components/dialog":{"title":"Dialog","data":{"":"These Dialog boxes can be used to raise and alert, or to get confirmation on any input or to have a kind of input from the users. Here we will discuss each dialog box one by one.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Dialog} from '@comfortdelgro/react-compass'\nor\nimport Dialog from '@comfortdelgro/react-compass/dialog'","basic-dialog#Basic Dialog:":"<Button\ncss={{width: '7.8rem'}}\nonPress={() => setDefaultOpen(true)}\nvariant='secondary'\n>\nOpen Dialog\n</Button>\n<Dialog.Trigger\nisOpen={defaultOpen}\nhandleClose={() => setDefaultOpen(false)}\n>\n<Dialog>\n<Dialog.Title>My title</Dialog.Title>\n<Dialog.Description>{lorem}</Dialog.Description>\n<Dialog.Actions>\n<Button onPress={() => setDefaultOpen(false)} variant='secondary'>\nCancel\n</Button>\n<Button onPress={() => setDefaultOpen(false)} variant='secondary'>\nDo it\n</Button>\n</Dialog.Actions>\n</Dialog>\n</Dialog.Trigger>","variant-dialog#Variant Dialog:":"<Button\ncss={{width: '7.8rem'}}\nonPress={() => setConfirmationOpen(true)}\nvariant='secondary'\n>\nOpen Dialog\n</Button>\n<Dialog.Trigger\nisOpen={confirmationOpen}\nhandleClose={() => setConfirmationOpen(false)}\nvariant='confirmation'\n>\n<Dialog>\n<Dialog.Title>My title</Dialog.Title>\n<Dialog.Description>{lorem}</Dialog.Description>\n<Dialog.Actions>\n<Button onPress={() => setConfirmationOpen(false)} variant='secondary'>\nCancel\n</Button>\n<Button onPress={() => setConfirmationOpen(false)} variant='secondary'>\nDo it\n</Button>\n</Dialog.Actions>\n</Dialog>\n</Dialog.Trigger>\n\n<Button\ncss={{width: '7.8rem'}}\nonPress={() => setAlertOpen(true)}\nvariant='danger'\n>\nOpen Dialog\n</Button>\n<Dialog.Trigger\nisOpen={alertOpen}\nhandleClose={() => setAlertOpen(false)}\nvariant='alert'\n>\n<Dialog>\n<Dialog.Title>My title</Dialog.Title>\n<Dialog.Description>{lorem}</Dialog.Description>\n<Dialog.Actions>\n<Button onPress={() => setAlertOpen(false)}>Ok</Button>\n</Dialog.Actions>\n<Dialog.Icon>\n<Icon icon={faBug} />\n</Dialog.Icon>\n</Dialog>\n</Dialog.Trigger>","props#Props:":"Name\tType\tDefault\tDescription\tonClose\t() => void\t—\t\tvariant\t\"confirmation\" or \"alert\"\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/divider":{"title":"Divider","data":{"":"A divider is a thin line that groups content in lists and layouts.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Divider} from '@comfortdelgro/react-compass'\nor\nimport Divider from '@comfortdelgro/react-compass/divider'","basic-divider#Basic Divider:":"<Divider />\n<Divider orientation='vertical' />","align-divider#Align Divider:":"Left\n\n\n\nCenter\n\n\n\nRight\n\n\n\n<Divider textAlign='left'>\n<span>Left</span>\n</Divider>\n<Divider textAlign='center'>\n<span>Center</span>\n</Divider>\n<Divider textAlign='right'>\n<span>Right</span>\n</Divider>","props#Props:":"Name\tType\tDefault\tDescription\tcolor\tstring\t—\tColor of the line.\tflexItem\tBoolean\tfalse\tIf true, a vertical divider will have the correct height when used in flex container. (By default, a vertical divider will have a calculated height of 0px if it is the child of a flex container.)\tabsolute\tBoolean\tfalse\tAbsolutely position the element.\tchildren\tNode\t—\tThe content of the component.\tcomponent\tJSX.IntrinsicElements\t—\tThe component used for the root node. Either a string to use a HTML element or a component.\ttextAlign\tcenter| right| left| top| bottom\tcenter\tThe text alignment.\torientation\tvertical| horizontal\thorizontal\tThe component orientation.\tvariant\tfullWidth| inset| middle\tfullWidth\tThe variant to use.\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/dropdown":{"title":"Dropdown","data":{"":"Dropdown components are used for collecting user provided information from a list of options.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Dropdown} from '@comfortdelgro/react-compass'\nor\nimport Dropdown from '@comfortdelgro/react-compass/dropdown'\nWe recommend the second method to import components for the benefits of tree shaking.","select-controlled#Select Controlled:":"We provide 3 type of dropdown that can be used to select: Dropdown.Select, Dropdown.ComboBox and Dropdown.Flag","controlled#Controlled:":"const [value, setValue] = React.useState<Key>('cat')\n<Dropdown.Select\nisRequired\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nselectedKey={value}\nonSelectionChange={(k: React.Key) => setValue(k)}\n>\n<Dropdown.Item\nkey='red panda'\nleftIcon={<BugIcon />}\n>\nRed Panda Red Panda Red Panda Red Panda Red Panda\n</Dropdown.Item>\n<Dropdown.Item\nkey='cat'\nleftIcon={<BugIcon />}\ntype='color'\nrightColor='red'\ntextValue='pandared'\n>\nCat Red Panda Red Panda Red Panda Red Panda Red Panda\n</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snakessss'>Snake</Dropdown.Item>\n</Dropdown.Select>\n<Dropdown.ComboBox\nisRequired\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nselectedKey={value}\nonSelectionChange={(k: React.Key) => setValue(k)}\n>\n<Dropdown.Item\nkey='red panda'\nleftIcon={<BugIcon />}\n>\nRed Panda Red Panda Red Panda Red Panda Red Panda\n</Dropdown.Item>\n<Dropdown.Item\nkey='cat'\nleftIcon={<BugIcon />}\ntype='color'\nrightColor='red'\ntextValue='pandared'\n>\nCat Red Panda Red Panda Red Panda Red Panda Red Panda\n</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snakessss'>Snake</Dropdown.Item>\n</Dropdown.ComboBox>","uncontrolled#UnControlled:":"Red Panda Red Panda Red Panda Red Panda Red Panda\n\nCat Red Panda Red Panda Red Panda Red Panda Red Panda\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\nRed Panda Red Panda Red Panda Red Panda Red Panda\n\nCat Red Panda Red Panda Red Panda Red Panda Red Panda\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<Dropdown.Select\nisRequired\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\n>\n<Dropdown.Item key='red panda'>\nRed Panda Red Panda Red Panda Red Panda Red Panda\n</Dropdown.Item>\n<Dropdown.Item key='cat' type='color' rightColor='red' textValue='pandared'>\nCat Red Panda Red Panda Red Panda Red Panda Red Panda\n</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snakessss'>Snake</Dropdown.Item>\n</Dropdown.Select>\n<Dropdown.ComboBox\nisRequired\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\n>\n<Dropdown.Item key='red panda'>\nRed Panda Red Panda Red Panda Red Panda Red Panda\n</Dropdown.Item>\n<Dropdown.Item key='cat' type='color' rightColor='red' textValue='pandared'>\nCat Red Panda Red Panda Red Panda Red Panda Red Panda\n</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snakessss'>Snake</Dropdown.Item>\n</Dropdown.ComboBox>","error#Error:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<Dropdown.Select\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nisErrored\nerrorMessage='Use Helper Text for Errors'\n>\n<Dropdown.Item key='red panda' leftIcon={<BugIcon />}>\nRed Panda\n</Dropdown.Item>\n<Dropdown.Item key='cat' type='color' rightColor='red'>\nCat\n</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snake'>Snake</Dropdown.Item>\n</Dropdown.Select>","allows-custom-value#Allows Custom Value:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<Dropdown.ComboBox\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nallowsCustomValue\nerrorMessage='Use Helper Text for Errors'\n>\n<Dropdown.Item key='red panda' leftIcon={<BugIcon />}>\nRed Panda\n</Dropdown.Item>\n<Dropdown.Item key='cat' type='color' rightColor='red'>\nCat\n</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snake'>Snake</Dropdown.Item>\n</Dropdown.ComboBox>","with-section#With Section:":"Fly\n\n\nRed Panda\n\nCat\n\nDog\n\n\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n\n<Dropdown.Select label='Favorite Animal' placeholder='Choose an animal'>\n<Dropdown.Item key='fly'>Fly</Dropdown.Item>\n<Dropdown.Section title='Group 1'>\n<Dropdown.Item key='red panda'>Red Panda</Dropdown.Item>\n<Dropdown.Item key='cat'>Cat</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n</Dropdown.Section>\n<Dropdown.Section title='Group 2'>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snake'>Snake</Dropdown.Item>\n</Dropdown.Section>\n</Dropdown.Select>","with-header#With Header:":"Filter\n\nClear\n\n\n\nRed Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<Dropdown.Select label='Favorite Animal' placeholder='Choose an animal'>\n<Dropdown.Header>\n<div\nstyle={{\ndisplay: 'flex',\nalignItems: 'center',\njustifyContent: 'space-between',\nwidth: '100%',\npadding: '8px 16px',\nborderBottom: '2px solid #EDEBE9',\n}}\n>\n<span\nstyle={{\ncolor: '#323130',\nfontSize: '12px',\nfontWeight: 'bold',\npadding: 0,\nmargin: 0,\n}}\n>\nFilter\n</span>\n<button\nstyle={{\nfontSize: '12px',\nfontWeight: 'bold',\ncolor: '#A4262C',\nborder: 0,\ncursor: 'pointer',\nbackgroundColor: 'transparent',\n}}\n>\nClear\n</button>\n</div>\n</Dropdown.Header>\n<Dropdown.Item key='red panda'>Red Panda</Dropdown.Item>\n<Dropdown.Item key='cat'>Cat</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snake'>Snake</Dropdown.Item>\n</Dropdown.Select>","with-icon#With Icon:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<Dropdown.Select\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nicon={<BugIcon />}\n>\n<Dropdown.Item key='red panda'>Red Panda</Dropdown.Item>\n<Dropdown.Item key='cat'>Cat</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snake'>Snake</Dropdown.Item>\n</Dropdown.Select>","loading#Loading:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<Dropdown.Select\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nisLoading\n>\n<Dropdown.Item key='red panda'>Red Panda</Dropdown.Item>\n<Dropdown.Item key='cat'>Cat</Dropdown.Item>\n<Dropdown.Item key='dog'>Dog</Dropdown.Item>\n<Dropdown.Item key='aardvark'>Aardvark</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Kangaroo</Dropdown.Item>\n<Dropdown.Item key='snake'>Snake</Dropdown.Item>\n</Dropdown.Select>","flag#Flag:":"<Dropdown.Flag\nlabel='List of country'\nplaceholder='Choose a country'\nflagKeyType='phone-code'\n/>","integrated-with-react-hook-form#Integrated with react-hook-form:":"import Inspect from '@comfortdelgro/compass-icons/react/inspect'\nimport {\nButton,\nDropdown,\nMultipleDropdown,\nTextField\n} from '@comfortdelgro/react-compass'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { PersonInfo,useCreatePersonStore } from 'hooks/useDropdownsForm'\nimport { Fragment,useEffect,useState } from 'react'\nimport { Controller,useForm } from 'react-hook-form'\nimport * as yup from 'yup'\nexport const DropdownsForm: React.FC = () => {\nconst inputsScheme = yup.object().shape({\ngender: yup.string().required(),\nnationality: yup.string().required(),\nskill: yup.string().required(),\ndrinks: yup.array(yup.string().required()).min(1).required(),\nanimal: yup.string().required(),\nphoneCode: yup.string().required(),\nphoneNumber: yup.string().required(),\n})\n\nconst {\npersonInfo,\nsetPersonInfoFieldValue,\nsetPersonInfoValue,\n} = useCreatePersonStore()\n\nconst {control, handleSubmit, formState, setValue} = useForm<PersonInfo>({\nresolver: yupResolver(inputsScheme),\ndefaultValues: {...personInfo},\nreValidateMode: 'onChange',\n})\n\nconst handleValid = (data: PersonInfo) => {\nconsole.log(data)\n\nsetPersonInfoValue(data)\n}\nconst [drinksList, setDrinksList] = useState([])\nconst [currentDrinksList, setCurrentDrinksList] = useState([])\nuseEffect(() => {\nconst fetchData = async () => {\nconst response = await fetch(\n'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=Cocktail&i=gin',\n)\nconst json = await response.json()\nreturn json\n}\nfetchData().then((res) => {\nsetDrinksList(res.drinks)\nsetCurrentDrinksList(res.drinks.slice(0, 10))\n})\n}, [])\n\nconst handleLoadMore = () => {\n}\nreturn (\n<form\nnoValidate\nonSubmit={handleSubmit(handleValid)}\nstyle={{\nwidth: '100%',\ndisplay: 'flex',\nflexDirection: 'column',\nrowGap: '10px',\n}}\n>\n<Controller\ncontrol={control}\nname='gender'\nrender={({field, fieldState}) => {\nreturn (\n<Fragment>\n<Dropdown.Select\nlabel='Gender'\nplaceholder='Select'\nselectedKey={field.value}\nisRequired\nonSelectionChange={(key) => {\nsetPersonInfoFieldValue('gender', String(key))\nsetValue('gender', String(key), {shouldValidate: true})\n}}\nisErrored={Boolean(fieldState.error)}\ndescription={'Gender'}\n>\n<Dropdown.Item key='male'>Male</Dropdown.Item>\n<Dropdown.Item key='female'>Female</Dropdown.Item>\n</Dropdown.Select>\n</Fragment>\n)\n}}\n/>\n<Controller\ncontrol={control}\nname='nationality'\nrender={({field, fieldState}) => {\nreturn (\n<Fragment>\n<Dropdown.Flag\nisRequired\nlabel='List of country'\nplaceholder='Choose a country'\nselectedKey={field.value}\nonCountryChange={(key) => {\nsetPersonInfoFieldValue('nationality', String(key))\nsetValue('nationality', String(key), {shouldValidate: true})\n}}\nisErrored={Boolean(fieldState.error)}\n/>\n</Fragment>\n)\n}}\n/>\n\n<Controller\ncontrol={control}\nname='phoneCode'\nrender={({field, fieldState}) => {\nreturn (\n<Fragment>\n<Dropdown.Flag\nisRequired\nflagKeyType={'country-code'}\nlabel='List of phone code'\nplaceholder='Choose a country'\nselectedKey={field.value}\nonCountryChange={(key) => {\nsetPersonInfoFieldValue('phoneCode', String(key))\nsetValue('phoneCode', String(key), {shouldValidate: true})\n}}\nisErrored={Boolean(fieldState.error)}\n/>\n</Fragment>\n)\n}}\n/>\n<Controller\ncontrol={control}\nname='phoneNumber'\nrender={({field, fieldState}) => {\nreturn (\n<Fragment>\n<TextField\nisRequired\nlabel='Phone Number'\nplaceholder='Enter your phone'\nisErrored={Boolean(fieldState.error)}\nvalue={field.value}\nonChange={(value) => {\nsetPersonInfoFieldValue('phoneNumber', String(value))\nsetValue('phoneNumber', String(value), {shouldValidate: true})\n}}\n/>\n</Fragment>\n)\n}}\n/>\n\n<Controller\ncontrol={control}\nname='skill'\nrender={({field, fieldState}) => {\nreturn (\n<Fragment>\n<Dropdown.ComboBox\nlabel={'Skills'}\nplaceholder='Select'\nselectedKey={field.value}\nisRequired\nonSelectionChange={(key) => {\nsetPersonInfoFieldValue('skill', String(key))\nsetValue('skill', String(key), {shouldValidate: true})\n}}\nisErrored={Boolean(fieldState.error)}\nicon={<Inspect />}\n>\n<Dropdown.Item key='html'>HTML</Dropdown.Item>\n<Dropdown.Item key='css'>CSS</Dropdown.Item>\n<Dropdown.Item key='Javascript'>Javascript</Dropdown.Item>\n<Dropdown.Item key='SQL'>SQL</Dropdown.Item>\n<Dropdown.Item key='NoSQL'>NoSQL</Dropdown.Item>\n<Dropdown.Item key='Azure'>Azure</Dropdown.Item>\n<Dropdown.Item key='AWS'>AWS</Dropdown.Item>\n</Dropdown.ComboBox>\n</Fragment>\n)\n}}\n/>\n<Controller\ncontrol={control}\nname='drinks'\nrender={({field, fieldState}) => {\nreturn (\n<Fragment>\n<MultipleDropdown\nlabel={'Drinks'}\nplaceholder='Select'\nselectedKeys={field.value}\nonSelectionChange={(keys) => {\nconst keysValue = [...keys].map((item) => String(item))\nsetPersonInfoFieldValue('drinks', keysValue)\nsetValue('drinks', keysValue, {shouldValidate: true})\n}}\nisRequired\nisErrored={Boolean(fieldState.error)}\nonLoadMore={handleLoadMore}\n>\n{currentDrinksList.map((item: any) => {\nreturn (\n<Dropdown.Item key={String(item.strDrink)}>\n{item.strDrink}\n</Dropdown.Item>\n)\n})}\n</MultipleDropdown>\n</Fragment>\n)\n}}\n/>\n<Controller\ncontrol={control}\nname='animal'\nrender={({field, fieldState}) => {\nreturn (\n<Fragment>\n<Dropdown.ComboBox\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nselectedKey={field.value}\nonSelectionChange={(key) => {\nsetPersonInfoFieldValue('animal', String(key))\nsetValue('animal', String(key), {shouldValidate: true})\n}}\nisRequired\nisErrored={Boolean(fieldState.error)}\n>\n<Dropdown.Section title='Birds'>\n<Dropdown.Item key='red panda'>Eagle</Dropdown.Item>\n<Dropdown.Item key='cat'>Pigeon</Dropdown.Item>\n<Dropdown.Item key='dog'>Parrot</Dropdown.Item>\n</Dropdown.Section>\n<Dropdown.Section title='Mammal'>\n<Dropdown.Item key='aardvark'>Bear</Dropdown.Item>\n<Dropdown.Item key='kangaroo'>Lion</Dropdown.Item>\n<Dropdown.Item key='snake'>Whale</Dropdown.Item>\n</Dropdown.Section>\n</Dropdown.ComboBox>\n</Fragment>\n)\n}}\n/>\n\n<Button\nvariant='secondary'\ntype='submit'\ndisabled={formState.isSubmitting}\ncss={{marginTop: '2em', width: 200, margin: 'auto'}}\n>\nSubmit\n</Button>\n</form>\n)\n}\n\n\nimport { create } from 'zustand'\nexport interface PersonInfo {\ngender: string\nnationality: string\nskill: string\ndrinks: string[]\nanimal: string\nphoneCode: string\nphoneNumber: string\n}\ninterface ICreatePersonInfoStore {\npersonInfo: PersonInfo | {}\npersonInfoErrorState: any\n\nsetPersonInfoFieldValue<TField extends keyof PersonInfo = keyof PersonInfo>(\nfield: TField,\nvalue: PersonInfo[TField],\n): void\nsetPersonInfoValue(value: PersonInfo): void\n\nsetPersonInfoErrorState(field: string, message: string | undefined): void\n\nclearResponse(): void\n}\nconst personInfoStore = () => {\nconst storageName = 'create-person-info'\nreturn create<ICreatePersonInfoStore>()((set, get) => {\nreturn {\npersonInfo: {},\npersonInfoErrorState: {},\nsetPersonInfoFieldValue(field, value) {\nconst {personInfo} = get()\nset({\npersonInfo: {\n...personInfo,\n[field]: value,\n},\n})\n},\nsetPersonInfoValue(value) {\nset({\npersonInfo: value,\n})\n},\nsetPersonInfoErrorState(field: string, message: string) {\nconst {personInfoErrorState} = get()\nset({\npersonInfoErrorState: {\n...personInfoErrorState,\n[field]: message,\n},\n})\n},\nclearResponse: () =>\nset({\npersonInfo: undefined,\n}),\n}\n})\n}\n\nexport const useCreatePersonStore = personInfoStore()","props#Props:":"","dropdownselect--dropdowncombobox--dropdownflag-#<Dropdown.Select/> | <Dropdown.ComboBox/> | <Dropdown.Flag/> :":"Name\tType\tDefault\tDescription\ticon\tReactNode\t-\tIcon display in right side\tname\tstring\t—\tThe name of the input element, used when submitting an HTML form. See MDN.\tlabel\tReactNode\t—\tThe content to display as the label.\tisOpen\tboolean\t—\tOpen state of the menu.\tisLoading\tboolean\t'false'\tLoading effect when list of items is loading by API\tisErrored\tboolean\t'false'\tError state when dropdown is isErrored\tisDisabled\tboolean\t—\tWhether the input is disabled.\tisReadOnly\tboolean\t—\tWhether the input can be selected but not changed by the user.\tisRequired\tboolean\t—\tWhether user input is required on the input before form submission. Often paired with the necessityIndicator prop to add a visual indicator to the input.\tselectedKey\tKey\t—\tThe currently selected key in the collection (controlled).\tdescription\tstring\t—\tA description for the field. Provides a hint such as specific requirements for what to choose.\tplaceholder\tstring\t—\tTemporary text that occupies the text input when it is empty.\terrorMessage\tstring\t-\tError message for dropdown\tshouldDeselect\tboolean\tfalse\tWhen it true, active item can be remove by click one more time\tdisabledKeys\tIterable<Key>\t—\tThe item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\tnumberOfRows\tnumber\t—\tNumber of items displayed in Popover.\tdefaultSelectedKey\tKey\t—\tThe initial selected key in the collection (uncontrolled).\tonLoadMore\t() => void\t—\tHandler when user scrolls to the end.\tonSelectionChange\t(key: Key) => any\t—\tHandler that is called when the selection changes.\tonOpenChange\t(isOpen: boolean) => void\t—\tMethod that is called when the open state of the menu changes. Returns the new open state and the action that caused the opening of the menu.","dropdownflag-#<Dropdown.Flag/> :":"Include all of the props above and have extra new prop\nName\tType\tDefault\tDescription\tflagKeyType\talpha-2 | alpha-3 | name | country-code | phone-code\talpha-3\tThe value of selectedKey will depends by which type of key\tonCountryChange\t(p: Country) => void\t—\tReturn phone code of selected key. You may need to get phone code from this function, not from the key because some country has duplicated phone code\nExample for key and value\n{\nname: 'Singapore',\n'alpha-2': 'SG',\n'alpha-3': 'SGP',\n'country-code': '702',\n'phone-code': '+65'\n}","dropdownitem-#<Dropdown.Item/> :":"Name\tType\tDefault\tDescription\tkey\tKey\t—\tThe key of the dropdown.\ticon\ticon | color\t—\tThe content of the dropdown Item\ttitle\tstring\t—\tThe title of the dropdown.\tchildren\tReactNode\t—\tThe content of the dropdown Item\tleftIcon\tReactNode\t-\tLeft icon of the dropdown Item\trightIcon\tReactNode\t-\tRight icon of the dropdown Item\trightColor\tstring\t-\tRight color of the dropdown Item","dropdownsection-#<Dropdown.Section/> :":"Name\tType\tDefault\tDescription\ttitle\tReactNode\t—\tThe title of the section.\tchildren\tReactNode\t—\tThe content of the section\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/error":{"title":"Error","data":{"":"An error displays a message that describes an error that occurred\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Error} from '@comfortdelgro/react-compass'\nor\nimport Error from '@comfortdelgro/react-compass/error'","default-error-is-primary-variant#Default Error is primary variant:":"<Error>\n<Error.Icon>\n<Icon icon={faBug} />\n</Error.Icon>\n<Error.Title>Error: some bugs</Error.Title>\n<Error.Description>\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. pariatur.\n</Error.Description>\n<Error.Action>\n<Button\nonPress={() => {\nconsole.log('click ok')\n}}\n>\nOK\n</Button>\n</Error.Action>\n</Error>","secondary-variant#Secondary variant:":"<Error variantion='secondary'>\n<Error.Image>\n<Icon icon={faBug} />\n</Error.Image>\n<Error.Title>Error: some bugs</Error.Title>\n<Error.Description>\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. pariatur.\n</Error.Description>\n<Error.Action>\n<Button\nonPress={() => {\nconsole.log('click ok')\n}}\n>\nOK\n</Button>\n</Error.Action>\n</Error>","css#CSS:":"<Error variantion='primary'>\n<Error.Icon>\n<Icon icon={faBug} />\n</Error.Icon>\n<Error.Title>Error: some bugs </Error.Title>\n<Error.Description css={{color: 'red'}}>\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. pariatur.\n</Error.Description>\n<Error.Action>\n<Button\nonPress={() => {\nconsole.log('click ok')\n}}\n>\nOK\n</Button>\n</Error.Action>\n</Error>","props#Props:":"Name\tType\tDefault\tDescription\tvariant\tprimary | 'secondary'\tprimary\tVariants.\tcss\tCSS\t—\tTo custom styling of Error\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/file":{"title":"File","data":{"":"The File component allows you to display state and preview of the file uploaded.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {File} from '@comfortdelgro/react-compass'\nor\nimport File from '@comfortdelgro/react-compass/file'","basic-state#Basic State:":"<File.State\nfileName='Filename.png'\nicon={\n<svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n<path\nd='M1 8C1 4.13359 4.13359 1 8 1C11.8664 1 15 4.13359 15 8C15 11.8664 11.8664 15 8 15C4.13359 15 1 11.8664 1 8ZM5.78516 6.69023L7.07305 7.97539L5.78516 9.28516C5.53086 9.54219 5.53086 9.95781 5.78516 10.1902C6.04219 10.4691 6.45781 10.4691 6.69023 10.1902L7.97539 8.92695L9.28516 10.1902C9.54219 10.4691 9.95781 10.4691 10.1902 10.1902C10.4691 9.95781 10.4691 9.54219 10.1902 9.28516L8.92695 7.97539L10.1902 6.69023C10.4691 6.45781 10.4691 6.04219 10.1902 5.78516C9.95781 5.53086 9.54219 5.53086 9.28516 5.78516L7.97539 7.07305L6.69023 5.78516C6.45781 5.53086 6.04219 5.53086 5.78516 5.78516C5.53086 6.04219 5.53086 6.45781 5.78516 6.69023Z'\nfill='#323130'\n/>\n</svg>\n}\n/>\n<File.State\nfileName='Filename.png'\nicon={\n<svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n<path\nd='M14.8437 12.3125L9.01106 2.5625C8.56452 1.8125 7.43764 1.8125 6.9881 2.5625L1.1582 12.3125C0.709472 13.0598 1.26837 14 2.16777 14H13.833C14.7288 14 15.2894 13.0625 14.8437 12.3125ZM7.34303 5.64286C7.34303 5.28795 7.63699 5 7.9993 5C8.36162 5 8.65558 5.28929 8.65558 5.64286V9.07143C8.65558 9.42634 8.36162 9.71429 8.02391 9.71429C7.68621 9.71429 7.34303 9.42768 7.34303 9.07143V5.64286ZM7.9993 12.2857C7.5246 12.2857 7.13959 11.9086 7.13959 11.4436C7.13959 10.9786 7.52433 10.6014 7.9993 10.6014C8.47428 10.6014 8.85902 10.9786 8.85902 11.4436C8.85793 11.908 8.4751 12.2857 7.9993 12.2857Z'\nfill='#A4262C'\n/>\n</svg>\n}\n/>\n<File.State\nfileName='Filename.png'\nicon={\n<svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n<path\nd='M1 8C1 4.13359 4.13359 1 8 1C11.8664 1 15 4.13359 15 8C15 11.8664 11.8664 15 8 15C4.13359 15 1 11.8664 1 8ZM11.1664 6.79141C11.4645 6.49336 11.4645 6.00664 11.1664 5.70859C10.8684 5.41055 10.3816 5.41055 10.0836 5.70859L7.125 8.66719L5.91641 7.45859C5.61836 7.16055 5.13164 7.16055 4.83359 7.45859C4.53555 7.75664 4.53555 8.24336 4.83359 8.54141L6.58359 10.2914C6.88164 10.5895 7.36836 10.5895 7.66641 10.2914L11.1664 6.79141Z'\nfill='#107C10'\n/>\n</svg>\n}\n/>\n<File.State\nfileName='Filename.png'\nicon={\n<svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n<path\nd='M14.125 10.625H10.4746L9.2373 11.8623C8.90781 12.1918 8.46758 12.375 8 12.375C7.53242 12.375 7.09328 12.193 6.7627 11.8623L5.52539 10.625H1.875C1.39184 10.625 1 11.0168 1 11.5V14.125C1 14.6082 1.39184 15 1.875 15H14.125C14.6082 15 15 14.6082 15 14.125V11.5C15 11.016 14.609 10.625 14.125 10.625ZM12.8125 13.4688C12.4516 13.4688 12.1562 13.1734 12.1562 12.8125C12.1562 12.4516 12.4516 12.1562 12.8125 12.1562C13.1734 12.1562 13.4688 12.4516 13.4688 12.8125C13.4688 13.1734 13.1734 13.4688 12.8125 13.4688ZM7.38203 11.243C7.55156 11.4152 7.77578 11.5 8 11.5C8.22422 11.5 8.44789 11.4146 8.61852 11.2437L12.1185 7.74365C12.46 7.40186 12.46 6.84814 12.1185 6.50635C11.7767 6.16455 11.2227 6.16455 10.8812 6.50635L8.875 8.51406V1.875C8.875 1.39184 8.48316 1 8 1C7.51602 1 7.125 1.39184 7.125 1.875V8.51406L5.11797 6.50703C4.77645 6.16523 4.22246 6.16523 3.88066 6.50703C3.53914 6.84883 3.53914 7.40254 3.88066 7.74434L7.38203 11.243Z'\nfill='#323130'\n/>\n</svg>\n}\n/>\n<File.State\nfileName='Filename.png'\nicon={\n<svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n<path\nd='M14.125 10.625H10.4746L9.2373 11.8623C8.90781 12.1918 8.46758 12.375 8 12.375C7.53242 12.375 7.09328 12.193 6.7627 11.8623L5.52539 10.625H1.875C1.39184 10.625 1 11.0168 1 11.5V14.125C1 14.6082 1.39184 15 1.875 15H14.125C14.6082 15 15 14.6082 15 14.125V11.5C15 11.016 14.609 10.625 14.125 10.625ZM12.8125 13.4688C12.4516 13.4688 12.1562 13.1734 12.1562 12.8125C12.1562 12.4516 12.4516 12.1562 12.8125 12.1562C13.1734 12.1562 13.4688 12.4516 13.4688 12.8125C13.4688 13.1734 13.1734 13.4688 12.8125 13.4688ZM7.38203 11.243C7.55156 11.4152 7.77578 11.5 8 11.5C8.22422 11.5 8.44789 11.4146 8.61852 11.2437L12.1185 7.74365C12.46 7.40186 12.46 6.84814 12.1185 6.50635C11.7767 6.16455 11.2227 6.16455 10.8812 6.50635L8.875 8.51406V1.875C8.875 1.39184 8.48316 1 8 1C7.51602 1 7.125 1.39184 7.125 1.875V8.51406L5.11797 6.50703C4.77645 6.16523 4.22246 6.16523 3.88066 6.50703C3.53914 6.84883 3.53914 7.40254 3.88066 7.74434L7.38203 11.243Z'\nfill='#323130'\n/>\n</svg>\n}\nisLoading\n/>","with-icon-image#With icon image:":"<File.Preview imageSrc='https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg'>\n<File.State\nfileName='Filename.png'\nicon={\n<svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n<path\nd='M1 8C1 4.13359 4.13359 1 8 1C11.8664 1 15 4.13359 15 8C15 11.8664 11.8664 15 8 15C4.13359 15 1 11.8664 1 8ZM5.78516 6.69023L7.07305 7.97539L5.78516 9.28516C5.53086 9.54219 5.53086 9.95781 5.78516 10.1902C6.04219 10.4691 6.45781 10.4691 6.69023 10.1902L7.97539 8.92695L9.28516 10.1902C9.54219 10.4691 9.95781 10.4691 10.1902 10.1902C10.4691 9.95781 10.4691 9.54219 10.1902 9.28516L8.92695 7.97539L10.1902 6.69023C10.4691 6.45781 10.4691 6.04219 10.1902 5.78516C9.95781 5.53086 9.54219 5.53086 9.28516 5.78516L7.97539 7.07305L6.69023 5.78516C6.45781 5.53086 6.04219 5.53086 5.78516 5.78516C5.53086 6.04219 5.53086 6.45781 5.78516 6.69023Z'\nfill='#323130'\n/>\n</svg>\n}\nisLoading\n/>\n</File.Preview>","errored#Errored:":"<File.State\nfileName='Filename.png'\nicon={\n<div style={{height: '16px', gap: '8px', display: 'flex'}}>\n<Icon icon={faExclamationTriangle} />\n<svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n<path\nd='M1 8C1 4.13359 4.13359 1 8 1C11.8664 1 15 4.13359 15 8C15 11.8664 11.8664 15 8 15C4.13359 15 1 11.8664 1 8ZM5.78516 6.69023L7.07305 7.97539L5.78516 9.28516C5.53086 9.54219 5.53086 9.95781 5.78516 10.1902C6.04219 10.4691 6.45781 10.4691 6.69023 10.1902L7.97539 8.92695L9.28516 10.1902C9.54219 10.4691 9.95781 10.4691 10.1902 10.1902C10.4691 9.95781 10.4691 9.54219 10.1902 9.28516L8.92695 7.97539L10.1902 6.69023C10.4691 6.45781 10.4691 6.04219 10.1902 5.78516C9.95781 5.53086 9.54219 5.53086 9.28516 5.78516L7.97539 7.07305L6.69023 5.78516C6.45781 5.53086 6.04219 5.53086 5.78516 5.78516C5.53086 6.04219 5.53086 6.45781 5.78516 6.69023Z'\nfill='#323130'\n/>\n</svg>\n</div>\n}\ncss={{\nbackground: '#EFD9DB',\n}}\n/>","basic-preview#Basic Preview:":"<File.Preview\nfileName='Filename.png'\nimageSrc='https://i.natgeofe.com/n/548467d8-c5f1-4551-9f58-6817a8d2c45e/NationalGeographic_2572187_square.jpg'\n/>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\n<File.State\nfileName='Filename.png'\nicon={\n<svg width='16' height='16' viewBox='0 0 16 16' fill='none'>\n<path\nd='M1 8C1 4.13359 4.13359 1 8 1C11.8664 1 15 4.13359 15 8C15 11.8664 11.8664 15 8 15C4.13359 15 1 11.8664 1 8ZM5.78516 6.69023L7.07305 7.97539L5.78516 9.28516C5.53086 9.54219 5.53086 9.95781 5.78516 10.1902C6.04219 10.4691 6.45781 10.4691 6.69023 10.1902L7.97539 8.92695L9.28516 10.1902C9.54219 10.4691 9.95781 10.4691 10.1902 10.1902C10.4691 9.95781 10.4691 9.54219 10.1902 9.28516L8.92695 7.97539L10.1902 6.69023C10.4691 6.45781 10.4691 6.04219 10.1902 5.78516C9.95781 5.53086 9.54219 5.53086 9.28516 5.78516L7.97539 7.07305L6.69023 5.78516C6.45781 5.53086 6.04219 5.53086 5.78516 5.78516C5.53086 6.04219 5.53086 6.45781 5.78516 6.69023Z'\nfill='#323130'\n/>\n</svg>\n}\nimageIcon={<Icon icon={faVirus} />}\ncss={{\nbackground: 'red',\n}}\n/>","file-state-props#File State Props:":"Name\tType\tDefault\tDescription\tfileName\tstring\t-\tFilename of the state\timageIcon\tReact.ReactNode\t-\tLittle icon display on left of the filename\tonIconPress\t() => void\t-\tFired when clicked on the icon\ticon\tReact.ReactNode\t-\tLeft icon of the state\tisLoading\tboolean\t-\tLoading state\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","file-preview-props#File Preview Props:":"Name\tType\tDefault\tDescription\timageSrc\tstring\t-\tImage source to display\tchildrend\tReact.ReactNode\t-\tDisplay child, example: File.State\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/footer":{"title":"Footer","data":{"":"Footer component is an additional navigation used for displaying general information that a user might want to access from any page within your site.","import#Import":"import {Footer, FooterInfo} from '@comfortdelgro/react-compass'\nor\nimport {Footer, FooterInfo} from '@comfortdelgro/react-compass/footer'","content#Content":"Footer has some supports component like Header or Nav, you should use them together to make the footer responsive","footer-variants#Footer Variants":"","white#White":"<Footer\ncss={{\n'& a': {\ncolor: '$gray70',\ntextDecoration: 'none',\nfontSize: '14px',\nfontWeight: '400',\n},\n}}\n>\n<Footer.Header\nclassName='top-items'\ncss={{\n'& .logo': {\nfontSize: '30px',\ncolor: '$cdgBlue',\nmargin: 0,\n},\n}}\n>\n<h1 className='logo'>zig</h1>\n<div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n<Icon\nicon={faGlobe}\nstyle={{width: '22px', height: '22px', marginRight: '8px'}}\n></Icon>\n<p style={{margin: 0}}>English</p>\n</div>\n</Footer.Header>\n<Footer.Nav\nclassName='center-items'\ngridItems={6}\ncss={{\n'& .footer-nav-title': {\nfontSize: '16px',\nfontWeight: 500,\nmargin: 0,\n},\n}}\n>\n<div>\n<h3 className='footer-nav-title' style={{fontWeight: 'bold'}}>\nAbout us\n</h3>\n<Link href='#'>Profile</Link>\n<Link href='#'>Milestones</Link>\n<Link href='#'>Careers</Link>\n</div>\n<div>\n<h3 className='footer-nav-title' style={{fontWeight: 'bold'}}>\nAbout us\n</h3>\n<Link href='#'>Profile</Link>\n<Link href='#'>Milestones</Link>\n<Link href='#'>Careers</Link>\n</div>\n<div>\n<h3 className='footer-nav-title' style={{fontWeight: 'bold'}}>\nAbout us\n</h3>\n<Link href='#'>Profile</Link>\n<Link href='#'>Milestones</Link>\n<Link href='#'>Careers</Link>\n</div>\n<div>\n<h3 className='footer-nav-title' style={{fontWeight: 'bold'}}>\nAbout us\n</h3>\n<Link href='#'>Profile</Link>\n<Link href='#'>Milestones</Link>\n<Link href='#'>Careers</Link>\n</div>\n<div>\n<h3 className='footer-nav-title' style={{fontWeight: 'bold'}}>\nAbout us\n</h3>\n<Link href='#'>Profile</Link>\n<Link href='#'>Milestones</Link>\n<Link href='#'>Careers</Link>\n</div>\n<div>\n<h3 className='footer-nav-title' style={{fontWeight: 'bold'}}>\nAbout us\n</h3>\n<Link href='#'>Profile</Link>\n<Link href='#'>Milestones</Link>\n<Link href='#'>Careers</Link>\n</div>\n</Footer.Nav>\n<FooterInfo\ncss={{\n'& span': {fontSize: '14px', fontWeight: 600, lineHeight: '21px'},\n}}\n>\n<div>\n<FooterInfo.Social>\n<Icon icon={faCamera} />\n<Icon icon={faCamera} />\n<Icon icon={faCamera} />\n</FooterInfo.Social>\n<span>383 Sin Ming Dr</span>\n<br />\n<span>Singapore 575717</span>\n</div>\n<FooterInfo.Download>\n<Button variant='secondary' css={{width: '136px', background: 'black'}}>\n{' '}\nAppstore\n</Button>\n<Button variant='secondary' css={{width: '136px', background: 'black'}}>\n{' '}\nGoogle Play\n</Button>\n</FooterInfo.Download>\n</FooterInfo>\n<Footer.Policy>\n<p style={{margin: 0, lineHeight: '21px'}}>\n2022 ComfortDelGroTaxi. All rights reserved\n</p>\n<div\nstyle={{\ndisplay: 'flex',\nwidth: 'fit-content',\ngap: '16px',\nflexWrap: 'wrap',\n}}\n>\n<Link href='#'>Privacy</Link>\n<Link href='#'>Accessibility</Link>\n<Link href='#'>Terms</Link>\n</div>\n</Footer.Policy>\n</Footer>","black#Black":"<Footer color={'black'}>\n...\n</Footer>","black-1#Black":"<Footer color={'blue'}>\n...\n</Footer>","footerheader#Footer.Header":"Footer.Header should contain company logo and/or language-changing button","footernav#Footer.Nav":"Footer.Nav should contain all links of pages in website for user to navigate","footerpolicy#Footer.Policy":"Footer.Policy should contain links to policies and/or copyrights","footerinfo#FooterInfo":"FooterInfo should contain the address, social media and/or download links of the website","footerinfosocial#FooterInfo.Social":"","footerinfodownload#FooterInfo.Download":"","props#Props":"","footer#Footer":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","footerheader-1#Footer.Header":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","footernav-1#Footer.Nav":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tgridNumber\tnumber\t—\tNumber of grid column\ttabletGridNumber\tnumber\t—\tNumber of grid column in the tablet responsive\tcss\tCSS\t—","footerpolicy-1#Footer.Policy":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","footerinfo-1#FooterInfo":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","footerinfodownload-1#FooterInfo.Download":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","footerinfosocial-1#FooterInfo.Social":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/grid":{"title":"Grid Component","data":{"":"The Grid component is designed to create responsive and fluid grid layouts for your application.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Grid} from '@comfortdelgro/react-compass'\nor\nimport Grid from '@comfortdelgro/react-compass/grid'","basic-grid#Basic Grid:":"Box\n\n\n\nBox\n\n\n\nBox\n\n\n\nBox\n\n\n\n\n<Grid spacing='sm' alignItems='center' style={{height: '100%'}}>\n<Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n<div\nstyle={{\npadding: '16px',\nborderRadius: '4px',\ntextAlign: 'center',\ncolor: '#ede9f9',\nfontWeight: '700',\nbackgroundColor: '#47b0b0',\nboxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n}}\n>\nBox\n</div>\n</Grid.Item>\n<Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n<div\nstyle={{\npadding: '16px',\nborderRadius: '4px',\ntextAlign: 'center',\ncolor: '#ede9f9',\nfontWeight: '700',\nbackgroundColor: '#47b0b0',\nboxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n}}\n>\nBox\n</div>\n</Grid.Item>\n<Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n<div\nstyle={{\npadding: '16px',\nborderRadius: '4px',\ntextAlign: 'center',\ncolor: '#ede9f9',\nfontWeight: '700',\nbackgroundColor: '#47b0b0',\nboxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n}}\n>\nBox\n</div>\n</Grid.Item>\n<Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n<div\nstyle={{\npadding: '16px',\nborderRadius: '4px',\ntextAlign: 'center',\ncolor: '#ede9f9',\nfontWeight: '700',\nbackgroundColor: '#47b0b0',\nboxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n}}\n>\nBox\n</div>\n</Grid.Item>\n</Grid>","grid-component-usage#Grid Component Usage:":"Fluid grids use columns that scale and resize content. A fluid grid's layout can use breakpoints to determine if the layout needs to change dramatically.\nIt uses CSS's Flexible Box module for high flexibility.\nThere are two types of layout: containers and items.\nItem widths are set in percentages, so they're always fluid and sized relative to their parent element.\nItems have padding to create the spacing between individual items.\nThere are five grid breakpoints: xs, sm, md, lg, and xl.\nInteger values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the breakpoint constraints.","default-breakpoints#Default Breakpoints:":"xs, extra-small: 0px\nsm, small: 600px\nmd, medium: 900px\nlg, large: 1200px\nxl, extra-large: 1536px\n\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/icon":{"title":"Icons","data":{"":"The SGV icons","import#Import:":"import Activity from '@comfortdelgro/compass-icons/react/activity'\nor with iconify\nimport {Icon} from '@iconify/react'\nimport activityIcon from '@comfortdelgro/compass-icons/iconify/activity'","filled-icons#Filled Icons:":"import AddressBookFilled from '@comfortdelgro/compass-icons/react/filled/address-book-filled'","outline-icons#Outline Icons:":"import AddressBookOutlined from '@comfortdelgro/compass-icons/react/outlined/address-book-outlined'","duotone-icons#Duotone Icons:":"import BadgeDollarDuotone from '@comfortdelgro/compass-icons/react/duotone/badge-dollar-duotone'","colorful-icons#Colorful Icons:":"import Compass from '@comfortdelgro/compass-icons/react/colorful/compass'","other-icons#Other Icons:":"import Activity from '@comfortdelgro/compass-icons/react/activity'","country-icons#Country Icons:":"import FlagAbw from '@comfortdelgro/compass-icons/react/country/flag-abw'","usage#Usage:":"<Activity width={20} height={20} color='red' />\nor with iconify\n<Icon icon={activityIcon} width={20} height={20} />","props#Props:":"Name\tType\tDefault\tDescription\tcolor\tstring\t—\tColor of the icon\theight\tnumber\t—\tHeight of the icon\twidth\tnumber\t—\tWidth of the icon\tid\tstring\t—\tUnique ID of the icon\tstyle\tstring\t—\tStyle of the icon\tclassName\tCSS\t—\tClass name of the icon\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/link":{"title":"Link","data":{"":"The Link component allows you to easily customize anchor elements with your theme colors and typography styles.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Link} from '@comfortdelgro/react-compass'\nor\nimport Link from '@comfortdelgro/react-compass/link'","basic-link#Basic Link:":"Go to another page\n\nGo to Google\n\n\n<Link href='/#page'>Go to another page</Link>\n<Link href='https://google.com' external>\nGo to Google\n</Link>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\nGo to Google\n\n\n<Link\nhref='https://google.com'\nexternal\ncss={{textDecoration: 'line-through', '&:hover': {color: 'grey'}}}\n>\nGo to Google\n</Link>","props#Props:":"Name\tType\tDefault\tDescription\texternal\tfalse| true\tfalse\tSet to extinal website when true\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/list":{"title":"List","data":{"":"Lists show a large set of items or options to the user.\nCheck out our ladle for more info on this\ncomponent.","import#Import":"import {List, ListCard, InteractiveList} from '@comfortdelgro/react-compass'\nor\nimport List, {\nListCard,\nInteractiveList,\n} from '@comfortdelgro/react-compass/badge'","basic#Basic":"<List\ntitle='Title'\ndescription='Line 1'\nleftInfo={<Avatar label='A' />}\nrightInfo={{text: 'Details', icon: <Icon icon={faChevronRight} />}}\n/>\n<List\ntitle='Title'\ndescription='Line 1'\nleftInfo={<List.Image src={'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'} alt='singapore' />}\nrightInfo={{text: 'Details', icon: <Icon icon={faChevronRight} />}}\n/>\n<List\ntitle='Title'\ndescription='Line 1'\nleftInfo={<Icon icon={faAddressBook} />}\nrightInfo={{text: 'Details', icon: <Icon icon={faChevronRight} />}}\n/>","disabled#Disabled":"<List\nisDisabled\ntitle='Title'\ndescription='Line 1'\nleftInfo={<Avatar label='A' />}\nrightInfo={{text: 'Details', icon: <Icon icon={faChevronRight} />}}\n/>","sizes#Sizes":"Small size version of the list\n\n\n\n\n\n\n<List\nsize='sm'\nleftInfo={<Icon icon={faClone} />}\ntitle='Title'\ndescription='Lorem Ipsum'\ncss={{maxWidth: '198px'}}\n/>\n<List\nsize='sm'\nisDisabled\nleftInfo={<Icon icon={faClone} />}\ntitle='Title'\ndescription='Lorem Ipsum'\ncss={{maxWidth: '198px'}}\n/>","variant#Variant":"<List\ntitle='Title'\nvariant='item'\ndescription='Line 1'\nleftInfo={<Avatar label='A' />}\nrightInfo={{text: 'Details', icon: <Icon icon={faChevronRight} />}}\n/>\n<List\nvariant='item'\ntitle='Title'\ndescription='Line 1'\nleftInfo={\n<List.Image\nsrc={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\nalt='singapore'\n/>\n}\nrightInfo={{text: 'Details', icon: <Icon icon={faChevronRight} />}}\n/>\n<List\ntitle='Title'\nvariant='item'\ndescription='Line 1'\nleftInfo={<Icon icon={faAddressBook} />}\nrightInfo={{text: 'Details', icon: <Icon icon={faChevronRight} />}}\n/>","related-components#Related Components":"","listcard#ListCard":"<ListCard\nshowActionButton\ntitle='Lorem Ipsum'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nbadge={<Badge label='Active' color='success' variant='secondary' />}\ncss={{width: '347px'}}\n>\n<ListCard.Detail\ntitle='Detail 1'\navatar={<Avatar label='A' />}\ndescription='Lorem Ipsum'\n/>\n<ListCard.Detail\ntitle='Detail 1'\navatar={<Avatar label='A' />}\ndescription='Lorem Ipsum'\n/>\n</ListCard>\n<ListCard\nshowActionButton\ntitle='Lorem Ipsum'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nbadge={<Badge label='Active' color='success' variant='secondary' />}\ncss={{width: '347px'}}\n>\n<ListCard.Detail\ntitle='Detail 1'\navatar={\n<Avatar.Group>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n</Avatar.Group>\n}\n/>\n<ListCard.Detail\ntitle='Detail 1'\navatar={\n<Avatar.Group>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n</Avatar.Group>\n}\n/>\n</ListCard>","interactivelisting#InteractiveListing":"<InteractiveList\ngroupLabel={\n<div\nstyle={{\nwidth: '84px',\nheight: '58px',\nbackgroundColor: '#009EDA',\ndisplay: 'flex',\njustifyContent: 'center',\nalignItems: 'center',\nborderRadius: '4px',\ncolor: 'white',\nfontSize: '28px',\nfontWeight: 'bold',\n}}\n>\nXXX\n</div>\n}\navatar={\n<Avatar.Group>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n</Avatar.Group>\n}\ntitle='Title'\ndescription='Lorem ipsum dolor sit amet'\ncss={{width: '315px', height: 'fit-content'}}\n/>\n<InteractiveList\nshowIcon\nvariant='dropdown'\navatar={\n<Avatar\nimage={\n'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n}\n/>\n}\ntitle='Profile Name'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\ncss={{width: '315px', height: 'fit-content'}}\n/>","draganddroplist#DragAndDropList":"Item 1\n\nItem 2\n\nItem 3\n\n\n\n<DragAndDropList>\n<DragAndDropList.Item key='1'>Item 1</DragAndDropList.Item>\n<DragAndDropList.Item key='2'>Item 2</DragAndDropList.Item>\n<DragAndDropList.Item key='3'>Item 3</DragAndDropList.Item>\n</DragAndDropList>","props#Props:":"","list#List":"Name\tType\tDefault\tDescription\tleftInfo\tReact.ReactNode\t—\tLeft side information component\ttitle\tstring\t—\t\tdescription\tstring\t—\t\trightInfo\t{ text?: string, icon?: React.ReactNode }\t—\tRight side information component\tisDisabled\tboolean\t—\t\tvariant\t\"item\" | \"interactive\"\tinteractive\t\tcss\tCSS\t—","listimage#List.Image":"Name\tType\tDefault\tDescription\tcss\tCSS\t—","listcard-1#ListCard":"Name\tType\tDefault\tDescription\ttitle\tstring\t—\t\tbadge\tReact.ReactNode\t—\t\tdescription\tstring\t—\t\tshowActionButton\tboolean\t—\tWhether the action button is showed\tisDisabled\tboolean\t—\t\tcss\tCSS\t—","listcarddetail#ListCard.Detail":"Name\tType\tDefault\tDescription\ttitle\tstring\t—\t\tdescription\tstring\t—\t\tavatar\tReact.ReactNode\t—\t\tcss\tCSS\t—","interactivelist#InteractiveList":"Name\tType\tDefault\tDescription\tgroupLabel\tReact.ReactNode\t—\t\tavatar\tReact.ReactNode\t—\t\ttitle\tstring\t—\t\tvariant\t'default' | 'dropdown'\t—\t\tshowIcon\tboolean\t—\tWhether the icon is showed\tcss\tCSS\t—","draganddroplist-1#DragAndDropList":"Name\tType\tDefault\tDescription\tonReorder\tFunction\t—\tFire when drag and drop an items, returned an event object\tonReorderonReorderByKeys\tFunction\t—\tFire when drag and drop an items, returned an array keys\tcss\tCSS\t—","draganddroplistitem#DragAndDropList.Item":"Name\tType\tDefault\tDescription\ttitle\tstring\t—\tThe title of the tab.\tkey\tKey\t—\tThe key of the tab.\tchildren\tReactNode|String\t—\tThe content of the tab Item\tclassName\tString\t-\tExtra class name for tab\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/menu-lists":{"title":"Menu List","data":{"":"The Menu List component allows you to create a menu with expandable items\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {MenuList, MenuListDropdown} from '@comfortdelgro/react-compass'\nor\nimport MenuList, {MenuListDropdown} from '@comfortdelgro/react-compass/MenuList'","basic-menu-list#Basic Menu List":"Dashboard\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\n\n\n\n<MenuList css={{height: '600px'}}>\n<MenuListDropdown>\n<MenuListDropdown.Header>Dashboard</MenuListDropdown.Header>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item isActive>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n</MenuListDropdown>\n</MenuList>","menu-list-with-icon#Menu List with Icon":"Dashboard\n\nMenu\n\n\nMenu\n\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\n\n\n\n<MenuList css={{height: '600px'}}>\n<MenuListDropdown>\n<MenuListDropdown.Header>Dashboard</MenuListDropdown.Header>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item isActive icon={<BugIcon />}>\nMenu\n</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n</MenuListDropdown>\n</MenuList>","nested-menu-list#Nested Menu List":"Dashboard\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\n\n\nDashboard\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\n\n\n\n\n\n<MenuList css={{height: '800px'}}>\n<MenuListDropdown>\n<MenuListDropdown.Header>Dashboard</MenuListDropdown.Header>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item isActive>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item isNested>\n<MenuListDropdown>\n<MenuListDropdown.Header>Dashboard</MenuListDropdown.Header>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n</MenuListDropdown>\n</MenuListDropdown.Item>\n</MenuListDropdown>\n</MenuList>","disabled#Disabled":"Dashboard\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\n\n\nDashboard\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\nMenu\n\n\n\n\n\n\n<MenuList css={{height: '800px'}}>\n<MenuListDropdown>\n<MenuListDropdown.Header>Dashboard</MenuListDropdown.Header>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item isActive>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item isNested>\n<MenuListDropdown>\n<MenuListDropdown.Header>Dashboard</MenuListDropdown.Header>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item isDisabled icon={<BugIcon />}>\nMenu\n</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n<MenuListDropdown.Item icon={<BugIcon />}>Menu</MenuListDropdown.Item>\n</MenuListDropdown>\n</MenuListDropdown.Item>\n</MenuListDropdown>\n</MenuList>","props#Props":"","menulist#MenuList":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","menulistdropdown#MenuListDropdown":"Name\tType\tDefault\tDescription\tchildren*\tReact.ReactNode\t—\tThe first child must be the trigger.\tisOpen\tboolean\t—\tWhether the list is open by default (controlled).\tdefaultOpen\tboolean\ttrue\tWhether the list is open by default (uncontrolled).\tonMenuListChange\t(isOpen: boolean) => void\t—\tHandler that is called when the list changes.\tcss\tCSS\t—","menulistdropdownheader#MenuListDropdown.Header":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tleftIcon\tReact.ReactNode | false\ttrue\t\trightIcon\tReact.ReactNode | true\tfalse\t\tcss\tCSS\t—","menulistdropdownitem#MenuListDropdown.Item":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tisActive\tboolean\tfalse\tWhether the item is currently activated or not\tisDisabled\tboolean\tfalse\tWhether the item is currently disabled or not\ticon\tReactNode\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/modal":{"title":"Modal Component","data":{"":"The Modal component is a flexible and customizable modal/dialog that can be used in various use cases like confirmation dialogs, information popups, and more.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Modal} from '@comfortdelgro/react-compass'\nor\nimport Modal from '@comfortdelgro/react-compass/modal'","small-modal#Small Modal:":"export const SmallModal: React.FC = () => {\nconst [smallOpen, setSmallOpen] = useState(false)\nconst handleSmallClose = () => {\nsetSmallOpen(false)\n}\n\nreturn (\n<>\n<Button onPress={() => setSmallOpen(true)}>Open Small Modal</Button>\n<Modal.Trigger\nisOpen={smallOpen}\nhandleClose={handleSmallClose}\nsize='sm'\n>\n<Modal>\n<Modal.Title>My Small Title</Modal.Title>\n<Modal.CloseIcon>\n<Icon icon={faXmark} />\n</Modal.CloseIcon>\n<Modal.Description>{lorem}</Modal.Description>\n<Modal.Actions>\n<Button onPress={handleSmallClose}>Cancel</Button>\n<Button onPress={handleSmallClose}>Do it</Button>\n</Modal.Actions>\n</Modal>\n</Modal.Trigger>\n</>\n)\n}","medium-modal-default#Medium Modal (Default):":"export const MediumModal: React.FC = () => {\nconst [mediumOpen, setMediumOpen] = useState(false)\nconst handleMediumClose = () => {\nsetMediumOpen(false)\n}\n\nreturn (\n<>\n<Button onPress={() => setMediumOpen(true)}>Open Medium Modal</Button>\n<Modal.Trigger isOpen={mediumOpen} handleClose={handleMediumClose}>\n<Modal>\n<Modal.Title>My Medium Title</Modal.Title>\n<Modal.CloseIcon>\n<Icon icon={faXmark} />\n</Modal.CloseIcon>\n<Modal.Description>{lorem}</Modal.Description>\n<Modal.Actions>\n<Button onPress={handleMediumClose}>Cancel</Button>\n<Button onPress={handleMediumClose}>Do it</Button>\n</Modal.Actions>\n</Modal>\n</Modal.Trigger>\n</>\n)\n}","large-modal#Large Modal:":"export const LargeModal: React.FC = () => {\nconst [largeOpen, setLargeOpen] = useState(false)\nconst handleLargeClose = () => {\nsetLargeOpen(false)\n}\n\nreturn (\n<>\n<Button onPress={() => setLargeOpen(true)}>Open Large Modal</Button>\n<Modal.Trigger\nisOpen={largeOpen}\nhandleClose={handleLargeClose}\nsize='lg'\n>\n<Modal>\n<Modal.Title>My Large Title</Modal.Title>\n<Modal.CloseIcon>\n<Icon icon={faXmark} />\n</Modal.CloseIcon>\n<Modal.Description>{lorem}</Modal.Description>\n<Modal.Actions>\n<Button onPress={handleLargeClose}>Cancel</Button>\n<Button onPress={handleLargeClose}>Do it</Button>\n</Modal.Actions>\n</Modal>\n</Modal.Trigger>\n</>\n)\n}","props#Props:":"Name\tType\tDefault\tDescription\tisOpen\tboolean\t—\tIf true, the modal is open.\thandleClose\t() => void\t—\tCallback fired when the modal needs to be closed.\tsize\t'sm' | 'md' | 'lg'\tmd\tSize of the modal. 'sm' for small, 'md' for medium, and 'lg' for large.\tchildren\tReact.ReactNode\t—\tThe content of the component.\tdisableBackdrop\tboolean\tfalse\tIf true, clicking the backdrop will not fire the handleClose callback.\tmodalProps\tReact.HTMLAttributes<HTMLDivElement>\t—\tAdditional props to be spread to the Modal component.\tbackdropProps\tReact.HTMLAttributes<HTMLDivElement>\t—\tAdditional props to be spread to the backdrop (overlay) component.\tcontainerProps\tReact.HTMLAttributes<HTMLDivElement> & {className?: string}\t—\tAdditional props to be spread to the container component."}},"/components/multiple-dropdown":{"title":"Multiple Dropdown","data":{"":"Provides the behavior and accessibility implementation for a listbox component. A listbox displays a list of options and allows a user to select one or more of them.\nCheck out our ladle for more info\non this component.","import#Import:":"import {Dropdown} from '@comfortdelgro/react-compass'\nor\nimport Dropdown from '@comfortdelgro/react-compass/dropdown'\nWe recommend the second method to import components for the benefits of tree shaking.","controlled#Controlled:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<MultipleDropdown\nlabel='Favorite Animal'\nselectionMode='multiple'\ndisabledKeys={['snake']}\nplaceholder='Choose an animal'\nselectedKeys={value}\nonSelectionChange={(k: 'all' | Set<Key>) =>\nsetValue(k === 'all' ? k : [...k])\n}\n>\n<MultipleDropdown.Item key='red panda'>\n<BugIcon /> Red Panda\n</MultipleDropdown.Item>\n<MultipleDropdown.Item key='cat'>Cat</MultipleDropdown.Item>\n<MultipleDropdown.Item key='dog'>Dog</MultipleDropdown.Item>\n<MultipleDropdown.Item key='aardvark'>Aardvark</MultipleDropdown.Item>\n<MultipleDropdown.Item key='kangaroo'>Kangaroo</MultipleDropdown.Item>\n<MultipleDropdown.Item key='snake'>Snake</MultipleDropdown.Item>\n</MultipleDropdown>","uncontrolled#UnControlled:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<MultipleDropdown\nlabel='Favorite Animal'\nselectionMode='multiple'\ndisabledKeys={['snake']}\nplaceholder='Choose an animal'\n>\n<MultipleDropdown.Item key='red panda'>\n<BugIcon /> Red Panda\n</MultipleDropdown.Item>\n<MultipleDropdown.Item key='cat'>Cat</MultipleDropdown.Item>\n<MultipleDropdown.Item key='dog'>Dog</MultipleDropdown.Item>\n<MultipleDropdown.Item key='aardvark'>Aardvark</MultipleDropdown.Item>\n<MultipleDropdown.Item key='kangaroo'>Kangaroo</MultipleDropdown.Item>\n<MultipleDropdown.Item key='snake'>Snake</MultipleDropdown.Item>\n</MultipleDropdown>","error#Error:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<MultipleDropdown\nlabel='Favorite Animal'\nselectionMode='multiple'\ndisabledKeys={['snake']}\nplaceholder='Choose an animal'\nisErrored\nerrorMessage='Use Helper Text for Errors'\n>\n<MultipleDropdown.Item key='red panda'>\n<BugIcon /> Red Panda\n</MultipleDropdown.Item>\n<MultipleDropdown.Item key='cat'>Cat</MultipleDropdown.Item>\n<MultipleDropdown.Item key='dog'>Dog</MultipleDropdown.Item>\n<MultipleDropdown.Item key='aardvark'>Aardvark</MultipleDropdown.Item>\n<MultipleDropdown.Item key='kangaroo'>Kangaroo</MultipleDropdown.Item>\n<MultipleDropdown.Item key='snake'>Snake</MultipleDropdown.Item>\n</MultipleDropdown>","custom-display-value#Custom Display value:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<MultipleDropdown\nlabel='Favorite Animal'\ndefaultSelectedKeys={['snake']}\ncustomDisplayValue='Favorite Animal Selected'\nplaceholder='Choose an animal'\n>\n<MultipleDropdown.Item key='red panda'>Red Panda</MultipleDropdown.Item>\n<MultipleDropdown.Item key='cat'>Cat</MultipleDropdown.Item>\n<MultipleDropdown.Item key='dog' checkmark='tick'>\nDog\n</MultipleDropdown.Item>\n<MultipleDropdown.Item key='aardvark'>Aardvark</MultipleDropdown.Item>\n<MultipleDropdown.Item key='kangaroo'>Kangaroo</MultipleDropdown.Item>\n<MultipleDropdown.Item key='snake'>Snake</MultipleDropdown.Item>\n</MultipleDropdown>","with-header#With Header:":"Filter\n\nClear\n\n\n\nRed Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<MultipleDropdown\nselectionMode='multiple'\ndisabledKeys={['snake']}\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\n>\n<MultipleDropdown.Header>\n<div\nstyle={{\ndisplay: 'flex',\nalignItems: 'center',\njustifyContent: 'space-between',\nwidth: '100%',\npadding: '8px 16px',\nborderBottom: '2px solid #EDEBE9',\n}}\n>\n<span\nstyle={{\ncolor: '#323130',\nfontSize: '12px',\nfontWeight: 'bold',\npadding: 0,\nmargin: 0,\n}}\n>\nFilter\n</span>\n<button\nstyle={{\nfontSize: '12px',\nfontWeight: 'bold',\ncolor: '#A4262C',\nborder: 0,\ncursor: 'pointer',\nbackgroundColor: 'transparent',\n}}\n>\nClear\n</button>\n</div>\n</MultipleDropdown.Header>\n<MultipleDropdown.Item key='red panda'>Red Panda</MultipleDropdown.Item>\n<MultipleDropdown.Item key='cat'>Cat</MultipleDropdown.Item>\n<MultipleDropdown.Item key='dog'>Dog</MultipleDropdown.Item>\n<MultipleDropdown.Item key='aardvark'>Aardvark</MultipleDropdown.Item>\n<MultipleDropdown.Item key='kangaroo'>Kangaroo</MultipleDropdown.Item>\n<MultipleDropdown.Item key='snake'>Snake</MultipleDropdown.Item>\n</MultipleDropdown>","loading#Loading:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<MultipleDropdown\nselectionMode='multiple'\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nisLoading\n>\n<MultipleDropdown.Item key='red panda'>Red Panda</MultipleDropdown.Item>\n<MultipleDropdown.Item key='cat'>Cat</MultipleDropdown.Item>\n<MultipleDropdown.Item key='dog'>Dog</MultipleDropdown.Item>\n<MultipleDropdown.Item key='aardvark'>Aardvark</MultipleDropdown.Item>\n<MultipleDropdown.Item key='kangaroo'>Kangaroo</MultipleDropdown.Item>\n<MultipleDropdown.Item key='snake'>Snake</MultipleDropdown.Item>\n</MultipleDropdown>","with-icon#With Icon:":"Red Panda\n\nCat\n\nDog\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n<MultipleDropdown\nselectionMode='multiple'\nlabel='Favorite Animal'\nplaceholder='Choose an animal'\nicon={<BugIcon />}\n>\n<MultipleDropdown.Item key='red panda'>Red Panda</MultipleDropdown.Item>\n<MultipleDropdown.Item key='cat'>Cat</MultipleDropdown.Item>\n<MultipleDropdown.Item key='dog'>Dog</MultipleDropdown.Item>\n<MultipleDropdown.Item key='aardvark'>Aardvark</MultipleDropdown.Item>\n<MultipleDropdown.Item key='kangaroo'>Kangaroo</MultipleDropdown.Item>\n<MultipleDropdown.Item key='snake'>Snake</MultipleDropdown.Item>\n</MultipleDropdown>","with-section#With Section:":"Fly\n\n\nRed Panda\n\nCat\n\nDog\n\n\n\nAardvark\n\nKangaroo\n\nSnake\n\n\n\n\n<MultipleDropdown label='Favorite Animal' placeholder='Choose an animal'>\n<MultipleDropdown.Item key='fly'>Fly</MultipleDropdown.Item>\n<MultipleDropdown.Section title='Group 1'>\n<MultipleDropdown.Item key='red panda'>Red Panda</MultipleDropdown.Item>\n<MultipleDropdown.Item key='cat'>Cat</MultipleDropdown.Item>\n<MultipleDropdown.Item key='dog'>Dog</MultipleDropdown.Item>\n</MultipleDropdown.Section>\n<MultipleDropdown.Section title='Group 2'>\n<MultipleDropdown.Item key='aardvark'>Aardvark</MultipleDropdown.Item>\n<MultipleDropdown.Item key='kangaroo'>Kangaroo</MultipleDropdown.Item>\n<MultipleDropdown.Item key='snake'>Snake</MultipleDropdown.Item>\n</MultipleDropdown.Section>\n</MultipleDropdown>","props#Props:":"","multipledropdown-#<MultipleDropdown/> :":"Name\tType\tDefault\tDescription\ticon\tReactNode\t-\tIcon display in right side\tname\tstring\t—\tThe name of the input element, used when submitting an HTML form. See MDN.\tlabel\tReactNode\t—\tThe content to display as the label.\tcustomDisplayValue\tReactNode\t—\tReplace the chips with your own message.\tisOpen\tboolean\t—\tOpen state of the menu.\tisLoading\tboolean\t'false'\tLoading effect when list of items is loading by API\tisErrored\tboolean\t'false'\tError state when dropdown is isErrored\tisDisabled\tboolean\t—\tWhether the input is disabled.\tisReadOnly\tboolean\t—\tWhether the input can be selected but not changed by the user.\tisRequired\tboolean\t—\tWhether user input is required on the input before form submission. Often paired with the necessityIndicator prop to add a visual indicator to the input.\tselectedKeys\tIterable<Key>\t-\tThe currently selected keys in the collection (controlled).\tdescription\tstring\t—\tA description for the field. Provides a hint such as specific requirements for what to choose.\tplaceholder\tstring\t—\tTemporary text that occupies the text input when it is empty.\terrorMessage\tstring\t-\tError message for dropdown\tdisabledKeys\tIterable<Key>\t—\tThe item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\tnumberOfRows\tnumber\t—\tNumber of items displayed in Popover.\tdefaultSelectedKeys\tIterable<Key>\t—\tThe initial selected key in the collection (uncontrolled).\tonLoadMore\t() => void\t—\tHandler when user scrolls to the end.\tonSelectionChange\t(key: Key) => any\t—\tHandler that is called when the selection changes.\tonOpenChange\t(isOpen: boolean) => void\t—\tMethod that is called when the open state of the menu changes. Returns the new open state and the action that caused the opening of the menu.","multipledropdownitem-#<MultipleDropdown.Item/> :":"Name\tType\tDefault\tDescription\tkey\tKey\t—\tThe key of the dropdown.\ticon\ticon | color\t—\tThe content of the dropdown Item\ttitle\tReactNode\t—\tThe title of the dropdown.\tchildren\tReactNode\t—\tThe content of the dropdown Item\tcheckmark\tnone | checkbox | tick\t-\tVariant for the selected","multipledropdownsection-#<MultipleDropdown.Section/> :":"Name\tType\tDefault\tDescription\ttitle\tReactNode\t—\tThe title of the section.\tchildren\tReactNode\t—\tThe content of the section\n\nCheck out our ladle for more info\non this component."}},"/components/navbar":{"title":"Navbar","data":{"":"The Navbar displays horizontally information and navigation relating to the current screen.\nCheck out our ladle for more info on this\ncomponent.","import#Import":"import {Navbar} from '@comfortdelgro/react-compass'\nor\nimport Navbar from '@comfortdelgro/react-compass/navbar'","basic-navbar#Basic Navbar":"Workbench Title\n\nHome\n\nServices\n\nProducts\n\n\n\n<Navbar>\n<Avatar size='sm' label='asd' />\n<Navbar.Brand>Workbench Title</Navbar.Brand>\n<Button>Home</Button>\n<Button>Services</Button>\n<Button>Products</Button>\n</Navbar>","brand#Brand":"Navbar Brand renders heading text that adapt to the current color of the Navbar\n\n\nWorkbench Title\n\n\n\n<Navbar>\n<Navbar.Brand>Workbench Title</Navbar.Brand>\n</Navbar>","icon#Icon":"Navbar Icon renders Icon that adapt to the current color of the Navbar\n\n\n\n\n\n\n<Navbar>\n<BugIcon\nstyle={{\ncolor: '#FFF',\nwidth: '$5',\nheight: '$5',\ncursor: 'pointer',\n}}\n/>\n</Navbar>","variants#Variants":"","portal-version#Portal Version":"Home\n\nServices\n\nProducts\n\n\n\n<Navbar variant='portal'>\n<Avatar size='sm' label='asd' />\n<Button>Home</Button>\n<Button>Services</Button>\n<Button>Products</Button>\n</Navbar>","website-version#Website Version":"Home\n\nServices\n\nProducts\n\n\n\n\n<Navbar variant='website'>\n<Avatar size='lg' label='asd' />\n<div\nstyle={{\ndisplay: 'flex',\njustifyContent: 'flex-end',\nflexGrow: 1,\ngap: '12px',\nalignItems: 'center',\n}}\n>\n<Button>Home</Button>\n<Button>Services</Button>\n<Button>Products</Button>\n</div>\n</Navbar>","colors#Colors":"","blue-color-version#Blue Color Version":"Workbench Title\n\nHome\n\nServices\n\nProducts\n\n\n\n<Navbar color='blue'>\n<Avatar size='sm' label='asd' />\n<Navbar.Brand>Workbench Title</Navbar.Brand>\n<Button>Home</Button>\n<Button>Services</Button>\n<Button>Products</Button>\n</Navbar>","white-color-version#White Color Version":"Workbench Title\n\nHome\n\nServices\n\nProducts\n\n\n\n<Navbar color='white'>\n<Avatar size='sm' label='asd' />\n<Navbar.Brand>Workbench Title</Navbar.Brand>\n<Button variant='ghost'>Home</Button>\n<Button variant='ghost'>Services</Button>\n<Button variant='ghost'>Products</Button>\n</Navbar>","props#Props":"","navbar#Navbar":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcolor\twhite | blue\t—\t\tvariant\tportal | website\t—\t\tcss\tCSS\t—","navbarbrand#Navbar.Brand":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","navbaricon#Navbar.Icon":"Name\tType\tDefault\tDescription\ticon\tReactNode\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/otp-Input":{"title":"OTP Input","data":{"":"OTP Input component for inputting One-Time Passwords\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import OTPInput from '@comfortdelgro/react-compass/otpinput'","variants#Variants":"Number OTP\n\n\n\nString OTP\n\n\n\nDisabled\n\n\n\n\n<section\nclassName={styles.avatarShowcaseContainer}\nstyle={{flexDirection: 'column'}}\n>\n<h2>Number OTP</h2>\n<OTPInput\nlength={4}\nisNumberInput\nautoFocus\nonChangeOTP={(otp) => console.log('Number OTP: ', otp)}\n/>\n\n<h2>String OTP</h2>\n<OTPInput\nautoFocus\nlength={4}\nonChangeOTP={(otp) => console.log('String OTP: ', otp)}\n/>\n\n<h2>Disabled</h2>\n<OTPInput\nautoFocus\ndisabled\nlength={4}\nonChangeOTP={(otp) => console.log('String OTP: ', otp)}\n/>\n</section>","props#Props:":"Name\tType\tDefault\tDescription\tlength\tnumber\t—\tThe length of the OTP input\tisNumberInput\tbool\tfalse\tWhether the input should be numbers\tautoFocus\tbool\tfalse\tWhether to autofocus the first input\tonChangeOTP\tfunc\t—\tCallback when the OTP value changes\tdisabled\tbool\tfalse\tWhether the input should be disabled\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/page-header":{"title":"PageHeader, SubHeader","data":{"":"The Page header is used to begin pages and is a format guideline to how the top of a page should be organised\nCheck out our ladle for more info on\nthis component.","import#Import":"import {PageHeader} from '@comfortdelgro/react-compass'\nor\nimport PageHeader from '@comfortdelgro/react-compass/page-header'","basic-pageheader#Basic PageHeader":"import {\nBadge,\nBreadcrumbs,\nButton,\nPageHeader,\n} from '@comfortdelgro/react-compass'\n\nconst isCurrent = (i: number) => {\nif (window && window.location) return window.location.hash === `#${i}`\nreturn false\n}\n\nexport function PageHeaderComponent() {\nreturn (\n<>\n<PageHeader color='white'>\n<Breadcrumbs isCurrent={isCurrent}>\n<Breadcrumbs.Item href='#0'>Home</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#1'>Library</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#2'>Breadcrumbs</Breadcrumbs.Item>\n</Breadcrumbs>\n<PageHeader.Header>\n<PageHeader.Title>Title</PageHeader.Title>\n<PageHeader.Subtitle>This is subtitle</PageHeader.Subtitle>\n<Badge label='Processing' variant='outline' />\n<Button css={{marginLeft: 'auto'}} variant='secondary'>\nCall to action\n</Button>\n<Button variant='secondary'>Call to action</Button>\n<Button variant='secondary'>Call to action</Button>\n</PageHeader.Header>\n<PageHeader.Description>\nLorem ipsum dolor sit amet consectetur adipisicing elit. Perferendis\nharum nulla culpa! Qui, sint officiis, nisi quos quibusdam, voluptatum\namet natus doloribus laudantium exercitationem blanditiis velit\nlaborum repudiandae quas expedita.Lorem ipsum dolor sit amet\nconsectetur adipisicing elit. Perferendis harum nulla culpa! Qui, sint\nofficiis, nisi quos quibusdam, voluptatum amet natus doloribus\nlaudantium exercitationem blanditiis velit laborum repudiandae quas\nexpedita.\n</PageHeader.Description>\n<PageHeader.Description>\nLorem ipsum dolor sit amet consectetur adipisicing elit. Perferendis\nharum nulla culpa! Qui, sint officiis, nisi quos quibusdam, voluptatum\namet natus doloribus laudantium exercitationem blanditiis velit\nlaborum repudiandae quas expedita.Lorem ipsum dolor sit amet\nconsectetur adipisicing elit. Perferendis harum nulla culpa! Qui, sint\nofficiis, nisi quos quibusdam, voluptatum amet natus doloribus\nlaudantium exercitationem blanditiis velit laborum repudiandae quas\nexpedita.\n</PageHeader.Description>\n</PageHeader>\n</>\n)\n}","pageheader-colors#PageHeader Colors":"PageHeader has two color in color props, white and blue. By default, the color is white","white#White":"<PageHeader color={'white'}>\n<Breadcrumbs isCurrent={() => false}>\n<Breadcrumbs.Item href='#0'>Home</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#1'>Library</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#2'>Breadcrumbs</Breadcrumbs.Item>\n</Breadcrumbs>\n<PageHeader.Header>\n<PageHeader.Title>Title</PageHeader.Title>\n<PageHeader.Subtitle>This is subtitle</PageHeader.Subtitle>\n<Badge label='Processing' variant='outline' />\n<Button css={{marginLeft: 'auto'}}>Call to action</Button>\n<Button>Call to action</Button>\n<Button>Call to action</Button>\n</PageHeader.Header>\n</PageHeader>","blue#Blue":"<PageHeader color={'blue'}>\n<Breadcrumbs isCurrent={() => false}>\n<Breadcrumbs.Item href='#0'>Home</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#1'>Library</Breadcrumbs.Item>\n<Breadcrumbs.Item href='#2'>Breadcrumbs</Breadcrumbs.Item>\n</Breadcrumbs>\n<PageHeader.Header>\n<PageHeader.Title>Title</PageHeader.Title>\n<PageHeader.Subtitle>This is subtitle</PageHeader.Subtitle>\n<Badge label='Processing' variant='outline' />\n<Button css={{marginLeft: 'auto'}}>Call to action</Button>\n<Button>Call to action</Button>\n<Button>Call to action</Button>\n</PageHeader.Header>\n</PageHeader>","props#Props":"","pageheader#PageHeader":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcolor\twhite | blue\t—\t\tcss\tCSS\t—","pageheaderheader#PageHeader.Header":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","pageheadertitle#PageHeader.Title":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","pageheadersubtitle#PageHeader.Subtitle":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","pageheaderdescription#PageHeader.Description":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on\nthis component."}},"/components/pagination":{"title":"Pagination","data":{"":"The Pagination component enables the user to select a specific page from a range of pages.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Pagination} from '@comfortdelgro/react-compass'\nor\nimport Pagination from '@comfortdelgro/react-compass/alert'","basic-pagination#Basic pagination:":"<Pagination total={10} />","pagination-with-current-page-prop#Pagination with current page prop:":"<Pagination total={10} page={3} />","pagination-with-onchange-prop#Pagination with onChange prop:":"<Pagination\ntotal={10}\nonChange={(page) => {\nconsole.log(page)\n}}\n/>","props#Props:":"Name\tType\tDefault\tDescription\ttotal\tnumber\t1\tTotal pages to be displayed.\tpage\tnumber\t1\tCurrenty selected page.\tonChange\tfunction\t—\tCallback to catch current page.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/popover":{"title":"Popover","data":{"":"When you want to show a content on above and anchor with an element when user click on it, just use this component follow this guidelines.This component can be used for some cases like notification list, user menu.Actually, you can put whatever you want into the popover content, which is the children of Popover. Default display of popover is inline-block to keep it wraps around the anchor element.\nCheck out our ladle for more info on this\ncomponent.","props#Props:":"Name\tType\tDefault\tDescription\tanchor\tReact.ReactNode\t-\tElement that when you click on to show the Popover\tisOpen\tboolean\t-\tLet Popover content open\toffset\tnumber\t10\tDistance from anchor to popover content\tattachToElement\tHTMLELement\tdocument.body\tWhere to attach the popover\tdirection\tbottom-right bottom-left bottom-center top-right top-left top-center\tbottom-right\tDirection of Popover content","methods#Methods:":"Name\tType\tDefault\tDescription\tonClose\t() => void\tEvent that calls when use has clicked outside","import#Import:":"import Popover, {PopoverDirection} from '@comfortdelgro/react-compass/popover'","samples#Samples:":"const [isOpen, setIsOpen] = useState(false)\nconst direction = 'bottom-right'\n\nreturn (\n<Popover\nisOpen={isOpen}\nanchor={\n<Button\nvariant='secondary'\nonPress={() => {\nsetIsOpen(true)\n}}\n>\nOpen\n</Button>\n}\ndirection={direction}\nonClose={() => {\nsetIsLeftOpen(false)\n}}\n>\n<SampleTopPopover />\n</Popover>\n)\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/progress-bar":{"title":"ProgressBar","data":{"":"Provides the accessibility implementation for a progress bar component. Progress bars show either determinate or indeterminate progress of an operation over time.\nCheck out our ladle for more info on\nthis component.","import#Import:":"import {ProgressBar} from '@comfortdelgro/react-compass'\nor\nimport ProgressBar from '@comfortdelgro/react-compass/progress-bar'","basic-usage#Basic Usage:":"<ProgressBar value={20} label='Label Left' rightLabel='Label Right' />","size#Size:":"<ProgressBar value={20} size='sm' label='sm' />\n<ProgressBar value={20} size='md' label='md' />\n<ProgressBar value={20} size='lg' label='lg'/>\n<ProgressBar value={20} size='xl' label='xl'/>","color#Color:":"<ProgressBar value={20} color='blue' label='blue' />\n<ProgressBar value={20} color='green' label='md' />","variant#Variant:":"<ProgressBar value={20} variant='normal' />\n<ProgressBar value={20} variant='rounded' />","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\n<ProgressBar value={20} css={{'.progress-bar': {backgroundColor: 'red'}}} />","props#Props:":"Name\tType\tDefault\tDescription\tisIndeterminate\tboolean\t-\tWhether presentation is indeterminate when progress isn't known.\tlabel\tboolean\tfalse\tThe content to display as the left label.\trightLabel\tboolean\tfalse\tThe content to display as the right label.\tvalue\tnumber\t0\tThe current value (controlled).\tminValue\tnumber\t0\tThe smallest value allowed for the input.\tmaxValue\tnumber\t100\tWhether presentation is indeterminate when progress isn't known.\tisIndeterminate\tboolean\tfalse\tWhether presentation is indeterminate when progress isn't known.\tcss\tCSS\t—\tExtra styles for progress bar\n\nCheck out our ladle for more info on\nthis component."}},"/components/progress":{"title":"Progress","data":{"":"Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Progress} from '@comfortdelgro/react-compass'\nor\nimport Progress from '@comfortdelgro/react-compass/progress'","basic-progresscircular#Basic Progress.Circular:":"<Progress.Circular variant='indeterminate' />\n<Progress.Circular variant='determinate' value={30} />\n<Progress.Circular variant='indeterminate' color='red' />\n<Progress.Circular variant='indeterminate' size={70} />","basic-progresslinear#Basic Progress.Linear:":"<Progress.Linear variant='indeterminate' />\n<Progress.Linear variant='determinate' value={30} />\n<Progress.Linear variant='buffer' value={30} valueBuffer={40} />\n<Progress.Linear variant='indeterminate' color='red' />\n<Progress.Linear variant='indeterminate' size={10} />\n<Progress.Linear variant='indeterminate' size={10} rounded />","progresscircular-props#Progress.Circular Props:":"Name\tType\tDefault\tDescription\tsize\tnumber\t40\tThe size of the component\tcolor\tstring\t—\tThe color of the component\tvalue\tnumber\t0\tThe value of the progress indicator for the determinate variant. Value between 0 and 100.\tthickness\tnumber\t3.6\tThe thickness of the circle.\tdisableShrink\tnumber\tfalse\tIf true, the shrink animation is disabled. This only works if variant is indeterminate.\tvariant\tdeterminate| indeterminate\tindeterminate\tThe variant to use. Use indeterminate when there is no progress value.","progresslinear-props#Progress.Linear Props:":"Name\tType\tDefault\tDescription\tsize\tnumber\t4\tThe size of the component\tcolor\tstring\t—\tThe color of the component\tvalue\tnumber\t0\tThe value of the progress indicator for the determinate variant. Value between 0 and 100.\trounded\tboolean\tfalse\tThe border radius of lines.\tvalueBuffer\tnumber\t0\tThe value for the buffer variant. Value between 0 and 100.\tvariant\tdeterminate| indeterminate| buffer\tindeterminate\tThe variant to use. Use indeterminate when there is no progress value.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/quantity-toggle":{"title":"Quantity Toggle","data":{"":"Quantity Toggle fields allow users to enter a number, and increment or decrement the value using stepper buttons.\nCheck out our ladle for more info on\nthis component.","support#Support":"Support for internationalized number formatting and parsing including decimals, percentages, currency values, and unitsAutomatically detects the numbering system used and supports parsing numbers not in the default numbering system for the localeSupport for multiple currency formats including symbol, code, and name in standard or accounting notationValidates keyboard entry as the user types so that only valid numeric input according to the locale and numbering system is acceptedHandles composed input from input method editors, e.g. PinyinAutomatically selects an appropriate software keyboard for mobile according to the current platform and allowed valuesSupports rounding to a configurable number of fraction digitsSupport for clamping the value between a configurable minimum and maximum, and snapping to a step valueSupport for stepper buttons and arrow keys to increment and decrement the value according to the step valueSupports pressing and holding the stepper buttons to continuously increment or decrementHandles floating point rounding errors when incrementing, decrementing, and snapping to stepSupports using the scroll wheel to increment and decrement the valueExposed to assistive technology as a text field with a custom localized role description using ARIAFollows the spinbutton ARIA patternWorks around bugs in VoiceOver with the spinbutton role","import#Import:":"import {QuantityToggle} from '@comfortdelgro/react-compass'\nor\nimport QuantityToggle from '@comfortdelgro/react-compass/quantity-toggle'","basic-quantity-toggle#Basic Quantity Toggle:":"By default, NumberField is uncontrolled. However, when using the value prop, it becomes controlled. This allows you to store the current value in your own state, and use it elsewhere.The onChange event is triggered whenever the number value updates. This happens when the user types a value and blurs the input, or when incrementing or decrementing the value. It does not happen as the user types because partial input may not be parseable to a valid number.\n\n\n\n\n<QuantityToggle\nplaceholder='Price'\nonChange={(v) => console.log(v)}\nformatOptions={{\nstyle: 'currency',\ncurrency: 'USD',\n}}\n/>","decimals#Decimals:":"The default formatting style for QT is decimal, but you can configure various aspects via the formatOptions prop. All options supported by Intl.NumberFormat are supported, including configuration of minimum and maximum fraction digits, sign display, grouping separators, etc. Currently only standard notation is supported, though scientific, engineering, and compact notation may be supported in the future.The following example uses the signDisplay option to include the plus sign for positive numbers, for example to display an offset from some value. In addition, it always displays a minimum of 1 digit after the decimal point, and allows up to 2 fraction digits. If the user enters more than 2 fraction digits, the result will be rounded.\n\n\n\n\n<QuantityToggle\nlabel='Adjust exposure'\ndefaultValue={0}\nformatOptions={{\nsignDisplay: 'exceptZero',\nminimumFractionDigits: 1,\nmaximumFractionDigits: 2,\n}}\n/>","percentages#Percentages:":"The style: 'percent' option can be passed to the formatOptions prop to treat the value as a percentage. In this mode, the value is multiplied by 100 before it is displayed, i.e. 0.45 is displayed as 45%. The reverse is also true: when the user enters a value, the onChange event will be triggered with the entered value divided by 100. When the percent option is enabled, the default step automatically changes to 0.01 such that incrementing and decrementing occurs by 1%.\n\n\n\n\n<QuantityToggle\nlabel='Sales tax'\ndefaultValue={0.05}\nformatOptions={{\nstyle: 'percent',\n}}\n/>","currency-values#Currency values:":"The style: 'currency' option can be passed to the formatOptions prop to treat the value as a currency value. The currency option must also be passed to set the currency code (e.g. USD) to use. In addition, the currencyDisplay option can be used to choose whether to display the currency symbol, currency code, or currency name. Finally, the currencySign option can be set to accounting to use accounting notation for negative numbers, which uses parentheses rather than a minus sign in some locales.If you need to allow the user to change the currency, you should include a separate dropdown next to the number field. The number field itself will not determine the currency from the user input.\n\n\n\n\n<QuantityToggle\nlabel='Transaction amount'\ndefaultValue={45}\nformatOptions={{\nstyle: 'currency',\ncurrency: 'EUR',\ncurrencyDisplay: 'code',\ncurrencySign: 'accounting',\n}}\n/>","units#Units:":"The style: 'unit' option can be passed to the formatOptions prop to format the value with a unit of measurement. The unit option must also be passed to set which unit to use (e.g. inch). In addition, the unitDisplay option can be used to choose whether to display the unit in long, short, or narrow format.If you need to allow the user to change the unit, you should include a separate dropdown next to the number field. The number field itself will not determine the unit from the user input.\n\n\n\n\n<QuantityToggle\nlabel='Package width'\ndefaultValue={4}\nformatOptions={{\nstyle: 'unit',\nunit: 'inch',\nunitDisplay: 'long',\n}}\n/>","minimum-and-maximum-values#Minimum and maximum values:":"The minValue and maxValue props can be used to limit the entered value to a specific range. The value will be clamped when the user blurs the input field. In addition, the increment and decrement buttons will be disabled when the value is within one step value from the bounds (see below for info about steps). Ranges can be open ended by only providing either minValue or maxValue rather than both.If a valid range is known ahead of time, it is a good idea to provide it to NumberField so it can optimize the experience. For example, when the minimum value is greater than or equal to zero, it is possible to use a numeric keyboard on iOS rather than a full text keyboard (necessary to enter a minus sign).\n\n\n\n\n<QuantityToggle label='Your math score' minValue={0} maxValue={10} />","step-values#Step values:":"The step prop can be used to snap the value to certain increments. If there is a minValue defined, the steps are calculated starting from the minimum. For example, if minValue=, and step=, the valid step values would be 2, 5, 8, 11, etc. If no minValue is defined, the steps are calculated starting from zero and extending in both directions. In other words, such that the values are evenly divisible by the step. If no step is defined, any decimal value may be typed, but incrementing and decrementing snaps the value to an integer.If the user types a value that is between two steps and blurs the input, the value will be snapped to the nearest step. When incrementing or decrementing, the value is snapped to the nearest step that is higher or lower, respectively. When incrementing or decrementing from an empty field, the value starts at the minValue or maxValue, respectively, if defined. Otherwise, the value starts from 0.\n\n\n\n\n<QuantityToggle label='Step' step={10} />","disabled-and-read-only#Disabled and read only:":"The isDisabled and isReadOnly props can be used prevent the user from editing the value of the number field. The difference is that isReadOnly still allows the input to be focused, while isDisabled prevents all user interaction.\n\n\n\n\n\n\n<QuantityToggle label=\"Disabled\" isDisabled value={25} />\n<QuantityToggle label=\"Read only\" isReadOnly value={32} />","update-event#Update Event:":"The onUpdate is returned when the number field is updated. It's will returned full string of value includes comma separated, dot separated, currency sign, ...\n\n\n\n\n<QuantityToggle\nplaceholder='Price'\nonUpdate={(v) => console.log(v)}\nformatOptions={{\nstyle: 'currency',\ncurrency: 'USD',\n}}\n/>","enable-scroll-to-increment-and-decrement#Enable scroll to increment and decrement:":"Using props disabledScroll and set it to false to enable scroll.\n\n\n\n\n<QuantityToggle\nplaceholder='Price'\ndisabledScroll={false}\nformatOptions={{\nstyle: 'currency',\ncurrency: 'USD',\n}}\n/>","error#Error:":"<QuantityToggle\nlabel='Potato price'\ndefaultValue={2}\nisErrored\nhelperText='This is helper text'\nerrorMessage='This is error message'\n/>","props#Props:":"Name\tType\tDefault\tDescription\tstep\tnumber\t—\tThe amount that the input value changes with each increment or decrement \"tick\".\tlabel\tReactNode\t—\tThe content to display as the label.\tvalue\tnumber\t—\tThe current value (controlled).\tminValue\tnumber\t—\tThe smallest value allowed for the input.\tmaxValue\tnumber\t—\tThe largest value allowed for the input.\tautoFocus\tboolean\t—\tWhether the element should receive focus on render.\tisErrored\tboolean\tfalse\tWhether the input is isErrored.\tisDisabled\tboolean\tfalse\tWhether the input is disabled.\tisReadOnly\tboolean\tfalse\tWhether the input can be selected but not changed by the user.\tisRequired\tboolean\tfalse\tWhether user input is required on the input before form submission. Often paired with the necessityIndicator prop to add a visual indicator to the input.\thelperText\tstring\t—\tThe helper text below.\tplaceholder\tstring\t—\tTemporary text that occupies the text input when it is empty.\tdefaultValue\tnumber\t—\tThe default value (uncontrolled).\tformatOptions\tIntl.FormatOptions\t—\tFormatting options for the value displayed in the number field. This also affects what characters are allowed to be typed by the user.\tdisabledScroll\tboolean\ttrue\tWhether the scroll to change value is disabled.\tvalidationState\tValidationState\t—\tWhether the input should display its \"valid\" or \"invalid\" visual styling.\tonBlur\t(e: FocusEvent) => void\t—\tHandler that is called when the element loses focus.\tonFocus\t(e: FocusEvent) => void\t—\tHandler that is called when the element receives focus.\tonKeyUp\t(e: FocusEvent) => void\t—\tHandler that is called when a key is released.\tonChange\t(value: T) => void\t—\tHandler that is called when the value changes.\tonKeyDown\t(e: FocusEvent) => void\t—\tHandler that is called when a key is pressed.\tonFocusChange\t(isFocused: boolean) => void\t—\tHandler that is called when the element's focus status changes.\tonUpdate\t(textVal: T, numberVal: number) => void\t—\tHandler that is called when the value changes, returned text value and number value\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on\nthis component."}},"/components/radio":{"title":"Radio","data":{"":"Radio allow users to select a single item from a list of mutually exclusive options.\nCheck out our ladle for more info on this\ncomponent.","import#Import":"import {Radio, RadioGroupProps, RadioProps} from '@comfortdelgro/react-compass'\nor\nimport {\nRadio,\nRadioGroupProps,\nRadioProps,\n} from '@comfortdelgro/react-compass/radio'\nWe recommend the second method to import components for the benefits of tree shaking.","variants#Variants":"Outlined style\n<Radio.Group>\n<Radio\nvariant='outlined'\nlabel={\n<>\ntest <BugIcon />\n</>\n}\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='1'\ntooltip='This is tooltip'\n/>\n<Radio\nvariant='outlined'\nlabel='test2'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='2'\n/>\n<Radio\nvariant='outlined'\nlabel='test3'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='3'\nisDisabled\n/>\n</Radio.Group>\n\n\n\n\n\n\n\n\n\n\nSimple style as default\n<Radio.Group>\n<Radio\nvariant='simple'\nlabel='test'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='1'\ntooltip='This is tooltip'\n/>\n<Radio\nvariant='simple'\nlabel='test2'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='2'\n/>\n<Radio\nvariant='simple'\nlabel='test3'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='3'\nisDisabled\n/>\n</Radio.Group>","orientation#Orientation":"Orientation horizontal\n<Radio.Group orientation='horizontal'>\n<Radio\nlabel='test'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='1'\ntooltip='This is tooltip'\n/>\n<Radio\nlabel='test2'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='2'\n/>\n</Radio.Group>\n\n\n\n\n\n\n\n\nOrientation vertical as default\n<Radio.Group orientation='vertical'>\n<Radio\nlabel='test'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='1'\ntooltip='This is tooltip'\n/>\n<Radio\nlabel='test2'\ndescription='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\nvalue='2'\n/>\n</Radio.Group>","props#Props":"","radiogroup-props#Radio.Group Props:":"Name\tType\tDefault\tDescription\tchildren*\t[ReactElement, ReactElement]\t—\tChildrent must be Radio component\torientation\tvertical | horizontal\tvertical\tThe axis the Radio Button(s) should align with.\tname\tstring\t-\tThe name of the RadioGroup, used when submitting an HTML form.\tvalue\tstring\t-\tThe current value (controlled).\tdefaultValue\tstring\t-\tThe current value (uncontrolled).\tonChange\t(value: boolean) => void\t-\tHandler that is called when the value changes.\tonBlur\t() => void\t-\tHandler that is called when click outside group.\tisDisabled\tboolean\tfalse\tWhether the input is disabled.\tisReadOnly\tboolean\tfalse\tWhether the input can be selected but not changed by the user.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","radio-props#Radio Props":"Name\tType\tDefault\tDescription\ttitle\tstring\t—\tDisplay title for radio\tdescription\tstring\t—\tDisplay description for radio\trightLabel\tReactNode\t—\tDisplay rightLabel for radio\ttooltip\tstring\t—\tDisplay tooltip for radio\tvalue\tstring\t-\tThe value of the radio button, used when submitting an HTML form.\tisDisabled\tboolean\tfalse\tWhether the radio button is disabled or not. Shows that a selection exists, but is not available in that circumstance.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/range-calendar":{"title":"Range Calendar","data":{"":"RangeCalendars display a grid of days in one or more months and allow users to select a contiguous range of dates.\nCheck out our ladle for more info on\nthis component.","pre-install#Pre-Install":"Install these packages to use their utilities\n\nbash npm i @react-aria/i18n @internationalized/date\n\nbash yarn add @react-aria/i18n @internationalized/date\n\nbash pnpm add @react-aria/i18n @internationalized/date","import#Import":"import {RangeCalendar} from '@comfortdelgro/react-compass'\nor\nimport RangeCalendar from '@comfortdelgro/react-compass/range-calendar'","basic#Basic":"<RangeCalendar />","controlled#Controlled":"import {Calendar, RangeCalendar, RangeValue} from '@comfortdelgro/react-compass'\nimport {\nDateValue,\ngetLocalTimeZone,\nisWeekend,\nparseDate,\ntoday,\n} from '@internationalized/date'\nimport {useDateFormatter, useLocale} from '@react-aria/i18n'\n\nexport function ControlledRangeCalendar() {\nconst [range, setRange] = React.useState<RangeValue<DateValue>>({\nstart: parseDate('2020-02-03'),\nend: parseDate('2020-02-08'),\n})\nconst formatter = useDateFormatter({dateStyle: 'long'})\nreturn (\n<>\n{range &&\nformatter.formatRange(\nrange.start.toDate(getLocalTimeZone()),\nrange.end.toDate(getLocalTimeZone()),\n)}\n<RangeCalendar onChange={(e) => setRange(e as RangeValue<DateValue>)} />\n</>\n)\n}","disabled#Disabled":"<RangeCalendar isDisabled />","read-only#Read only":"<RangeCalendar isReadOnly />","props#Props":"Name\tType\tDefault\tDescription\tminValue\tDateValue\t\tThe minimum allowed date that a user may select.\tmaxValue\tDateValue\t\tThe maximum allowed date that a user may select.\tisReadOnly\tboolean\tfalse\tWhether the calendar value is immutable.\tisDisabled\tboolean\tfalse\tWhether the calendar is disabled.\thasFooter\tboolean\tfalse\tWhether the calendar footer is shown.\tvalue\tRangeValue<DateValue || null>\t\tThe current value (controlled).\tdefaultValue\tRangeValue<DateValue>\t\tThe default value (uncontrolled).\tonChange\t(e: RangeValue<DateValue || null>) => void\t\tThe default value (uncontrolled).\tisDateUnavailable\t(date: DateValue) => boolean\t\tCallback that is called for each date of the calendar. If it returns true, then the date is unavailable."}},"/components/rating":{"title":"Rating","data":{"":"Rating provides others' opinions and experiences.\nCheck out our ladle for more info on this\ncomponent.","import#Import":"import {Rating} from '@comfortdelgro/react-compass'\nor\nimport Rating from '@comfortdelgro/react-compass/rating'","basic#Basic":"<Rating />","with-icons#With Icons":"<Rating useIcons />","props#Props":"Name\tType\tDefault\tDescription\tuseIcons\tboolean\t\tThe minimum allowed date that a user may select.\tonChange\t(e: number | null ) => void\t\tCallback that is called when changing the rating.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/rich-text-editor":{"title":"Rich text editor","data":{"":"Check out our ladle for more info on\nthis component.","import#Import:":"import RichTextEditor, {\nJSONContent,\nContent,\n} from '@comfortdelgro/react-compass/rich-text-editor'","default#Default":"const [description, setDescription] =\n(React.useState < string) | (JSONContent > '')\n\nconst handleChange = (content: string | JSONContent) => {\nsetDescription(content)\n}\n\n;<RichTextEditor characterCount={200} onChange={handleChange}>\n<RichTextEditor.Toolbar>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.Undo />\n<RichTextEditor.Redo />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.H1 />\n<RichTextEditor.H2 />\n<RichTextEditor.H3 />\n<RichTextEditor.H4 />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.ColorControl />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.TextAlginmentSelector />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.Bold />\n<RichTextEditor.Italic />\n<RichTextEditor.Underline />\n<RichTextEditor.Strikethrough />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.BulletList />\n<RichTextEditor.OrderedList />\n<RichTextEditor.Link />\n<RichTextEditor.Unlink />\n<RichTextEditor.Image />\n<RichTextEditor.Superscript />\n<RichTextEditor.Subscript />\n<RichTextEditor.Hr />\n<RichTextEditor.CodeBlock />\n<RichTextEditor.Blockquote />\n</RichTextEditor.Toolbar>\n</RichTextEditor>","customized#Customized":"const [description, setDescription] =\n(React.useState < string) | (JSONContent > '')\n\nconst handleChange = (content: string | JSONContent) => {\nsetDescription(content)\n}\n\n;<RichTextEditor characterCount={200} onChange={handleChange}>\n<RichTextEditor.Toolbar>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.Undo />\n<RichTextEditor.Redo />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.H1 />\n<RichTextEditor.H2 />\n<RichTextEditor.H3 />\n<RichTextEditor.H4 />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.ColorControl />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.AlignLeft />\n<RichTextEditor.AlignCenter />\n<RichTextEditor.AlignRight />\n<RichTextEditor.AlignJustify />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.ControlsGroup>\n<RichTextEditor.Bold />\n<RichTextEditor.Italic />\n<RichTextEditor.Underline />\n<RichTextEditor.Strikethrough />\n</RichTextEditor.ControlsGroup>\n<RichTextEditor.BulletList />\n<RichTextEditor.OrderedList />\n<RichTextEditor.Link />\n<RichTextEditor.Unlink />\n<RichTextEditor.Image />\n<RichTextEditor.Superscript />\n<RichTextEditor.Subscript />\n<RichTextEditor.Hr />\n<RichTextEditor.CodeBlock />\n</RichTextEditor.Toolbar>\n</RichTextEditor>","components#Components:":"Name\tType\tDefault\tDescription\tRichTextEditor\tComponent\t\tThe core component, used for wrapping editing controls.\tRichTextEditor.Default\tComponent\t\tDefault rich text editor.\tRichTextEditor.Toolbar\tComponent\t\tThe toolbar for the editor.\tRichTextEditor.ControlsGroup\tComponent\t\tUsed for grouping editor controls.\tRichTextEditor.Undo\tComponent\t\tUndo the last change.\tRichTextEditor.Redo\tComponent\t\tRedo the last change.\tRichTextEditor.H1\tComponent\t\tHeading 1.\tRichTextEditor.H2\tComponent\t\tHeading 2.\tRichTextEditor.H3\tComponent\t\tHeading 3.\tRichTextEditor.H4\tComponent\t\tHeading 4.\tRichTextEditor.H5\tComponent\t\tHeading 5.\tRichTextEditor.H6\tComponent\t\tHeading 6.\tRichTextEditor.AlignLeft\tComponent\t\tLeft text alignment.\tRichTextEditor.AlignCenter\tComponent\t\tCenter text alignment.\tRichTextEditor.AlignRight\tComponent\t\tRight text alignment.\tRichTextEditor.AlignJustify\tComponent\t\tJustify text alignment.\tRichTextEditor.Bold\tComponent\t\tRender text in bold.\tRichTextEditor.Italic\tComponent\t\tRender text in italic.\tRichTextEditor.Underline\tComponent\t\tRender text in underline.\tRichTextEditor.Strikethrough\tComponent\t\tRender text in strike through.\tRichTextEditor.BulletList\tComponent\t\tRender a bullet list.\tRichTextEditor.OrderedList\tComponent\t\tRender an ordered list.\tRichTextEditor.Link\tComponent\t\tRender a link.\tRichTextEditor.Unlink\tComponent\t\tRemoves a link.\tRichTextEditor.Image\tComponent\t\tRender an image from a provided link.\tRichTextEditor.Superscript\tComponent\t\tRender text in superscript.\tRichTextEditor.Subscript\tComponent\t\tRender text in subscript.\tRichTextEditor.Hr\tComponent\t\tRender a line breaker.\tRichTextEditor.ColorControl\tComponent\t\tRender a color selector, provide colors via colors props.\tRichTextEditor.TextAlginmentSelector\tComponent\t\tRender a text alignment selector.\tRichTextEditor.HeadingsControl\tComponent\t\tRender a heading selector, provide levels via levels props.\tRichTextEditor.CodeBlock\tComponent\t\tRender a code block.","props#Props:":"","richtexteditor#RichTextEditor":"Name\tType\tDefault\tDescription\toutputType\thtml | json\t'html'\tOutput type.\tonChange\tFunction\t-\tCallback when the editor content changes.\tisEditable\tboolean\ttrue\tWhether the editor is editable.\tcharacterCount\tnumber | null\tnull\tShow maximum allowed characters.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\tcontent\tnull\tnull\tYou can provide the initial content for the editor.","headingscontrol#HeadingsControl":"Name\tType\tDefault\tDescription\tlevels\tnumber[]\t[1, 2, 3, 4, 5, 6]\tLevels of heading.\n\nCheck out our ladle for more info on\nthis component."}},"/components/searchField":{"title":"Search Fields","data":{"":"Search Fields let users enter search input.\nCheck out our ladle for more info on\nthis component.","import#Import:":"import {SearchField} from '@comfortdelgro/react-compass'\nor\nimport SearchField from '@comfortdelgro/react-compass/searchfield'","basic-search-field#Basic Search Field:":"<SearchField placeholder='Search' onSubmit={(text) => console.log(text)} />\n<SearchField\nisDisabled\nplaceholder='Search'\nonSubmit={(text) => console.log(text)}\n/>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\n<SearchField\nplaceholder='Search'\nonSubmit={(text) => console.log(text)}\ncss={{border: '1px solid gray'}}\n/>","props#Props:":"Name\tType\tDefault\tDescription\tisDisabled\tfalse| true\t\t\tonSubmit\t(i:string)=>void\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on\nthis component."}},"/components/sidebar":{"title":"Sidebar","data":{"":"Check out our ladle for more info on this\ncomponent.","import#Import":"import {Sidebar} from '@comfortdelgro/react-compass'\nor\nimport Sidebar from '@comfortdelgro/react-compass/sidebar'","primary#Primary":"<Button\ncss={{width: '9rem', height: '3.5rem', fontSize: '1em'}}\nonPress={() => setIsPrimaryOpen(true)}\n>\nOpen sidebar\n</Button>\n\n<Sidebar\nisOpen={isPrimaryOpen}\nhandleClose={() => setIsPrimaryOpen(false)}\nvariant='primary'\n>\n<Sidebar.Title>My title</Sidebar.Title>\n<Sidebar.Content>My content</Sidebar.Content>\n<Sidebar.Actions>\n<Button css={{width: '45%', height: '100%', fontSize: '1em'}}>\nAction\n</Button>\n<Button css={{width: '45%', height: '100%', fontSize: '1em'}}>\nAction\n</Button>\n</Sidebar.Actions>\n</Sidebar>","secondary#Secondary":"<Button\ncss={{width: '9rem', height: '3.5rem', fontSize: '1em'}}\nonPress={() => setIsPrimaryOpen(true)}\n>\nOpen sidebar\n</Button>\n\n<Sidebar\nisOpen={isPrimaryOpen}\nhandleClose={() => setIsPrimaryOpen(false)}\nvariant='secondary'\n>\n<Sidebar.Title>My title</Sidebar.Title>\n<Sidebar.Content>My content</Sidebar.Content>\n<Sidebar.Actions>\n<Button css={{width: '45%', height: '100%', fontSize: '1em'}}>\nAction\n</Button>\n<Button css={{width: '45%', height: '100%', fontSize: '1em'}}>\nAction\n</Button>\n</Sidebar.Actions>\n</Sidebar>","props#Props":"Name\tType\tDefault\tDescription\tvariant\tprimary | secondary\t'primary'\tVariants\thandleClose\tFunction\t-\tCallback to close sidebar.\tisOpen\tboolean\tfalse\tThe sidebar is visible when true.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/sidenav":{"title":"Sidenav","data":{"":"The Sidenav displays horizontally information and navigation relating to the current screen.\nCheck out our ladle for more info on this\ncomponent.","import#Import":"import {Sidenav} from '@comfortdelgro/react-compass'\nor\nimport Sidenav from '@comfortdelgro/react-compass/Sidenav'","basic-sidenav#Basic Sidenav":"Workbench\n\n\n\n\n\n\n\nMenu\n\n\n\n\n\nMenu\n\n\n\n\n\nMenu\n\n\n\n\n\nMenu\n\n\n\n\n<Sidenav css={{height: '800px'}}>\n<Sidenav.Item>\n<Avatar label='M' />\n<h2 style={{fontSize: '24px', marginLeft: '22px', color: '#323130'}}>\nWorkbench\n</h2>\n</Sidenav.Item>\n<Sidenav.Divider />\n<Sidenav.Item>\n<Icon icon={faAmbulance}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n<Sidenav.Item>\n<Icon icon={faBank}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n<Sidenav.Item>\n<Icon icon={faCar}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n<Sidenav.Item>\n<Icon icon={faHelicopter}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n</Sidenav>","expand#Expand":"You can expand the Sidenav without hovering\n\n\n\n\n\nMenu\n\n\n\n\n<Sidenav css={{height: '800px'}} expand>\n<Sidenav.Item isActive>\n<Icon icon={faHelicopter}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n</Sidenav>","sidenav-item#Sidenav Item":"Sidenav Item accepts three children (Order matters). The first child is for Icon, the second child is the title, the third child is for menu.\nIf Sidenav is not in expand mode, only the first child will be rendered\n\n\n\n\n\nMenu\n\n\n\n\n<Sidenav css={{height: '800px'}}>\n<Sidenav.Item isActive>\n<Icon icon={faHelicopter}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n</Sidenav>","sidenav-menu#Sidenav Menu":"Sidenav Menu serves as the popover menu for Sidenav Item. It must be placed as the third child of the Sidenav Item\n\n\n\n\n\nMenu\n\n\n\n\n\nMenu\n\n\n\n\n\nMenu\n\n\n\n\n\n\n\n\n<Sidenav css={{height: '800px'}}>\n<Sidenav.Item isActive>\n<Icon icon={faHelicopter}></Icon>\n<span>Menu</span>\n<Sidenav.Menu>\n<Sidenav.Item>\n<Icon icon={faHelicopter}></Icon>\n<span>Menu</span>\n<Sidenav.Menu>\n<Sidenav.Item>\n<Icon icon={faHelicopter}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n</Sidenav.Menu>\n</Sidenav.Item>\n</Sidenav.Menu>\n</Sidenav.Item>\n</Sidenav>","sidenav-divider#Sidenav Divider":"Sidenav divider provides a horizontal divider to Sidenav\n\n\n\n\n\nMenu\n\n\n\n\n\n\n\nMenu\n\n\n\n\n<Sidenav css={{height: '800px'}}>\n<Sidenav.Item isActive>\n<Icon icon={faHelicopter}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n<Sidenav.Divider />\n<Sidenav.Item>\n<Icon icon={faHelicopter}></Icon>\n<span>Menu</span>\n</Sidenav.Item>\n</Sidenav>","props#Props":"","sidenav#Sidenav":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\texpand\tboolean\tfalse\tWhether the Sidenav is expanded by default or expanded by hover\tcss\tCSS\t—","sidenav-item-1#Sidenav Item":"Name\tType\tDefault\tDescription\tchildren*\tReact.ReactNode\t—\tAccept only three children. First one should be Icon, second child should be title, the last one is for sidenav menu\tisActive\tboolean\tfalse\tWhether the item is currently activated or not\tcss\tCSS\t—","sidenav-menu-1#Sidenav Menu":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\tShould be Sidenav Item\tisOpen\tboolean\tfalse\tControlled opening state\tplacement\tPlacement\t'right-start'\tPopover placement\tdelay\t{open?: number, close?: number}\t{open: 150, close: 100}\tDelay time before popover appear or disappear\tshouldFlip\tboolean\ttrue\tWhether popover should flip side when not enough room\tonOpenChange\t(isOpen: boolean) => void\t—\tCallback when popover change its opening state","sidenav-divider-1#Sidenav Divider":"Name\tType\tDefault\tDescription\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/skeleton":{"title":"Skeleton","data":{"":"Display a placeholder preview of your content before the data gets loaded to reduce load-time frustration.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Skeleton} from '@comfortdelgro/react-compass'\nor\nimport Skeleton from '@comfortdelgro/react-compass/skeleton'","variants#Variants:":"<Skeleton variant='text' />\n<Skeleton variant='circular' width={40} height={40} />\n<Skeleton variant='rectangular' width={210} height={60} />\n<Skeleton variant='rounded' width={210} height={60} />\n<Skeleton variant='rectangular'>\n<div style={{width: 210, height: 120}} />\n</Skeleton>","animations#Animations:":"<Skeleton width={210} height={60} />\n<Skeleton width={210} height={60} animation='wave' />\n<Skeleton width={210} height={60} animation={false} />","props#Props:":"Name\tType\tDefault\tDescription\tcolor\tstring\t—\tColor for the background\twidth\tstring | number\t—\tWidth of the skeleton. Useful when the skeleton is inside an inline element with no width of its own.\theight\tstring | number\t—\tHeight of the skeleton. Useful when you don't want to adapt the skeleton to a text element but for instance a card.\tchildren\tNode\t—\tOptional children to infer width and height from.\tcomponent\tJSX.IntrinsicElements\t—\tThe component used for the root node. Either a string to use a HTML element or a component.\tanimation\tpulse | wave | false\tpulse\tThe animation. If false the animation effect is disabled.\tvariant\tcircular | rectangular | rounded | text\ttext\tThe type of content that will be rendered.\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/slider":{"title":"Slider","data":{"":"Provides the behavior and accessibility implementation for a slider component representing one or more values.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Slider} from '@comfortdelgro/react-compass'\nor\nimport Slider from '@comfortdelgro/react-compass/slider'","basic-usage#Basic Usage:":"<Slider />\n<Slider value={20} onChangeEnd={(val) => console.log(val)} />\n<Slider isDisabled />\n<Slider tooltip={false} />","props#Props:":"Name\tType\tDefault\tDescription\tisDisabled\tboolean\tfalse\tWhether the Slider are disabled. Shows that a selection exists, but is not available in that circumstance.\ttooltip\tboolean\ttrue\tWhether the tooltip of slider are hidden.\tonChangeEnd\t(value: number) => void\t—\tFired when the slider stops moving, due to being let go.\tonChange\t(value: number) => void\t—\tHandler that is called when the value changes.\tminValue\tnumber\t0\tThe slider's minimum value.\tmaxValue\tnumber\t100\tThe slider's maximum value.\tstep\tnumber\t1\tThe slider's step value.\tvalue\tnumber\t0\tThe current value (controlled).\tdefaultValue\tnumber\t0\tThe currently selected key in the collection (uncontrolled).\tclassName\tString\t—\tExtra class name for slider.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/speed-dial":{"title":"SpeedDial","data":{"":"Provides the behavior and accessibility implementation for a speed-dial component.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {SpeedDial} from '@comfortdelgro/react-compass'\nor\nimport SpeedDial from '@comfortdelgro/react-compass/slider'","basic-usage#Basic Usage:":"Default:\n\n\n\n\n\n<SpeedDial\nactions={[\n{\nname: 'Action 1',\nicon: '+',\nonClick: () => console.log('Action 1 clicked'),\n},\n{\nname: 'Action 2',\nicon: '-',\nonClick: () => console.log('Action 2 clicked'),\n},\n// Add more actions as needed\n]}\nposition='up'\n/>","props#Props:":"Name\tType\tDefault\tDescription\tactions\tArray<Object>\t{}\tArray of Object define the actions can show on speed dial.\tposition\tstring\tup\tDefine the position where the actions list show\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/spinners":{"title":"Spinners","data":{"":"Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Spinner} from '@comfortdelgro/react-compass'\nor\nimport Spinner from '@comfortdelgro/react-compass/spinner'","default-circular#Default Circular:":"<Spinner size='2xl' />\n<Spinner size='xl' />\n<Spinner size='lg' />\n<Spinner size='md' />\n<Spinner size='sm' />","circular-without-label#Circular without label:":"<Spinner size='2xl' label={false} />\n<Spinner size='xl' label={false} />\n<Spinner size='lg' label={false} />\n<Spinner size='md' label={false} />\n<Spinner size='sm' label={false} />","circular-with-custom-label#Circular with custom label:":"<Spinner size='2xl' label={'Running...'} />","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\n<Spinner size='2xl' css={{height: '15em'}} />","props#Props:":"Name\tType\tDefault\tDescription\tsize\tsm| md | lg | xl | 2xl\t\t\tlabel\tfalse| true | String\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/sub-banner":{"title":"Sub-banner","data":{"":"Check out our ladle for more info on this\ncomponent.","import#Import":"import {SubBanner} from '@comfortdelgro/react-compass'\nor\nimport SubBanner from '@comfortdelgro/react-compass/subBanner'","primary#Primary":"My Title\n\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti esse\nqui earum dolorum.\n\n\n<SubBanner variant='primary'>\n<SubBanner.Image src='https://images.unsplash.com/photo-1603015445413-ffb825cedab4?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80' />\n<SubBanner.Title>My Title</SubBanner.Title>\n<SubBanner.Description>\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti esse\nqui earum dolorum.\n</SubBanner.Description>\n</SubBanner>","secondary#Secondary":"My Title\n\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti esse\nqui earum dolorum.\n\n\n<SubBanner variant='secondary'>\n<SubBanner.Image src='https://images.unsplash.com/photo-1603015445413-ffb825cedab4?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80' />\n<SubBanner.Title>My Title</SubBanner.Title>\n<SubBanner.Description>\nLorem ipsum dolor, sit amet consectetur adipisicing elit. Iste corrupti esse\nqui earum dolorum.\n</SubBanner.Description>\n</SubBanner>","props#Props":"Name\tType\tDefault\tDescription\tvariant\tprimary | secondary\t'primary'\tVariants\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/sub-header":{"title":"SubHeader","data":{"":"The Sub header is then used to follow up on the top of subsequent child pages\nCheck out our ladle for more info on this\ncomponent.","import#Import":"import {SubHeader} from '@comfortdelgro/react-compass'\nor\nimport SubHeader from '@comfortdelgro/react-compass/page-header'","basic-subheader#Basic SubHeader":"<SubHeader>\n<SubHeader.Header>\n<SubHeader.Title>Title</SubHeader.Title>\n</SubHeader.Header>\n<SubHeader.Description>Description.</SubHeader.Description>\n</SubHeader>","props#Props":"","pageheader#PageHeader":"","subheader#SubHeader":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","subheaderheader#SubHeader.Header":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","subheadertitle#SubHeader.Title":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—","subheaderdescription#SubHeader.Description":"Name\tType\tDefault\tDescription\tchildren\tReact.ReactNode\t—\t\tcss\tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/table-v2":{"title":"Table-v2","data":{"":"Table version 2 is a wrapper around the core table logic. Most of its job is related to managing state the \"react\" way, providing types and the rendering implementation of cell/header/footer templates.\nCheck out our ladle for more info on\nthis component.","import#Import:":"import {ReactTable} from '@comfortdelgro/react-compass'\nor\nimport ReactTable from '@comfortdelgro/react-compass/table-v2'","basic-table-v2#Basic table-v2:":"<ReactTable data={data} columns={columns} options={options}>\n<ReactTable.Toolbar\ncss={{\ndisplay: 'flex',\nflexDirection: 'row',\njustifyContent: 'space-between',\n}}\n>\n<SearchField placeholder='Search' />\n\n<div\nstyle={{\ndisplay: 'flex',\nflexDirection: 'row',\nalignItems: 'center',\ngap: '0.5rem',\n}}\n>\n<Button variant='primary'>Button</Button>\n<Button variant='secondary'>Button</Button>\n<Button variant='ghost'>\n<Icon icon={faTrashAlt} />\n</Button>\n<Button variant='ghost'>\n<Icon icon={faDashboard} />\n</Button>\n<Button variant='ghost'>\n<Icon icon={faFileLines} />\n</Button>\n</div>\n</ReactTable.Toolbar>\n<ReactTable.Footer\ncss={{\ndisplay: 'flex',\nflexDirection: 'row',\njustifyContent: 'space-between',\n}}\n>\n<div>{/* Todo: Dropdown */}</div>\n<div\nstyle={{\ndisplay: 'flex',\nflexDirection: 'row',\nalignItems: 'center',\ngap: '0.5rem',\n}}\n>\n<div\nstyle={{\nfontWeight: '600',\n}}\n>\n{(page - 1) * 10 + 1} - {(page - 1) * 10 + 10} of 100\n</div>\n<Pagination page={page} onChange={(page) => setPage(page)} total={10} />\n</div>\n</ReactTable.Footer>\n</ReactTable>","usage#Usage:":"For server sorting:\n*if user want to custom sort. Add manualSorting: true to ReactTableOptions.\n\n\nconst options: ReactTableOptions = {\nenableSorting: true,\nenableMultiSort: true,\ncolumnResizeMode: 'onChange',\nmanualSorting: true,\n}\n*then create function and assign to onManualSorting props on ReactTable.Example:\nconst onSorting = (sortingField: StateSorting) => {\nconsole.log('stateSorting', sortingField)\n}\n\n<ReactTable data={data} columns={columns} options={options} onManualSorting={onSorting}>\n*props sortingField contain all informations sorting for your need\nFor custom style:\n\n*add className to ReactTable\n<ReactTable\ndata={data}\ncolumns={columns}\noptions={options}\nonManualSorting={onSorting}\nclassName='someClassName'\n>\n\noptions property of table-v2:\n\n\nconst options: OptionType = {\nenableSorting?: boolean\nenableMultiSort?: boolean\nmanualSorting?: boolean\ncolumnResizeMode?: 'onChange' | 'onEnd'\n}","props#Props:":"Name\tType\tDefault\tDescription\tdata\tArray\t[]\tData for show \tcolumns\tArray<ColumnDef<T>>\t[]\tcolumn with custom config\toptions\tOptionType\t\tTable option\tchildren\tReact.ReactNode\t—\tchild element\tcss\tCSS\t—\t``\tdelegated \tCSS\t—\n\nCheck out our ladle for more info on\nthis component."}},"/components/tabs":{"title":"Tabs","data":{"":"Provides the behavior and accessibility implementation for a tab list. Tabs organize content into multiple sections and allow users to navigate between them.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Tabs, TabsProps} from '@comfortdelgro/react-compass'\nor\nimport Tabs, {TabsProps} from '@comfortdelgro/react-compass/Tabs'\nWe recommend the second method to import components for the benefits of tree shaking.\n\n\nArma virumque cano, Troiae qui primus ab oris.\n\nSenatus Populusque Romanus.\n\nAlea jacta est.","variant#Variant:":"Tab provide 2 style of tab: simple and rounded as default\n<Tabs variant='simple' disabledKeys={['1']}>\n<Tabs.Item key='1' title='Founding of Rome'>\nArma virumque cano, Troiae qui primus ab oris.\n</Tabs.Item>\n<Tabs.Item key='2' title='Monarchy and Republic'>\nSenatus Populusque Romanus.\n</Tabs.Item>\n<Tabs.Item key='3' title='Empire'>\nAlea jacta est.\n</Tabs.Item>\n</Tabs>\n\n<Tabs variant='rounded' disabledKeys={['1']}>\n<Tabs.Item key='1' title='Founding of Rome'>\nArma virumque cano, Troiae qui primus ab oris.\n</Tabs.Item>\n<Tabs.Item key='2' title='Monarchy and Republic'>\nSenatus Populusque Romanus.\n</Tabs.Item>\n<Tabs.Item key='3' title='Empire'>\nAlea jacta est.\n</Tabs.Item>\n</Tabs>","tab-item-icon#Tab Item Icon:":"You can define the position of the icon by props of Tab.Item\n\n\nArma virumque cano, Troiae qui primus ab oris.\n\nSenatus Populusque Romanus.\n\nAlea jacta est.\n\n\n\n<Tabs icon='left' disabledKeys={['1']}>\n<Tabs.Item key='1' title='Founding of Rome'>\nArma virumque cano, Troiae qui primus ab oris.\n</Tabs.Item>\n<Tabs.Item key='2' title='Monarchy and Republic'>\nSenatus Populusque Romanus.\n</Tabs.Item>\n<Tabs.Item key='3' title='Empire'>\nAlea jacta est.\n</Tabs.Item>\n</Tabs>","orientation#Orientation:":"Direction of the tab: vertical and horizontal as default\n\n\nArma virumque cano, Troiae qui primus ab oris.\n\nSenatus Populusque Romanus.\n\nAlea jacta est.\n\n\n\nArma virumque cano, Troiae qui primus ab oris.\n\nSenatus Populusque Romanus.\n\nAlea jacta est.\n\n\n\n<Tabs orientation='horizontal' disabledKeys={['1']}>\n<Tabs.Item key='1' title='Founding of Rome'>\nArma virumque cano, Troiae qui primus ab oris.\n</Tabs.Item>\n<Tabs.Item key='2' title='Monarchy and Republic'>\nSenatus Populusque Romanus.\n</Tabs.Item>\n<Tabs.Item key='3' title='Empire'>\nAlea jacta est.\n</Tabs.Item>\n</Tabs>\n\n<Tabs orientation='vertical' disabledKeys={['1']}>\n<Tabs.Item key='1' title='Founding of Rome'>\nArma virumque cano, Troiae qui primus ab oris.\n</Tabs.Item>\n<Tabs.Item key='2' title='Monarchy and Republic'>\nSenatus Populusque Romanus.\n</Tabs.Item>\n<Tabs.Item key='3' title='Empire'>\nAlea jacta est.\n</Tabs.Item>\n</Tabs>\n``` ---\n\n### Paneless:\n\nYou can use Tab.Paneless to display tab without default panel\n\n```js\nconst [value, setValue] = React.useState < React.Key > '1'\nconst items = [\n{key: '1', title: 'Founding of Rome'},\n{key: '2', title: 'Monarchy and Republic'},\n{key: '3', title: 'Empire'},\n]\nreturn (\n<div style={{width: '100%', display: 'flex', flexDirection: 'column'}}>\n<Tabs.Paneless\nvariant='simple'\nitems={items}\nselectedKey={value}\nonSelectionChange={(v: React.Key) => setValue(v)}\n/>\n{value === '1' && <h1>Arma virumque cano, Troiae qui primus ab oris.</h1>}\n{value === '2' && <h1>Senatus Populusque Romanus.</h1>}\n{value === '3' && <h1>Alea jacta est.</h1>}\n</div>\n)","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\nArma virumque cano, Troiae qui primus ab oris.\n\nSenatus Populusque Romanus.\n\nAlea jacta est.\n\n\n\n<Tabs disabledKeys={['1']} css={{backgroundColor: 'cyan'}}>\n<Tabs.Item key='1' title='Founding of Rome'>\nArma virumque cano, Troiae qui primus ab oris.\n</Tabs.Item>\n<Tabs.Item key='2' title='Monarchy and Republic'>\nSenatus Populusque Romanus.\n</Tabs.Item>\n<Tabs.Item key='3' title='Empire'>\nAlea jacta est.\n</Tabs.Item>\n</Tabs>","props#Props:":"","tabs--tabspaneless#<Tabs/> | <Tabs.Paneless/>:":"Name\tType\tDefault\tDescription\tchildren*\tReactNode\t—\tThe contents of the collection.\tvariant\trounded,simple\trounded\tStyle of the tab\torientation\thorizontal|vertical\thorizontal\tDirection of the tab\ticon\tnone | left| right| top\tnone\tDisplay icon in tab content\tisDisabled\tboolean\tfalse\tWhether the Tabs are disabled. Shows that a selection exists, but is not available in that circumstance.\tdisabledKeys\tKey[]\t—\tThe item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\tdefaultSelectedKey\tKey\t—\tThe currently selected key in the collection (uncontrolled).\tselectedKey\tKey\t—\tThe currently selected key in the collection (controlled).\tonSelectionChange\t(value) => void\t—\tHandler that is called when the selection changes.\tkeyboardActivation\tautomatic|manual\tautomatic\tWhether tabs are activated automatically on focus or manually.\ttextColor\tString\t—\tColor for the active tab.\tindicatorColor\tString\t—\tColor for the indicator.\tclassName\tString\t—\tExtra class name for tab.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","tabitem-#<Tab.Item/> :":"Name\tType\tDefault\tDescription\ttitle\tstring\t—\tThe title of the tab.\tkey\tKey\t—\tThe key of the tab.\tchildren\tReactNode | String\t—\tThe content of the tab Item\tclassName\tString\t-\tExtra class name for tab\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/tag-box":{"title":"Tag Box","data":{"":"Using to display list of tags\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {TagBox} from '@comfortdelgro/react-compass'\nor\nimport TagBox from '@comfortdelgro/react-compass/tag-box'","example#Example":"","basic-example#Basic Example":"Call to action\n\n\n\n\n<TagBox\nlabel='Text Label'\nitems={[\n{id: 1, value: 'Item 1', icon: <Icon icon={faExclamationTriangle} />},\n{id: 2, value: 'Item 2', isDisabled: true},\n{id: 3, value: 'Item 3', icon: <Icon icon={faExclamationTriangle} />},\n{id: 4, value: 'Item 4', isDisabled: true},\n{\nid: 5,\nvalue: 'Item 5',\nicon: <Icon icon={faExclamationTriangle} />,\nisError: true,\n},\n{id: 6, value: 'Item 6', isDisabled: true},\n{id: 7, value: 'Item 7', icon: <Icon icon={faExclamationTriangle} />},\n{id: 8, value: 'Item 8', isDisabled: true},\n{id: 9, value: 'Item 9', icon: <Icon icon={faExclamationTriangle} />},\n{id: 10, value: 'Item 10', isDisabled: true},\n]}\nonRemove={(e) => console.log(e)}\nonEdit={(i, v) => console.log(i, v)}\nhelperText='Helper text'\n>\n<TagBox.Action>\n<Button>Call to action</Button>\n</TagBox.Action>\n</TagBox>","typeable#Typeable":"Call to action\n\n\n\n\n<TagBox\nlabel='Text Label'\nitems={[\n{id: 1, value: 'Item 1', icon: <Icon icon={faExclamationTriangle} />},\n{id: 2, value: 'Item 2', isDisabled: true},\n{id: 3, value: 'Item 3', icon: <Icon icon={faExclamationTriangle} />},\n{id: 4, value: 'Item 4', isDisabled: true},\n{\nid: 5,\nvalue: 'Item 5',\nicon: <Icon icon={faExclamationTriangle} />,\nisError: true,\n},\n{id: 6, value: 'Item 6', isDisabled: true},\n{id: 7, value: 'Item 7', icon: <Icon icon={faExclamationTriangle} />},\n{id: 8, value: 'Item 8', isDisabled: true},\n{id: 9, value: 'Item 9', icon: <Icon icon={faExclamationTriangle} />},\n{id: 10, value: 'Item 10', isDisabled: true},\n]}\nonRemove={(e) => console.log(e)}\nonAdd={(e) => console.log(e)}\nonEdit={(i, v) => console.log(i, v)}\ntypeable\nhelperText='Helper text'\n>\n<TagBox.Action>\n<Button>Call to action</Button>\n</TagBox.Action>\n</TagBox>","error#Error":"Call to action\n\n\n\n\n<TagBox\nlabel='Text Label'\nitems={[\n{id: 1, value: 'Item 1', icon: <Icon icon={faExclamationTriangle} />},\n{id: 2, value: 'Item 2', isDisabled: true},\n{id: 3, value: 'Item 3', icon: <Icon icon={faExclamationTriangle} />},\n{id: 4, value: 'Item 4', isDisabled: true},\n{\nid: 5,\nvalue: 'Item 5',\nicon: <Icon icon={faExclamationTriangle} />,\nisError: true,\n},\n{id: 6, value: 'Item 6', isDisabled: true},\n{id: 7, value: 'Item 7', icon: <Icon icon={faExclamationTriangle} />},\n{id: 8, value: 'Item 8', isDisabled: true},\n{id: 9, value: 'Item 9', icon: <Icon icon={faExclamationTriangle} />},\n{id: 10, value: 'Item 10', isDisabled: true},\n]}\nonRemove={(e) => console.log(e)}\nonEdit={(i, v) => console.log(i, v)}\nisErrored\nerrorMessage='Use Helper Text for Errors'\nhelperText='Helper text'\n>\n<TagBox.Action>\n<Button>Call to action</Button>\n</TagBox.Action>\n</TagBox>","collaspable#Collaspable":"Call to action\n\n\n\n\n<TagBox\nlabel='Text Label'\nitems={[\n{id: 1, value: 'Item 1', icon: <Icon icon={faExclamationTriangle} />},\n{id: 2, value: 'Item 2', isDisabled: true},\n{id: 3, value: 'Item 3', icon: <Icon icon={faExclamationTriangle} />},\n{id: 4, value: 'Item 4', isDisabled: true},\n{\nid: 5,\nvalue: 'Item 5',\nicon: <Icon icon={faExclamationTriangle} />,\nisError: true,\n},\n{id: 6, value: 'Item 6', isDisabled: true},\n{id: 7, value: 'Item 7', icon: <Icon icon={faExclamationTriangle} />},\n{id: 8, value: 'Item 8', isDisabled: true},\n{id: 9, value: 'Item 9', icon: <Icon icon={faExclamationTriangle} />},\n{id: 10, value: 'Item 10', isDisabled: true},\n]}\nonRemove={(e) => console.log(e)}\nonEdit={(i, v) => console.log(i, v)}\nhelperText='Helper text'\n>\n<TagBox.Action>\n<Button>Call to action</Button>\n</TagBox.Action>\n</TagBox>","props#Props":"","tagbox#TagBox":"Name\tType\tDefault\tDescription\tchildren\tReactNode\t—\tThe content to display in the tag box. It should be TabBox.Action\tisErrored\tboolean\t'false'\tError state when tagbox is isErrored\terrorMessage\tstring\t-\tError message for tagbox\tlabelPosition\ttop left\t-\tThe position of the label.\tcollaspable\tboolean\t-\tCollaspable mode when tag bog is to much.\ttypeable\tboolean\t-\tTypeable mode for input new tag.\tlabel\tstring\t-\tThe content to display as the label.\titems\tItem\t-\tList of tags displayed in the tag box.\thelperText\tstring\t-\tThe little helper text display below the tag box.\tonRemove\tfunction\t—\tCallback fired when the click to remove a tag.\tonAdd\tfunction\t—\tCallback fired when user enter a new tag.\tonEdit\tfunction\t—\tCallback fired when user edit a tag.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","item#Item":"Name\tType\tDefault\tDescription\tid\tReactNode\t—\tUnique Id\tvalue\tstring\t-\tValue to display in the item content\ticon\tReactNode\t-\tDisplay icon in the left side\tisDisabled\tboolean\t-\tDisable state.\tisError\tboolean\t-\tError state.","tagboxaction#TagBox.Action":"Name\tType\tDefault\tDescription\tchildren\tReactNode\t—\tThe content to display in the tag box action.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/textField":{"title":"Text Field","data":{"":"Text Fields let users enter and edit text.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Textfield} from '@comfortdelgro/react-compass'\nor\nimport Textfield from '@comfortdelgro/react-compass/textfield'","basic-text-field#Basic text field:":"<Textfield placeholder='Enter your name' />","text-field-with-label#Text field with label:":"<Textfield label='Name' placeholder='Enter your name' />","text-field-with-helper-text#Text field with helper text:":"<Textfield\nlabel='Name'\nplaceholder='Enter your name'\nhelperText='Helper Text'\n/>","text-field-with-input-error#Text field with input error:":"<Textfield\nisErrored\nvalue='Wrong Value'\nlabel='Name'\nplaceholder='Enter your name'\nhelperText='Use Helper Text for Errors'\n/>","text-field-with-icons#Text field with icons:":"<Textfield label='Name' leftIcon={<BugIcon />} placeholder='Enter your name' />\n<Textfield\nlabel='Name'\nrightIcon={<BugIcon />}\nplaceholder='Enter your name'\n/>","disabled-text-field#Disabled text field:":"<Textfield\nvalue='Wrong Value'\nlabel='Name'\nplaceholder='Enter your name'\nhelperText='Use Helper Text for Errors'\nisDisabled\n/>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\n<Textfield\nvalue='Wrong Value'\nlabel='Name'\nplaceholder='Enter your name'\nhelperText='Use Helper Text for Errors'\nisDisabled\ncss={{width: '20rem'}}\n/>","props#Props:":"Name\tType\tDefault\tDescription\tplaceholder\tstring | null\tnull\tPlaceholder of the text field\tlabel\tstring | null\tnull\tLabel of the text field\thelperText\tstring | null\t—\t\tisErrored\ttrue | false\tfalse\tThrow error when input value is wrong\tvalue\tstring\t—\tInput value\trightIcon\tReactNode\t-\tIcon placed on the right side of the text field\tleftIcon\tReactNode\t-\tIcon placed on the left side of the text field\tisDisabled\tfalse| true\tfalse\tDisable the text field when true\tcss \tCSS\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/textarea":{"title":"Text areas","data":{"":"Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Textarea} from '@comfortdelgro/react-compass'\nor\nimport Textarea from '@comfortdelgro/react-compass/textarea'","basic-text-areas#Basic text areas:":"<Textarea placeholder='Enter your message' />\n<Textarea label='Text Label' placeholder='Enter your message' isDisabled/>\n<Textarea\nlabel='Text Label'\nplaceholder='Enter your message'\nwordCount\nvalue='Lorem ipsum dolor sit amet.'\n/>\n<Textarea\nlabel='Text Label'\nplaceholder='Enter your message'\nwordCount\nmaxLength={50}\nvalue={'Lorem ipsum dolor sit amet.'}\nonChange={() => {}}\n/>\n<Textarea\nlabel='Text Label'\nplaceholder='Enter your message'\nwordCount\nmaxLength={50}\nisErrored\n/>","custom-styling#Custom styling:":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\n\n\n<Textarea\nlabel='Text Label'\nplaceholder='Enter your message'\nwordCount\nmaxLength={50}\nisErrored\ncss={{height: '10em', width: '50em'}}\n/>","props#Props:":"Name\tType\tDefault\tDescription\tplaceholder\tstring | null\tnull\tPlaceholder of the text field\tlabel\tReactNode\tnull\tLabel of the text field\tisErrored\ttrue | false\tfalse\tThrow error when input value is wrong\tvalue\tstring\t—\tInput value\tisDisabled\tfalse| true\tfalse\tDisable the text field when true\tcss \tCSS\t—\t\twordCount\tfalse| true\tfalse\tShow word count of the input when true\tmaxLength\tnumber\t—\tLimit length of the input\tonChange\tfunction\t—\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/toast":{"title":"Toast","data":{"":"Check out our ladle for more info on this\ncomponent.","import#Import":"import {Sidebar} from '@comfortdelgro/react-compass'\nor\nimport Sidebar from '@comfortdelgro/react-compass/sidebar'","default#Default":"<Button\ncss={{width: '8rem', color: 'black'}}\nonPress={() => setIsOpen(true)}\n>\nOpen toast\n</Button>\n<Toast\nisOpen={isOpen}\nhandleClose={() => setIsOpen(false)}\n>\n<Toast.Icon>\n<Icon icon={faImage} />\n</Toast.Icon>\n<Toast.Title>My Title</Toast.Title>\n<Toast.Label>a few minutes ago</Toast.Label>\n<Toast.CloseIcon>\n<Icon icon={faXmark} />\n</Toast.CloseIcon>\n<Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n<Toast.Actions>\n<Button css={{color: 'black'}}>Take action</Button>\n<Button css={{color: 'black'}}>Take action</Button>\n</Toast.Actions>\n</Toast>","color-neutral#Color: Neutral":"<Button\ncss={{width: '8rem', color: 'black'}}\nonPress={() => setIsOpen(true)}\ncolor='neutral'\n>\nOpen toast\n</Button>\n<Toast\nisOpen={isOpen}\nhandleClose={() => setIsOpen(false)}\n>\n<Toast.Icon>\n<Icon icon={faImage} />\n</Toast.Icon>\n<Toast.Title>My Title</Toast.Title>\n<Toast.Label>a few minutes ago</Toast.Label>\n<Toast.CloseIcon>\n<Icon icon={faXmark} />\n</Toast.CloseIcon>\n<Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n<Toast.Actions>\n<Button css={{color: 'black'}}>Take action</Button>\n<Button css={{color: 'black'}}>Take action</Button>\n</Toast.Actions>\n</Toast>","color-informative#Color: Informative":"<Button\ncss={{width: '8rem', color: 'black'}}\nonPress={() => setIsOpen(true)}\n>\nOpen toast\n</Button>\n\n<Toast\nisOpen={isOpen}\nhandleClose={() => setIsOpen(false)}\ncolor='informative'\n>\n<Toast.Icon>\n<Icon icon={faImage} />\n</Toast.Icon>\n<Toast.Title>My Title</Toast.Title>\n<Toast.Label>a few minutes ago</Toast.Label>\n<Toast.CloseIcon>\n<Icon icon={faXmark} />\n</Toast.CloseIcon>\n<Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n<Toast.Actions>\n<Button css={{color: 'black'}}>Take action</Button>\n<Button css={{color: 'black'}}>Take action</Button>\n</Toast.Actions>\n</Toast>","color-positive#Color: Positive":"<Button\ncss={{width: '8rem', color: 'black'}}\nonPress={() => setIsOpen(true)}\n>\nOpen toast\n</Button>\n\n<Toast\nisOpen={isOpen}\nhandleClose={() => setIsOpen(false)}\ncolor='positive'\n>\n<Toast.Icon>\n<Icon icon={faImage} />\n</Toast.Icon>\n<Toast.Title>My Title</Toast.Title>\n<Toast.Label>a few minutes ago</Toast.Label>\n<Toast.CloseIcon>\n<Icon icon={faXmark} />\n</Toast.CloseIcon>\n<Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n<Toast.Actions>\n<Button css={{color: 'black'}}>Take action</Button>\n<Button css={{color: 'black'}}>Take action</Button>\n</Toast.Actions>\n</Toast>","color-negative#Color: Negative":"<Button\ncss={{width: '8rem', color: 'black'}}\nonPress={() => setIsOpen(true)}\n>\nOpen toast\n</Button>\n\n<Toast\nisOpen={isOpen}\nhandleClose={() => setIsOpen(false)}\ncolor='negative'\n>\n<Toast.Icon>\n<Icon icon={faImage} />\n</Toast.Icon>\n<Toast.Title>My Title</Toast.Title>\n<Toast.Label>a few minutes ago</Toast.Label>\n<Toast.CloseIcon>\n<Icon icon={faXmark} />\n</Toast.CloseIcon>\n<Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n<Toast.Actions>\n<Button css={{color: 'black'}}>Take action</Button>\n<Button css={{color: 'black'}}>Take action</Button>\n</Toast.Actions>\n</Toast>","auto-close#Auto close":"<Button\ncss={{width: '8rem', color: 'black'}}\nonPress={() => setIsOpen(true)}\n>\nOpen toast\n</Button>\n\n<Toast\nisOpen={isOpen}\nhandleClose={() => setIsOpen(false)}\ncolor='negative'\nautoClose = {800}\n>\n<Toast.Icon>\n<Icon icon={faImage} />\n</Toast.Icon>\n<Toast.Title>My Title</Toast.Title>\n<Toast.Label>a few minutes ago</Toast.Label>\n<Toast.CloseIcon>\n<Icon icon={faXmark} />\n</Toast.CloseIcon>\n<Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n<Toast.Actions>\n<Button css={{color: 'black'}}>Take action</Button>\n<Button css={{color: 'black'}}>Take action</Button>\n</Toast.Actions>\n</Toast>","props#Props":"Name\tType\tDefault\tDescription\tcolor\tinformative | neutral | negative | positive\t'neutral'\tVariants\thandleClose\tFunction\t-\tCallback to close toast.\tisOpen\tboolean\tfalse\tThe toast is visible when true.\tautoClose\tfalse | number\tfalse\tNumber of miliseconds to auto close.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/toggle":{"title":"Toggle","data":{"":"Provides the behavior and accessibility implementation for a toggle component. A toggle is similar to a checkbox, but represents on/off values as opposed to selection.\nCheck out our ladle for more info on this\ncomponent.","import#Import:":"import {Toggle} from '@comfortdelgro/react-compass'\nor\nimport Toggle from '@comfortdelgro/react-compass/toggle'","basic-usage#Basic Usage:":"<Toggle />\n<Toggle isDisabled />\n<Toggle isDisabled isSelected />","size#Size:":"Small as default\n<Toggle size='sm' />\n\n\n\n\nLarge ```js\n\n\n<section className={styles.avatarShowcaseContainer}>\n<Toggle size='lg' />\n</section>\n---\n\n### Custom styling:\n\nYou can style React Compass's components with the css prop. <br/>\nWith css prop, you can basically do anything that css can do.\n\n<section className={styles.avatarShowcaseContainer}>\n<Toggle css={{'&:hover': {background: 'red'}}} />\n</section>\n```js\n<Toggle css={{'&:hover': {background: 'red'}}} />\n``` ---\n\n### Props:\n\n| Name            | Type                            | Default | Description                                                                             |\n| :-------------- | :------------------------------ | :------ | :-------------------------------------------------------------------------------------- |\n| defaultSelected | `boolean`                       | `false` | Whether the Toggle should be selected (uncontrolled).                                   |\n| isSelected      | `boolean`                       | `false` | Whether the Toggle should be selected (controlled).                                     |\n| onChange        | `(isSelected: boolean) => void` | -       | Handler that is called when the Toggle's selection state changes.                       |\n| value           | `string`                        | -       | The value of the input element, used when submitting an HTML form. See MDN.             |\n| name            | `string`                        | -       | The name of the input element, used when submitting an HTML form. See MDN.              |\n| isDisabled      | `boolean`                       | `false` | Whether the input is disabled.                                                          |\n| isReadOnly      | `boolean`                       | `false` | Whether the input can be selected but not changed by the user.                          |\n| autoFocus       | `boolean`                       | `false` | Whether the element should receive focus on render.                                     |\n| onFocus         | `(e: FocusEvent) => void`       | -       | Handler that is called when the element receives focus.                                 |\n| onBlur          | `(e: FocusEvent) => void`       | -       | Handler that is called when the element loses focus.                                    |\n| onFocusChange   | `(isFocused: boolean) => void`  | -       | Handler that is called when the element's focus status changes.                         |\n| onKeyDown       | `(e: KeyboardEvent) => void`    | -       | Handler that is called when a key is pressed.                                           |\n| onKeyUp         | `(e: KeyboardEvent) => void`    | -       | Handler that is called when a key is released.                                          |\n| onFocus         | `(e: FocusEvent) => void`       | -       | Handler that is called when the element receives focus.                                 |\n| css             | `CSS`                           | —       | The system prop that allows defining system overrides as well as additional CSS styles. |\n\n---\n\n<Callout>\nCheck out our [ladle](/ladle?story=toggle--variants) for more info on this\ncomponent.\n</Callout>"}},"/components/tooltips":{"title":"Tooltips","data":{"":"Display container for Tooltip content. Has a directional arrow dependent on its placement.\nCheck out our ladle for more info on this\ncomponent.","import#Import":"import {Tooltip, TooltipTrigger} from '@comfortdelgro/react-compass'\nor\nimport {Tooltip, TooltipTrigger} from '@comfortdelgro/react-compass/tooltip'\nWe recommend the second method to import components for the benefits of tree shaking.","content#Content":"The TooltipTrigger accepts exactly two children: the element which triggers the display of the Tooltip and the Tooltip itself. The trigger element must be the first child passed into the TooltipTrigger. All content should be internationalized.","basic-tooltip#Basic tooltip":"Hover me\n\nTooltip\n\n\n\n<TooltipTrigger>\n<a href='#'>Hover me</a>\n<Tooltip>Tooltip</Tooltip>\n</TooltipTrigger>","title#Title":"Render title of the tooltip\n\n\nHover me\n\n\nTooltip\n\n\n\n\n<TooltipTrigger>\n<a href='#'>Hover me</a>\n<Tooltip title='Title' dismissible>\nTooltip\n</Tooltip>\n</TooltipTrigger>","tooltip-delay#Tooltip Delay":"Adjust delay of tooltip after hovering the trigger\n\n\nHover me\n\nTooltip\n\n\n\n<TooltipTrigger delay={1000}>\n<a href='#'>Hover me</a>\n<Tooltip>Tooltip</Tooltip>\n</TooltipTrigger>","dismissible#Dismissible":"Enable a close button in the tooltip\n\n\nHover me\n\n\nTooltip\n\n\n\n\n<TooltipTrigger>\n<a href='#'>Hover me</a>\n<Tooltip dismissible>Tooltip</Tooltip>\n</TooltipTrigger>","customization#Customization":"","child-element#Child element":"The tooltip needs to apply DOM event listeners to its child element. If the child is a custom React element, you need to make sure that it spreads its props to the underlying DOM element.\nconst MyComponent = React.forwardRef(function MyComponent(props, ref) {\n//  Spread the props to the underlying DOM element.\nreturn (\n<div {...props} ref={ref}>\nCustom Component\n</div>\n)\n})\n\n// ...\n<TooltipTrigger>\n<MyComponent/>\n<Tooltip dismissible>Tooltip</Tooltip>\n</TooltipTrigger>","styling#Styling":"You can style React Compass's components with the css prop.\nWith css prop, you can basically do anything that css can do.\n\n\nHover me\n\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae\nblanditiis laborum commodi mollitia officiis minus ipsum totam fuga\nodit, dicta magnam numquam reprehenderit et sequi dignissimos iusto\ndeleniti. Quia, modi\n\n\n\n\n<TooltipTrigger>\n<a href='#'>Hover me</a>\n<Tooltip\ntitle={<p style={{fontSize: '20px', margin: 0}}>Title</p>}\ndismissible\ncss={{backgroundColor: 'black'}}\n>\nLorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae\nblanditiis laborum commodi mollitia officiis minus ipsum totam fuga odit,\ndicta magnam numquam reprehenderit et sequi dignissimos iusto deleniti.\nQuia, modi\n</Tooltip>\n</TooltipTrigger>","max-width#Max-width":"The Tooltip wraps long text by default to make it readable. You can customize it to fit your desire\n\n\nHover me\n\n\nLorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae\nblanditiis laborum commodi mollitia officiis minus ipsum totam fuga\nodit, dicta magnam numquam reprehenderit et sequi dignissimos iusto\ndeleniti. Quia, modi\n\n\n\n\n<TooltipTrigger>\n<a href='#'>Hover me</a>\n<Tooltip title={'Title'} css={{maxWidth: 'none'}}>\nLorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae\nblanditiis laborum commodi mollitia officiis minus ipsum totam fuga odit,\ndicta magnam numquam reprehenderit et sequi dignissimos iusto deleniti.\nQuia, modi\n</Tooltip>\n</TooltipTrigger>","placement#Placement":"The Tooltip's placement with respect to its trigger element can be adjusted using the placement prop. See the props table below for a full list of available placement combinations\n\n\nHover me\n\n\nOpen on the right\n\n\n\n\n<TooltipTrigger placement='right'>\n<a href='#'>Hover me</a>\n<Tooltip>Open on the right</Tooltip>\n</TooltipTrigger>","offset#Offset":"Hover me\n\n\nThis will shift down.\n\n\n\n\n<TooltipTrigger offset={50}>\n<a href='#'>Hover me</a>\n<Tooltip>This will shift down.</Tooltip>\n</TooltipTrigger>\n\n\n\nHover me\n\n\nThis will shift over to the right.\n\n\n\n\n<TooltipTrigger offset={{crossAxis: 50}}>\n<a href='#'>Hover me</a>\n<Tooltip>This will shift over to the right.</Tooltip>\n</TooltipTrigger>","props#Props":"","tooltiptrigger-props#TooltipTrigger Props:":"Name\tType\tDefault\tDescription\tchildren*\t[ReactElement, ReactElement]\t—\tThe first child must be a trigger, the second child must be Tooltip component\toffset\tnumber | {mainAxis: number, crossAxis: number}\t\tThe additional offset applied along the main axis and(or) cross axis between the element and its anchor element.\tdelay\tnumber\t0\tThe delay time for the tooltip to show up\ttrigger\t'focus' | null\tnull\tBy default, opens for both focus and hover. Can be made to open only for focus.\tisOpen\tboolean\t—\tWhether the overlay is open by default (controlled)\tdefaultOpen\tboolean\t—\tWhether the overlay is open by default (uncontrolled).\tplacement\tPlacement\tbottom\tThe placement of the element with respect to its anchor element.\tshouldFlip\tboolean\ttrue\tWhether the element should flip its orientation (e.g. top to bottom or left to right) when there is insufficient room for it to render completely.\twithArrow\tboolean\ttrue\tWhether the element should have an arrow pointed to anchor element\tdisableInteractive\tboolean\tfalse\tTooltips are interactive by default (to pass WCAG 2.1 success criterion 1.4.13). It won't close when the user hovers over the tooltip. You can disable this behavior (thus failing the success criterion which is required to reach level AA)\tonOpenChange\t(isOpen: boolean) => void\t—\tHandler that is called when the overlay's open state changes.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","placement-prop#Placement Prop":"Name\tType\tDefault\tDescription\tplacement\tbottom|  bottom-end |  bottom-start |  left | left-end | left-start | right | right-end | right-start | top | top-end | top-start\tbottom\tThe placement of the element with respect to its anchor element.","tooltip-props#Tooltip Props":"Name\tType\tDefault\tDescription\tchildren*\tReactNode\t—\t\ttitle\tReactNode | string\t—\tRender tooltip title\tdismissible\tboolean\tfalse\tIf true, show the close icon.\tcss\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on this\ncomponent."}},"/components/video-player":{"title":"VideoPlayer","data":{"":"Using to display a video\nCheck out our ladle for more info on\nthis component.","import#Import":"import {VideoPlayer, VideoPlayerProps} from '@comfortdelgro/react-compass'\nor\nimport VideoPlayer, {\nVideoPlayerProps,\n} from '@comfortdelgro/react-compass/video-player'\nWe recommend the second method to import components for the benefits of tree shaking.","basic-usage#Basic usage":"<VideoPlayer src='http://techslides.com/demos/sample-videos/small.webm' />","props#Props":"","tooltiptrigger-props#TooltipTrigger Props:":"Name\tType\tDefault\tDescription\tsrc\tstring\t-\tSpecifies the URL of the video file\tid\tstring\t-\tUnique id of the video\tloop\tboolean\tfalse\tSpecifies that the video will start over again, every time it is finished\tautoPlay\tboolean\tfalse\tSpecifies that the video will start playing as soon as it is ready\tmuted\tboolean\tfalse\tSpecifies that the audio output of the video should be muted\tcontrols\tboolean\ttrue\tSpecifies that video controls should be displayed (such as a play/pause button etc).\tposter\tstring\t-\tSpecifies an image to be shown while the video is downloading, or until the user hits the play button\tpreload\tauto | metadata | none\t-\tSpecifies if and how the author thinks the video should be loaded when the page loads\twidth\tnumber\t-\tSets the width of the video player\theight\tnumber\t-\tSets the height of the video player\tonNext\t() => void\t-\tFired when the next button is clicked\tonPrev\t() => void\t-\tFired when the prev button is clicked\tonSetting\t() => void\t-\tFired when the settings button is clicked\tcss?\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.\n\nCheck out our ladle for more info on\nthis component."}},"/components/wizard":{"title":"Wizard","data":{"":"Using for display stepper","import#Import":"import {Wizard, WizardProps} from '@comfortdelgro/react-compass'\nor\nimport Wizard, {WizardProps} from '@comfortdelgro/react-compass/wizard'\nWe recommend the second method to import components for the benefits of tree shaking.","content#Content":"The TooltipTrigger accepts exactly two children: the element which triggers the display of the Tooltip and the Tooltip itself. The trigger element must be the first child passed into the TooltipTrigger. All content should be internationalized.","basic-usage#Basic usage":"<Wizard items={['Step 1', 'Step 2', 'Step 3']} currentStep={1} />","with-customize-items#With customize items":"<Wizard currentStep={5}>\n<Wizard.Item title='Value1'>\n<div\nstyle={{\nwidth: 20,\nheight: 20,\nbackground: '#0142AF',\nborderRadius: '99999px',\ndisplay: 'flex',\njustifyContent: 'center',\nalignItems: 'center',\nfontSize: '0.75rem',\ncolor: '#FFFFFF',\n}}\n>\n1\n</div>\n</Wizard.Item>\n<Wizard.Item title='Value2'>\n<div\nstyle={{\nwidth: 20,\nheight: 20,\nbackground: '#99b3df',\nborderRadius: '99999px',\ndisplay: 'flex',\njustifyContent: 'center',\nalignItems: 'center',\nfontSize: '0.75rem',\ncolor: '#0142AF',\n}}\n>\n<svg width='10' height='8' viewBox='0 0 10 8'>\n<path\nd='M9.39146 0.862272C9.64724 1.12272 9.64724 1.5436 9.39146 1.80404L4.15307 7.13796C3.89729 7.3984 3.48395 7.3984 3.22817 7.13796L0.6084 4.471C0.352701 4.21056 0.352701 3.78968 0.6084 3.52923C0.86414 3.26879 1.27871 3.26879 1.53449 3.52923L3.6722 5.72322L8.46655 0.862272C8.72233 0.601411 9.13568 0.601411 9.39146 0.862272Z'\nfill='currentColor'\n/>\n</svg>\n</div>\n</Wizard.Item>\n<Wizard.Item title='Value3'>\n<div\nstyle={{\nwidth: 20,\nheight: 20,\nbackground: '#0142AF',\nborderRadius: '99999px',\ndisplay: 'flex',\njustifyContent: 'center',\nalignItems: 'center',\nfontSize: '0.75rem',\n}}\n/>\n</Wizard.Item>\n<Wizard.Item title='Value4'>\n<div\nstyle={{\nwidth: 20,\nheight: 20,\nbackground: '#99b3df',\nborderRadius: '99999px',\ndisplay: 'flex',\njustifyContent: 'center',\nalignItems: 'center',\nfontSize: '0.75rem',\ncolor: '#0142AF',\n}}\n>\n<svg width='10' height='8' viewBox='0 0 10 8'>\n<path\nd='M9.39146 0.862272C9.64724 1.12272 9.64724 1.5436 9.39146 1.80404L4.15307 7.13796C3.89729 7.3984 3.48395 7.3984 3.22817 7.13796L0.6084 4.471C0.352701 4.21056 0.352701 3.78968 0.6084 3.52923C0.86414 3.26879 1.27871 3.26879 1.53449 3.52923L3.6722 5.72322L8.46655 0.862272C8.72233 0.601411 9.13568 0.601411 9.39146 0.862272Z'\nfill='currentColor'\n/>\n</svg>\n</div>\n</Wizard.Item>\n<Wizard.Item title='Value5'>\n<div\nstyle={{\nwidth: 20,\nheight: 20,\nbackground: '#0142AF',\nborderRadius: '99999px',\ndisplay: 'flex',\njustifyContent: 'center',\nalignItems: 'center',\nfontSize: '0.75rem',\ncolor: '#fff',\n}}\n>\n<svg width='10' height='8' viewBox='0 0 10 8'>\n<path\nd='M9.39146 0.862272C9.64724 1.12272 9.64724 1.5436 9.39146 1.80404L4.15307 7.13796C3.89729 7.3984 3.48395 7.3984 3.22817 7.13796L0.6084 4.471C0.352701 4.21056 0.352701 3.78968 0.6084 3.52923C0.86414 3.26879 1.27871 3.26879 1.53449 3.52923L3.6722 5.72322L8.46655 0.862272C8.72233 0.601411 9.13568 0.601411 9.39146 0.862272Z'\nfill='currentColor'\n/>\n</svg>\n</div>\n</Wizard.Item>\n<Wizard.Item title='Value6'>\n<div\nstyle={{\nwidth: 20,\nheight: 20,\nbackground: '#e6ecf7',\nborderRadius: '99999px',\ndisplay: 'flex',\njustifyContent: 'center',\nalignItems: 'center',\nfontSize: '0.75rem',\ncolor: '#1d3a6b',\nfontWeight: 500,\n}}\n>\n6\n</div>\n</Wizard.Item>\n</Wizard>\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6","props#Props":"","wizard-props#Wizard Props:":"Name\tType\tDefault\tDescription\titems?\tstring[]\t-\tList of display contennt below the stepper\tcurrentStep\tnumber\t1\tCurrent active step, start from 1\tonStepClick\t(n: number) => void\t-\tHandler when click on step, return index of step\tcss?\tCSS\t—\tThe system prop that allows defining system overrides as well as additional CSS styles.","wizarditem-props#Wizard.Item Props:":"Name\tType\tDefault\tDescription\ttitle\tstring\t-\tText displayed below the stepper\tchildren\tReactNode\t1\tSomething to display the stepper\n\nCheck out our ladle for more info on this\ncomponent."}},"/design/colors":{"title":"Colors","data":{"":"Color distinguishes a brand. It is used to convey personality, attracts the eye and indicate change.\nimport {theme} from '@comfortdelgro/react-compass/theme'","palette#Palette":"","primary-colors#Primary Colors":"ComfortDelgro color palette has been created to reflect the spirit of our brand. Blue is used across all our communication as an essential element of branding. Primary color is the color displayed most frequently across your app's screens and components.Black is used primarily for body text and headings, and White is used for screen backgrounds and negative space.\nMain Colors\n\n\n\n\n\n\n\n\n\n\n<div style={{ backgroundColor: theme.colors.cdgBlue }} />\n<div style={{ backgroundColor: theme.colors.typeHeading }} />\n<div style={{ backgroundColor: theme.colors.background }} />\n\nText Colors\n\n\n\n\n\n\n\n\n\n\n\n\n<div style={{ backgroundColor: theme.colors.primaryText }} />\n<div style={{ backgroundColor: theme.colors.secondaryText }} />\n<div style={{ backgroundColor: theme.colors.disabledText }} />\n<div style={{ backgroundColor: theme.colors.whiteText }} />\n\nDividers & Borders\n\n\n\n\n\n\n\n\n\n\n<div style={{ backgroundColor: theme.colors.divider }} />\n<div style={{ backgroundColor: theme.colors.border }} />\n<div style={{ backgroundColor: theme.colors.activeBorder }} />","secondary-colors#Secondary Colors":"Secondary color provides more ways to accent and distinguish our product. Each color is selected with purpose in order to provide meaningful feedback within our products. Secondary colors can also be used to create unique secondary brands for each one of ComfortDelgro products.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div style={{ backgroundColor: theme.colors.infoBg }} />\n<div style={{ backgroundColor: theme.colors.dangerBg }} />\n<div style={{ backgroundColor: theme.colors.successBg }} />\n<div style={{ backgroundColor: theme.colors.severeWarningBg }} />\n<div style={{ backgroundColor: theme.colors.warningBg }} />\n\n<div style={{ backgroundColor: theme.colors.info }} />\n<div style={{ backgroundColor: theme.colors.danger }} />\n<div style={{ backgroundColor: theme.colors.success }} />\n<div style={{ backgroundColor: theme.colors.severeWarning }} />\n<div style={{ backgroundColor: theme.colors.warning }} />","shades--tints#Shades & Tints":"We intend for tints and shades to be ever evolving, offering an endless palette to choose from. Usage of these colors varies depending on scenarios, but they come in handy for components in our products.\nTheme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div style={{ backgroundColor: theme.colors.cdgBlue10 }} />\n<div style={{ backgroundColor: theme.colors.cdgBlue20 }} />\n<div style={{ backgroundColor: theme.colors.cdgBlue40 }} />\n<div style={{ backgroundColor: theme.colors.cdgBlue60 }} />\n<div style={{ backgroundColor: theme.colors.cdgBlue80 }} />\n<div style={{ backgroundColor: theme.colors.cdgBlue100 }} />\n<div style={{ backgroundColor: theme.colors.cdgBlue120 }} />\n<div style={{ backgroundColor: theme.colors.cdgBlue140 }} />\n\nOverlays\n\n\n\n\n\n\n\n\n<div style={{ backgroundColor: theme.colors.overlayLight }} />\n<div style={{ backgroundColor: theme.colors.overlayDark }} />\n\nGrays\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div style={{ backgroundColor: theme.colors.gray10 }} />\n<div style={{ backgroundColor: theme.colors.gray20 }} />\n<div style={{ backgroundColor: theme.colors.gray30 }} />\n<div style={{ backgroundColor: theme.colors.gray40 }} />\n<div style={{ backgroundColor: theme.colors.gray50 }} />\n<div style={{ backgroundColor: theme.colors.gray60 }} />\n<div style={{ backgroundColor: theme.colors.gray70 }} />\n<div style={{ backgroundColor: theme.colors.gray80 }} />\n<div style={{ backgroundColor: theme.colors.gray90 }} />\n<div style={{ backgroundColor: theme.colors.gray100 }} />\n<div style={{ backgroundColor: theme.colors.gray110 }} />\n\nBackgrounds\n\n\n\n\n\n\n\n\n\n\n<div style={{ backgroundColor: theme.colors.primaryBg }} />\n<div style={{ backgroundColor: theme.colors.secondaryBg }} />\n<div style={{ backgroundColor: theme.colors.darkerBg }} />\n\nGradients\n\n\n\n\n\n\n\n\n\n\n<div style={{\nbackgroundImage: `linear-gradient(to right, ${theme.colors.gradientOrange})`\n}}\n/>\n<div style={{\nbackgroundImage: `linear-gradient(to right, ${theme.colors.gradientRainbow})`\n}}\n/>\n<div style={{\nbackgroundImage: `linear-gradient(to right, ${theme.colors.gradientOrangeBlue})`\n}}\n/>","rules#Rules":"","accessibility#Accessibility":"All our product user interface should meet minimum WCAG AA level contrast guidelines. Low contrast can be problematic for people with lower vision, color blindness or even in non-optimal conditions (outdoor, bright sunlight).","contrast-ratio#Contrast Ratio":"All colors in this section are marked with their contrast ratio against White. If you use these colors on any other background or use these as background with text other than White, you will need to calculate these ratios again.The minimum required contrast ration depends on the text size and weight. To mantain WCAG AA level of contrast ratio, colors are required to be at least 4.5:1 for normal text and 3:1 for large text, and 3:1 for graphics and user interface components (such as form input borders), with exception to text or images of text that are part of an inactive user interface component (disabled states).","rag-red-amber-and-green#RAG (Red, Amber, and Green)":"This palette should only be used to convey status or meaning for messages and feedback. For contexts such as selecting risk, the full RAG palette can be used to reinforce positivity or negativity of the user’s choice."}},"/design/theming":{"title":"Theming","data":{"":"Customize Compass Design with your theme. You can change the colors, the typography and much more.","theme-provider#Theme provider":"If you wish to customize the theme, you need to use the ThemeProvider component in order to inject a theme into your application. However, this is optional Compass Design components come with a default theme.ThemeProvider relies on the context feature of React to pass the theme down to the components, so you need to make sure that ThemeProvider is a parent of the components you are trying to customize. You can learn more about this in the API section.","theme-configuration-variables#Theme configuration variables":"Changing the theme configuration variables is the most effective way to match Compass Design to your needs. The following sections cover the most important theme variables:\ncolors\nspacings\nfonts\nfontSizes\nlineHeights\nfontWeights\nborderWidths\nradius\ntransitions\n\n\nYou can see theme configuration variables\nhere","custom-variables#Custom variables":"When using Compass Design's theme, it can be convenient to add additional variables to the theme so you can use them everywhere. For instance:\nimport createTheme from '@comfortdelgro/react-compass/theme/theme'\n\nexport const lightThemeCustom = createTheme('light-theme-custom', {\ncolors: {\nprimaryText: 'red !important',\n},\n})\n\nexport const darkThemeCustom = createTheme('dark-theme-custom', {\ncolors: {\nprimaryText: 'blue !important',\n},\n})","themeprovider#ThemeProvider":"This component takes a theme prop and applies it to the entire React tree that it is wrapping around. It should preferably be used at the root of your component tree.\nimport ThemeProvider from '@comfortdelgro/react-compass'\nProps:\nName\tType\tDefault\tDescription\tlightThemeCustom\tcreateTheme\t—\tCustomize theme for light theme\tdarkThemeCustom\tcreateTheme \t—\tCustomize theme for dark theme\tchangeBy\tany\t—\tState to determine the theme change\tisCSR\tboolean\tfalse\tDetermine if CSR or SSR","example#Example":"You can see example with\nNext.js\n\nfunction MyApp({Component, pageProps}: AppProps) {\nreturn (\n<ThemeProvider\nlightThemeCustom={lightThemeCustom}\ndarkThemeCustom={darkThemeCustom}\n>\n{children}\n</ThemeProvider>\n)\n}","dark-mode#Dark mode":"Compass Design comes with two palette modes: light (the default) and dark.","example-1#Example":"You can see example with\nNext.js\n\nfunction MyApp({Component, pageProps}: AppProps) {\nconst [isDarkTheme, setIsDarkTheme] = useState<ETheme>(ETheme.Light)\nconst handleOnChangeTheme = (value: string) => {\nsetIsDarkTheme(value as ETheme)\n}\n\nreturn (\n<>\n<ThemeProvider\nchangeBy={isDarkTheme}\n>\n<Box\ncss={{\nbackgroundColor: '$background',\n}}\n>\n<Box>\n<Radio.Group\nonChange={handleOnChangeTheme}\nvalue={isDarkTheme}\n>\n<Radio label='Light theme' value={ETheme.Light} />\n<Radio label='Dark theme' value={ETheme.Dark} />\n</Radio.Group>\n</Box>\n<Component {...pageProps} />\n</Box>\n</ThemeProvider>\n</>\n)\n}"}},"/design/typography":{"title":"Typography","data":{"":"Good typography can help create clear hierarchies, organize information, and guide users through a product or experience.","import#Import:":"import {Typography} from '@comfortdelgro/react-compass'\nor\nimport Typography from '@comfortdelgro/react-compass/typography'","fonts#Fonts":"Poppin is the primary digital product typeface of Pax app for both iOS and AOS.\nNative OS System feedback will use Roboto for AOS, and SF Sans Pro for IOS.","weights#Weights":"The choice of font weight is also based on the principles of order, stability, and restraint. In most cases, just regular and bold should be enough.","sizes#Sizes":"","display#Display":"The quick brown\n\nThe quick brown\n\nThe quick brown\n\n\n<Typography.Display variant='display1'>The quick brown</Typography.Display>\n<Typography.Display variant='display2'>The quick brown</Typography.Display>\n<Typography.Display variant='display3'>The quick brown</Typography.Display>","header#Header":"The quick brown\n\nThe quick brown\n\nThe quick brown\n\nThe quick brown\n\nThe quick brown\n\nThe quick brown\n\n\n<Typography.Header variant='header0'>The quick brown</Typography.Header>\n<Typography.Header variant='header1'>The quick brown</Typography.Header>\n<Typography.Header variant='header2'>The quick brown</Typography.Header>\n<Typography.Header variant='header3'>The quick brown</Typography.Header>\n<Typography.Header variant='header4'>The quick brown</Typography.Header>\n<Typography.Header variant='header5'>The quick brown</Typography.Header>","body#Body":"You can use semibold and bold font weights on these font sizes for semiboldes.\n\nThe quick brown\n\nThe quick brown\n\nThe quick brown\n\n\n<Typography.Body variant='body1'>The quick brown</Typography.Body>\n<Typography.Body variant='body2'>The quick brown</Typography.Body>\n<Typography.Body variant='body3'>The quick brown</Typography.Body>","labels#Labels":"You can use light, semibold and bold font weights on these font sizes for semiboldes.\n\nThe quick brown\n\nThe quick brown\n\nThe quick brown\n\n\n<Typography.Label variant='label1'>The quick brown</Typography.Label>\n<Typography.Label variant='label2'>The quick brown</Typography.Label>\n<Typography.Label variant='label3'>The quick brown</Typography.Label>","links#Links":"You can use semibold font weight on these font sizes for semiboldes.\n\nThe quick brown\n\nThe quick brown\n\nThe quick brown\n\n\n<Typography.Link variant='link1'>The quick brown</Typography.Link>\n<Typography.Link variant='link2'>The quick brown</Typography.Link>\n<Typography.Link variant='link3'>The quick brown</Typography.Link>","props-body#Props Body:":"Name\tType\tDefault\tDescription\tvariant\tbody1|body2|body3\tbody1\tFont size of text\tcomponent\tComponent\t-\tDisplayed as specific tag\tweight\tnone|bold|semibold\tnone\tFont weight of text\tcss\tCSS\t—","props-display#Props Display:":"Name\tType\tDefault\tDescription\tvariant\tdisplay1|display2|display3\tdisplay1\tFont size of text\tcomponent\tComponent\t-\tDisplayed as specific tag\tcss\tCSS\t—","props-header#Props Header:":"Name\tType\tDefault\tDescription\tvariant\theader0|header1|header2|header3|header4|header5\theader1\tFont size of text\tcomponent\tComponent\t-\tDisplayed as specific tag\tcss\tCSS\t—","props-label#Props Label:":"Name\tType\tDefault\tDescription\tvariant\tlabel1|label2|label3\tlabel1\tFont size of text\tcomponent\tComponent\t-\tDisplayed as specific tag\tweight\tnone|bold|semibold|light\tnone\tFont weight of text\tcss\tCSS\t—","props-link#Props Link:":"Name\tType\tDefault\tDescription\tvariant\tlink1|link2|link3\tlink1\tFont size of text\tcomponent\tComponent\t-\tDisplayed as specific tag\tweight\tnone|semibold\tnone\tFont weight of text\tcss\tCSS\t—","component#Component":"Component type equals: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"label\" | \"p\" | \"span\"\nCheck out our ladle for more info on this\ncomponent."}},"/design/zindex":{"title":"Zindex","data":{"":"The problem is when developers see the other have zIndex with value 999, they\nwill increase number to let their zIndex higher. Someone uses 9999, someone\nuses 10001... That time we will see so many inconsistent problems about zIndex\non the screen. For example: Dropdown content is under the dialog, or any\ncontent is floatting above loading indicator.So that, following a rule will let our zIndex consistent.\n\n\nView on\nFigma\nNotes:\nThe other or local component (absolute / relative inside one of above) will\nhave z-index in range from 1 to 10\nDon’t use 999 or 9999 or 99999 for z-index value\n\nFor better understanding about zIndex, please remember the rule: Highest of\nlower floor will always lower than lowest of higher floor.\n\nOr Refer: https://css-tricks.com/almanac/properties/z/z-index/"}},"/":{"title":"Get Started","data":{"":"","what-is-react-compass#What is React Compass?":"React Compass is a library of React components that follows the ARIA Authoring Practices Guide.At the moment, React Compass only supports NextJS.","quick-start-with-nextjs#Quick Start with Next.js":"Install the library\n\n\n\n\nnpm i @comfortdelgro/react-compass\n\n\n\nyarn add @comfortdelgro/react-compass\n\n\n\npnpm add @comfortdelgro/react-compass\n\n\n\nAdd preflight flushing styles for SSR.\n\n\nimport Preflight from '@comfortdelgro/react-compass/preflight'\nimport Document, {\nDocumentContext,\nHead,\nHtml,\nMain,\nNextScript,\n} from 'next/document'\n\nclass MyDocument extends Document {\nstatic async getInitialProps(ctx: DocumentContext) {\nconst initialProps = await Document.getInitialProps(ctx)\nreturn {\n...initialProps,\nstyles: <>{initialProps.styles}</>,\n}\n}\n\nrender() {\nreturn (\n<Html>\n<Head>{Preflight.flush()}</Head>\n<body>\n<Main />\n<NextScript />\n</body>\n</Html>\n)\n}\n}\n\nexport default MyDocument\n\nAdd Preflight component for better CSS resets according to design guidelines.\n\n\nimport Preflight from '@comfortdelgro/react-compass/preflight'\nimport {AppProps} from 'next/app'\n\nconst App: React.FC<AppProps> = ({Component, pageProps}) => {\nreturn (\n<>\n<Preflight />\n<Component {...pageProps} />\n</>\n)\n}\n\nexport default App\n\nYou are good to go!\n\n\nYou can opt out of step 3 but we'd recommend not to."}}}