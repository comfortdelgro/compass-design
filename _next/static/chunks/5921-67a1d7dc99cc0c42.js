"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5921],{74710:function(e,t,n){n.d(t,{Z:function(){return c}});var a,l,i=n(38443),r=n(54284),o=n.n(r),s=n(97458);function c(){return(0,s.jsxs)(i.Flexbox,{css:{marginBottom:"$4"},children:[(0,s.jsx)(o(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:a||(a=(0,s.jsx)(i.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,s.jsx)(o(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:l||(l=(0,s.jsx)(i.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},25921:function(e,t,n){n.r(t),n.d(t,{demoComponents:function(){return w},demos:function(){return P},docs:function(){return y},srcComponents:function(){return C}});var a,l,i,r,o,s,c,d,p=n(40987),u=n(38443),f=n(52983),k=n.t(f,2),g=n(97458),h=n(20634),m=u.Calendar.InternationalizedDate,b=m.getLocalTimeZone,D=m.today,v=m.parseDate,x=n(74710),y={en:{description:"DatePickers combine input and a Calendar popover to allow users to enter or select a date.",location:"/docs/data/components/date-picker/date-picker.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Date Picker</h1><p class="description">DatePickers combine input and a Calendar popover to allow users to enter or select a date.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<h2 id="import">Import<a aria-labelledby="import" class="anchor-link" href="#import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><div class="cdg-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>DatePicker<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or</p>\n<div class="cdg-root"><pre><code class="language-js"><span class="token keyword">import</span> DatePicker <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/date-picker\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="i18nprovider">I18nProvider<a aria-labelledby="i18nprovider" class="anchor-link" href="#i18nprovider" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>I18nProvider allows you to override the default locale as determined by the browser/system setting with a locale defined by your application (e.g. application setting).\nIn this docs, we will use English(Singapore) <code>en-SG</code> as default locale</p>\n<div class="cdg-root"><pre><code class="language-js"><span class="token keyword">import</span> Calendar <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/calendar\'</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  I18nProvider\n<span class="token punctuation">}</span> <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token constant">I18N</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">I18nProvider</span></span> <span class="token attr-name">locale</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en-SG<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span><span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">I18nProvider</span></span><span class="token punctuation">></span></span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="basic-date-picker">Basic Date Picker<a aria-labelledby="basic-date-picker" class="anchor-link" href="#basic-date-picker" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DatePickerBasic.tsx"},'<h3 id="controlled-date-picker">Controlled Date Picker<a aria-labelledby="controlled-date-picker" class="anchor-link" href="#controlled-date-picker" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DatePickerControlled.tsx"},'<h3 id="granularity">Granularity<a aria-labelledby="granularity" class="anchor-link" href="#granularity" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The granularity prop allows you to control the smallest unit that is displayed by a DatePicker.</p>\n',{demo:"DatePickerGranularity.tsx"},'<h3 id="labeling">Labeling<a aria-labelledby="labeling" class="anchor-link" href="#labeling" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A visual label should be provided for the DatePicker using the label prop. If the DatePicker is required, the isRequired and necessityIndicator props can be used to show a required state.</p>\n',{demo:"DatePickerLabeling.tsx"},'<h3 id="validation">Validation<a aria-labelledby="validation" class="anchor-link" href="#validation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DatePickerValidation.tsx"},'<h3 id="disabled">Disabled<a aria-labelledby="disabled" class="anchor-link" href="#disabled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DatePickerisDisabled.tsx"},'<h3 id="read-only">Read Only<a aria-labelledby="read-only" class="anchor-link" href="#read-only" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DatePickerisReadOnly.tsx"},'<h3 id="invalid">Invalid<a aria-labelledby="invalid" class="anchor-link" href="#invalid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DatePickerInvalid.tsx"},'<h3 id="ismobile">IsMobile<a aria-labelledby="ismobile" class="anchor-link" href="#ismobile" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Mobile variant of date picker will remove the ability of inputing values by hand, instead it will open calendar by default</p>\n',{demo:"DatePickerIsMobile.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">calendarCSS</td>\n<td align="left"><code>CSS</code></td>\n<td align="left"></td>\n<td align="left">Style for calendar</td>\n</tr>\n<tr>\n<td align="left">minValue</td>\n<td align="left"><code>DateValue</code></td>\n<td align="left"></td>\n<td align="left">The minimum allowed date that a user may select.</td>\n</tr>\n<tr>\n<td align="left">maxValue</td>\n<td align="left"><code>DateValue</code></td>\n<td align="left"></td>\n<td align="left">The maximum allowed date that a user may select.</td>\n</tr>\n<tr>\n<td align="left">granularity</td>\n<td align="left"><code>&#39;day&#39; | &#39;hour&#39; | &#39;minute&#39; | &#39;second&#39;</code></td>\n<td align="left"></td>\n<td align="left">Determines the smallest unit that is displayed in the date picker. By default, this is &quot;day&quot; for dates, and &quot;minute&quot; for times.</td>\n</tr>\n<tr>\n<td align="left">isReadOnly</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the calendar value is immutable.</td>\n</tr>\n<tr>\n<td align="left">isDisabled</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the calendar is disabled.</td>\n</tr>\n<tr>\n<td align="left">value</td>\n<td align="left"><code>DateValue</code></td>\n<td align="left"></td>\n<td align="left">The current value (controlled).</td>\n</tr>\n<tr>\n<td align="left">defaultValue</td>\n<td align="left"><code>DateValue</code></td>\n<td align="left"></td>\n<td align="left">The default value (uncontrolled).</td>\n</tr>\n<tr>\n<td align="left">hourCycle</td>\n<td align="left"><code>12                                       | 24</code></td>\n<td align="left"></td>\n<td align="left">Whether to display the time in 12 or 24 hour format. By default, this is determined by the user&#39;s locale.</td>\n</tr>\n<tr>\n<td align="left">label</td>\n<td align="left"><code>React.ReactNode</code></td>\n<td align="left"></td>\n<td align="left">The content to display as the label.</td>\n</tr>\n<tr>\n<td align="left">helperText</td>\n<td align="left"><code>React.ReactNode</code></td>\n<td align="left"></td>\n<td align="left">The content to display as helper text</td>\n</tr>\n<tr>\n<td align="left">necessityIndicator</td>\n<td align="left"><code>&#39;icon&#39; | &#39;label&#39;</code></td>\n<td align="left"></td>\n<td align="left">Whether the required state should be shown as an icon or text.</td>\n</tr>\n<tr>\n<td align="left">shouldCloseOnSelect</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the overlay will close after selected. If <code>granularity</code> is selected, <code>shouldCloseOnSelect</code> will be set to <code>true</code> due to core library issues</td>\n</tr>\n<tr>\n<td align="left">isMobile</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the overlay is in mobile variant.</td>\n</tr>\n<tr>\n<td align="left">isOpen</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the overlay is open by default (controlled).</td>\n</tr>\n<tr>\n<td align="left">defaultOpen</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the overlay is open by default (uncontrolled).</td>\n</tr>\n<tr>\n<td align="left">onChange</td>\n<td align="left"><code>(e: DateValue) =&gt; void</code></td>\n<td align="left"></td>\n<td align="left">The default value (uncontrolled).</td>\n</tr>\n<tr>\n<td align="left">onCancel</td>\n<td align="left"><code>() =&gt; void</code></td>\n<td align="left"></td>\n<td align="left">Callback that is called when the cancel button is triggered</td>\n</tr>\n<tr>\n<td align="left">isDateUnavailable</td>\n<td align="left"><code>(date: DateValue) =&gt; boolean</code></td>\n<td align="left"></td>\n<td align="left">Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Import",level:2,hash:"import",children:[{text:"I18nProvider",level:3,hash:"i18nprovider"},{text:"Basic Date Picker",level:3,hash:"basic-date-picker"},{text:"Controlled Date Picker",level:3,hash:"controlled-date-picker"},{text:"Granularity",level:3,hash:"granularity"},{text:"Labeling",level:3,hash:"labeling"},{text:"Validation",level:3,hash:"validation"},{text:"Disabled",level:3,hash:"disabled"},{text:"Read Only",level:3,hash:"read-only"},{text:"Invalid",level:3,hash:"invalid"},{text:"IsMobile",level:3,hash:"ismobile"}]},{text:"Props",level:2,hash:"props",children:[]}],title:"React Date Picker component",headers:{title:"React Date Picker component",components:["Date Picker"],hooks:[]}}},P={"DatePickerBasic.tsx":{module:"./DatePickerBasic.tsx",raw:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerBasic() {\n  return (\n    <div>\n      <DatePicker label='Date' />\n    </div>\n  )\n}\n\nexport default DatePickerBasic\n",moduleTS:"./DatePickerBasic.tsx",rawTS:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerBasic() {\n  return (\n    <div>\n      <DatePicker label='Date' />\n    </div>\n  )\n}\n\nexport default DatePickerBasic\n"},"DatePickerControlled.tsx":{module:"./DatePickerControlled.tsx",raw:"import {\n  Calendar,\n  CalendarProps,\n  DatePicker,\n  useDateFormatter,\n} from '@comfortdelgro/react-compass'\nimport React from 'react'\n\nconst {getLocalTimeZone, today, parseDate} = Calendar.InternationalizedDate\n\nfunction DatePickerControlled() {\n  const [date, setDate] = React.useState<CalendarProps>(\n    parseDate(today(getLocalTimeZone()).toString()),\n  )\n\n  const formatter = useDateFormatter({dateStyle: 'full'})\n\n  return (\n    <>\n      <p>\n        <b>Selected date:</b>\n        <span style={{marginLeft: '4px'}}>\n          {formatter.format(date.toDate(getLocalTimeZone()))}\n        </span>\n      </p>\n      <DatePicker\n        calendarCSS={{\n          '.cdg-calendar-today-btn': {\n            background: 'var(--colors-cdgBlue)',\n            color: 'var(--colors-whiteText)',\n            borderColor: 'var(--colors-cdgBlue)',\n          },\n        }}\n        label='Date'\n        value={date}\n        defaultValue={today(getLocalTimeZone())}\n        onChange={setDate}\n      />\n    </>\n  )\n}\n\nexport default DatePickerControlled\n",moduleTS:"./DatePickerControlled.tsx",rawTS:"import {\n  Calendar,\n  CalendarProps,\n  DatePicker,\n  useDateFormatter,\n} from '@comfortdelgro/react-compass'\nimport React from 'react'\n\nconst {getLocalTimeZone, today, parseDate} = Calendar.InternationalizedDate\n\nfunction DatePickerControlled() {\n  const [date, setDate] = React.useState<CalendarProps>(\n    parseDate(today(getLocalTimeZone()).toString()),\n  )\n\n  const formatter = useDateFormatter({dateStyle: 'full'})\n\n  return (\n    <>\n      <p>\n        <b>Selected date:</b>\n        <span style={{marginLeft: '4px'}}>\n          {formatter.format(date.toDate(getLocalTimeZone()))}\n        </span>\n      </p>\n      <DatePicker\n        calendarCSS={{\n          '.cdg-calendar-today-btn': {\n            background: 'var(--colors-cdgBlue)',\n            color: 'var(--colors-whiteText)',\n            borderColor: 'var(--colors-cdgBlue)',\n          },\n        }}\n        label='Date'\n        value={date}\n        defaultValue={today(getLocalTimeZone())}\n        onChange={setDate}\n      />\n    </>\n  )\n}\n\nexport default DatePickerControlled\n"},"DatePickerGranularity.tsx":{module:"./DatePickerGranularity.tsx",raw:"import {DatePicker} from '@comfortdelgro/react-compass'\n\nfunction DatePickerGranularity() {\n  return (\n    <div>\n      <DatePicker label='Date' granularity='second' />\n    </div>\n  )\n}\n\nexport default DatePickerGranularity\n",moduleTS:"./DatePickerGranularity.tsx",rawTS:"import {DatePicker} from '@comfortdelgro/react-compass'\n\nfunction DatePickerGranularity() {\n  return (\n    <div>\n      <DatePicker label='Date' granularity='second' />\n    </div>\n  )\n}\n\nexport default DatePickerGranularity\n"},"DatePickerLabeling.tsx":{module:"./DatePickerLabeling.tsx",raw:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerLabeling() {\n  return (\n    <div>\n      <DatePicker label='Date' />\n      <br />\n      <DatePicker label='Date' isRequired necessityIndicator='icon' />\n      <br />\n      <DatePicker label='Date' isRequired necessityIndicator='label' />\n      <br />\n      <DatePicker label='Date' necessityIndicator='label' />\n    </div>\n  )\n}\n\nexport default DatePickerLabeling\n",moduleTS:"./DatePickerLabeling.tsx",rawTS:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerLabeling() {\n  return (\n    <div>\n      <DatePicker label='Date' />\n      <br />\n      <DatePicker label='Date' isRequired necessityIndicator='icon' />\n      <br />\n      <DatePicker label='Date' isRequired necessityIndicator='label' />\n      <br />\n      <DatePicker label='Date' necessityIndicator='label' />\n    </div>\n  )\n}\n\nexport default DatePickerLabeling\n"},"DatePickerValidation.tsx":{module:"./DatePickerValidation.tsx",raw:"import {isWeekend, useLocale} from '@comfortdelgro/react-compass'\nimport DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerValidation() {\n  const {locale} = useLocale()\n  return (\n    <div>\n      <DatePicker\n        label='Date'\n        isDateUnavailable={(date) => isWeekend(date, locale)}\n      />\n    </div>\n  )\n}\n\nexport default DatePickerValidation\n",moduleTS:"./DatePickerValidation.tsx",rawTS:"import {isWeekend, useLocale} from '@comfortdelgro/react-compass'\nimport DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerValidation() {\n  const {locale} = useLocale()\n  return (\n    <div>\n      <DatePicker\n        label='Date'\n        isDateUnavailable={(date) => isWeekend(date, locale)}\n      />\n    </div>\n  )\n}\n\nexport default DatePickerValidation\n"},"DatePickerisDisabled.tsx":{module:"./DatePickerisDisabled.tsx",raw:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerisDisabled() {\n  return (\n    <div>\n      <DatePicker isDisabled />\n    </div>\n  )\n}\n\nexport default DatePickerisDisabled\n",moduleTS:"./DatePickerisDisabled.tsx",rawTS:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerisDisabled() {\n  return (\n    <div>\n      <DatePicker isDisabled />\n    </div>\n  )\n}\n\nexport default DatePickerisDisabled\n"},"DatePickerisReadOnly.tsx":{module:"./DatePickerisReadOnly.tsx",raw:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerisReadOnly() {\n  return (\n    <div>\n      <DatePicker isReadOnly />\n    </div>\n  )\n}\n\nexport default DatePickerisReadOnly\n",moduleTS:"./DatePickerisReadOnly.tsx",rawTS:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerisReadOnly() {\n  return (\n    <div>\n      <DatePicker isReadOnly />\n    </div>\n  )\n}\n\nexport default DatePickerisReadOnly\n"},"DatePickerInvalid.tsx":{module:"./DatePickerInvalid.tsx",raw:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerInvalid() {\n  return (\n    <div>\n      <DatePicker isInvalid />\n    </div>\n  )\n}\n\nexport default DatePickerInvalid\n",moduleTS:"./DatePickerInvalid.tsx",rawTS:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerInvalid() {\n  return (\n    <div>\n      <DatePicker isInvalid />\n    </div>\n  )\n}\n\nexport default DatePickerInvalid\n"},"DatePickerIsMobile.tsx":{module:"./DatePickerIsMobile.tsx",raw:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerIsMobile() {\n  return (\n    <div>\n      <DatePicker isMobile />\n    </div>\n  )\n}\n\nexport default DatePickerIsMobile\n",moduleTS:"./DatePickerIsMobile.tsx",rawTS:"import DatePicker from '@comfortdelgro/react-compass/date-picker'\n\nfunction DatePickerIsMobile() {\n  return (\n    <div>\n      <DatePicker isMobile />\n    </div>\n  )\n}\n\nexport default DatePickerIsMobile\n"}};P.scope={process:{},import:{"@comfortdelgro/react-compass/date-picker":p,"@comfortdelgro/react-compass":u,react:k}};var w={"./DatePickerBasic.tsx":function(){return a||(a=(0,g.jsx)("div",{children:(0,g.jsx)(p.default,{label:"Date"})}))},"./DatePickerControlled.tsx":function(){var e=f.useState(v(D(b()).toString())),t=(0,h.Z)(e,2),n=t[0],a=t[1],i=(0,u.useDateFormatter)({dateStyle:"full"});return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)("p",{children:[l||(l=(0,g.jsx)("b",{children:"Selected date:"})),(0,g.jsx)("span",{style:{marginLeft:"4px"},children:i.format(n.toDate(b()))})]}),(0,g.jsx)(u.DatePicker,{calendarCSS:{".cdg-calendar-today-btn":{background:"var(--colors-cdgBlue)",color:"var(--colors-whiteText)",borderColor:"var(--colors-cdgBlue)"}},label:"Date",value:n,defaultValue:D(b()),onChange:a})]})},"./DatePickerGranularity.tsx":function(){return i||(i=(0,g.jsx)("div",{children:(0,g.jsx)(u.DatePicker,{label:"Date",granularity:"second"})}))},"./DatePickerLabeling.tsx":function(){return r||(r=(0,g.jsxs)("div",{children:[(0,g.jsx)(p.default,{label:"Date"}),(0,g.jsx)("br",{}),(0,g.jsx)(p.default,{label:"Date",isRequired:!0,necessityIndicator:"icon"}),(0,g.jsx)("br",{}),(0,g.jsx)(p.default,{label:"Date",isRequired:!0,necessityIndicator:"label"}),(0,g.jsx)("br",{}),(0,g.jsx)(p.default,{label:"Date",necessityIndicator:"label"})]}))},"./DatePickerValidation.tsx":function(){var e=(0,u.useLocale)().locale;return(0,g.jsx)("div",{children:(0,g.jsx)(p.default,{label:"Date",isDateUnavailable:function(t){return(0,u.isWeekend)(t,e)}})})},"./DatePickerisDisabled.tsx":function(){return o||(o=(0,g.jsx)("div",{children:(0,g.jsx)(p.default,{isDisabled:!0})}))},"./DatePickerisReadOnly.tsx":function(){return s||(s=(0,g.jsx)("div",{children:(0,g.jsx)(p.default,{isReadOnly:!0})}))},"./DatePickerInvalid.tsx":function(){return c||(c=(0,g.jsx)("div",{children:(0,g.jsx)(p.default,{isInvalid:!0})}))},"./DatePickerIsMobile.tsx":function(){return d||(d=(0,g.jsx)("div",{children:(0,g.jsx)(p.default,{isMobile:!0})}))}},C={"components/common/ComponentLinkHeader.tsx":x.Z}}}]);