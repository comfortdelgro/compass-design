(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[244],{21643:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return u}});var t={};a.r(t),a.d(t,{demoComponents:function(){return l},demos:function(){return c},docs:function(){return o},srcComponents:function(){return i}});var e=a(26098),p=a(43866),o={en:{description:"Customize React Compass with your theme. You can change the colors, the typography and much more.",location:"/docs/data/customization/theming/theming.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Theming</h1><p class="description">Customize React Compass with your theme. You can change the colors, the typography and much more.</p>\n\n<h2 id="theme-provider">Theme provider<a aria-labelledby="theme-provider" class="anchor-link" href="#theme-provider" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>If you wish to customize the theme, you need to use the ThemeProvider component in order to inject a theme into your application. However, this is optional Compass Design components come with a default theme.</p>\n<p><code>ThemeProvider</code> relies on the context feature of React to pass the theme down to the components, so you need to make sure that ThemeProvider is a parent of the components you are trying to customize. You can learn more about this in the API section.</p>\n<h2 id="theme-configuration-variables">Theme configuration variables<a aria-labelledby="theme-configuration-variables" class="anchor-link" href="#theme-configuration-variables" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Changing the theme configuration variables is the most effective way to match Compass Design to your needs. The following sections cover the most important theme variables:</p>\n<ul>\n<li><code>colors</code></li>\n<li><code>spacings</code></li>\n<li><code>fonts</code></li>\n<li><code>fontSizes</code></li>\n<li><code>lineHeights</code></li>\n<li><code>fontWeights</code></li>\n<li><code>borderWidths</code></li>\n<li><code>radius</code></li>\n<li><code>transitions</code></li>\n</ul>\n<p>You can see <a href="https://github.com/comfortdelgro/compass-design/blob/main/packages/react-compass/src/theme/theme.ts" target="_blank" rel="noopener nofollow">theme configuration variables here</a></p>\n<h2 id="custom-variables">Custom variables<a aria-labelledby="custom-variables" class="anchor-link" href="#custom-variables" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>When using Compass Design&#39;s theme, it can be convenient to add additional variables to the theme so you can use them everywhere. For instance:</p>\n<div class="cdg-root"><pre><code class="language-js"><span class="token keyword">import</span> createTheme <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/theme/theme\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> lightThemeCustom <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token string">\'light-theme-custom\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">primaryText</span><span class="token operator">:</span> <span class="token string">\'red\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> darkThemeCustom <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token string">\'dark-theme-custom\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">primaryText</span><span class="token operator">:</span> <span class="token string">\'blue\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="themeprovider">ThemeProvider<a aria-labelledby="themeprovider" class="anchor-link" href="#themeprovider" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>This component takes a theme prop and applies it to the entire React tree that it is wrapping around. It should preferably be used at <em>the root of your component tree</em>.</p>\n<div class="cdg-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>ThemeProvider<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p><strong>Props:</strong></p>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">lightThemeCustom</td>\n<td align="left"><code>createTheme</code></td>\n<td align="left">—</td>\n<td align="left">Customize theme for light theme</td>\n</tr>\n<tr>\n<td align="left">darkThemeCustom</td>\n<td align="left"><code>createTheme</code></td>\n<td align="left">—</td>\n<td align="left">Customize theme for dark theme</td>\n</tr>\n<tr>\n<td align="left">changeBy</td>\n<td align="left"><code>any</code></td>\n<td align="left">—</td>\n<td align="left">State to determine the theme change</td>\n</tr>\n<tr>\n<td align="left">isCSR</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Determine if CSR or SSR</td>\n</tr>\n</tbody></table>\n<h2 id="dark-mode">Dark mode<a aria-labelledby="dark-mode" class="anchor-link" href="#dark-mode" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Compass Design comes with two palette modes: light (the default) and dark.</p>\n<h3 id="example">Example<a aria-labelledby="example" class="anchor-link" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><div class="cdg-root"><pre><code class="language-js"><span class="token keyword">enum</span> ETheme <span class="token punctuation">{</span>\n  Light <span class="token operator">=</span> <span class="token string">\'light\'</span><span class="token punctuation">,</span>\n  Dark <span class="token operator">=</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>Component<span class="token punctuation">,</span> pageProps<span class="token punctuation">}</span><span class="token operator">:</span> AppProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>isDarkTheme<span class="token punctuation">,</span> setIsDarkTheme<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ETheme</span></span><span class="token punctuation">></span></span><span class="token punctuation">(</span>ETheme<span class="token punctuation">.</span>Light<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleOnChangeTheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setIsDarkTheme</span><span class="token punctuation">(</span>value <span class="token keyword">as</span> ETheme<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span>\n        <span class="token attr-name">changeBy</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isDarkTheme<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Box</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Box</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>\n              <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleOnChangeTheme<span class="token punctuation">}</span></span>\n              <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isDarkTheme<span class="token punctuation">}</span></span>\n            <span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">\'</span>Light theme<span class="token punctuation">\'</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ETheme<span class="token punctuation">.</span>Light<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">\'</span>Dark theme<span class="token punctuation">\'</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ETheme<span class="token punctuation">.</span>Dark<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Box</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Component</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Box</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="hooks">Hooks<a aria-labelledby="hooks" class="anchor-link" href="#hooks" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>We can get the color code using the hook <code>useColors</code></p>\n<p>Example:</p>\n<div class="cdg-root"><pre><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">Demo</span><span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token function">useColors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n      <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> colors<span class="token punctuation">.</span>cdgBlue140<span class="token punctuation">,</span>\n        <span class="token literal-property property">color</span><span class="token operator">:</span> colors<span class="token punctuation">.</span>whiteText<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      Button\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>We can get the current theme using the hook <code>useCurrentTheme</code> and we also can using <code>useIsLightTheme</code> or <code>useIsDarkTheme</code></p>\n<p>Example:</p>\n<div class="cdg-root"><pre><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">Demo</span><span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> currentTheme <span class="token operator">=</span> <span class="token function">useCurrentTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> isLightTheme <span class="token operator">=</span> <span class="token function">useIsLightTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> isDarkTheme <span class="token operator">=</span> <span class="token function">useIsDarkTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography.Header</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">\'</span>header4<span class="token punctuation">\'</span></span><span class="token punctuation">></span></span>\n        Current theme<span class="token operator">:</span> <span class="token punctuation">{</span>currentTheme<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Typography.Header</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography.Header</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">\'</span>header4<span class="token punctuation">\'</span></span><span class="token punctuation">></span></span>\n        Is light theme<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">String</span><span class="token punctuation">(</span>isLightTheme<span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Typography.Header</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography.Header</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">\'</span>header4<span class="token punctuation">\'</span></span><span class="token punctuation">></span></span>\n        Is dark theme<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">String</span><span class="token punctuation">(</span>isDarkTheme<span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Typography.Header</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>` <span class="token operator">--</span><span class="token operator">></span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n'],toc:[{text:"Theme provider",level:2,hash:"theme-provider",children:[]},{text:"Theme configuration variables",level:2,hash:"theme-configuration-variables",children:[]},{text:"Custom variables",level:2,hash:"custom-variables",children:[]},{text:"ThemeProvider",level:2,hash:"themeprovider",children:[]},{text:"Dark mode",level:2,hash:"dark-mode",children:[{text:"Example",level:3,hash:"example"},{text:"Hooks",level:3,hash:"hooks"}]}],title:"Theming",headers:{"::":"```js","function MyApp({Component, pageProps}":"AppProps) {","Compass Design comes with two palette modes":"light (the default) and dark.","  const handleOnChangeTheme = (value":"string) => {","            backgroundColor":"var(--cdg-color-background)',",Example:"```js","export const Demo":"React.FC = () => {","        backgroundColor":"colors.cdgBlue140,","        color":"colors.whiteText,","        Current theme":"{currentTheme}","        Is light theme":"{String(isLightTheme)}","        Is dark theme":"{String(isDarkTheme)}","Changing the theme configuration variables is the most effective way to match Compass Design to your needs. The following sections cover the most important theme variables":"- `colors`","You can customize variables by overriding them in the global css file, below is an example":"```css","  --cdg-color-danger":"green;",components:[],hooks:[]}}},c={};c.scope={process:{},import:{}};var l={},i={},r=a(31549);function u(){return(0,r.jsx)(p.Z,(0,e.Z)({},t))}},58054:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/customization/theming",function(){return a(21643)}])}},function(n){n.O(0,[4308,9813,5675,3866,9774,2888,179],function(){return n(n.s=58054)}),_N_E=n.O()}]);