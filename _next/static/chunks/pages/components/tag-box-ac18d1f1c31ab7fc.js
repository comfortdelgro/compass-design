(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[786],{74710:function(n,t,e){"use strict";e.d(t,{Z:function(){return s}});var a,o,i=e(38443),l=e(54284),d=e.n(l),r=e(97458);function s(){return(0,r.jsxs)(i.Flexbox,{css:{marginBottom:"$4"},children:[(0,r.jsx)(d(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:a||(a=(0,r.jsx)(i.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,r.jsx)(d(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:o||(o=(0,r.jsx)(i.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},69947:function(n,t,e){"use strict";e.r(t),e.d(t,{default:function(){return C}});var a,o,i,l,d,r,s,c,g,m,h,x,p,u={};e.r(u),e.d(u,{demoComponents:function(){return k},demos:function(){return w},docs:function(){return R},srcComponents:function(){return M}});var f=e(80208),b=e(34706),T=e(38443),v=e(46769),y=e(52983),I=e.t(y,2),B=e(20634),E=e(18342),S=e(97458),H=[{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 1",icon:(0,S.jsx)(T.Icon,{icon:v.faExclamationTriangle})},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 2",isDisabled:!0},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 3",icon:(0,S.jsx)(T.Icon,{icon:v.faExclamationTriangle})},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 4",isDisabled:!0},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 5",icon:(0,S.jsx)(T.Icon,{icon:v.faExclamationTriangle}),isError:!0},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 6",isDisabled:!0},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 7",icon:(0,S.jsx)(T.Icon,{icon:v.faExclamationTriangle})},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 8",isDisabled:!0},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 9",icon:(0,S.jsx)(T.Icon,{icon:v.faExclamationTriangle})},{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:"Item 10",isDisabled:!0}],A=e(74710),R={en:{description:"Using to display list of tags.",location:"/docs/data/components/tag-box/tag-box.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>TagBox</h1><p class="description">Using to display list of tags.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>TagBox<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or</p>\n<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> TagBox <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/tag-box\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="example">Example<a aria-labelledby="example" class="anchor-link" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="full-features">Full features<a aria-labelledby="full-features" class="anchor-link" href="#full-features" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"TagBoxBasic.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="tagbox">TagBox<a aria-labelledby="tagbox" class="anchor-link" href="#tagbox" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">children</td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">—</td>\n<td align="left">The content to display in the tag box. It should be TabBox.Action</td>\n</tr>\n<tr>\n<td align="left">isErrored</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">&#39;false&#39;</td>\n<td align="left">Error state when tagbox is isErrored</td>\n</tr>\n<tr>\n<td align="left">errorMessage</td>\n<td align="left"><code>string</code></td>\n<td align="left">-</td>\n<td align="left">Error message for tagbox</td>\n</tr>\n<tr>\n<td align="left">labelPosition</td>\n<td align="left"><code>top</code> <code>left</code></td>\n<td align="left">-</td>\n<td align="left">The position of the label.</td>\n</tr>\n<tr>\n<td align="left">collaspable</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">-</td>\n<td align="left">Collaspable mode when tag bog is to much.</td>\n</tr>\n<tr>\n<td align="left">typeable</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">-</td>\n<td align="left">Typeable mode for input new tag.</td>\n</tr>\n<tr>\n<td align="left">label</td>\n<td align="left"><code>string</code></td>\n<td align="left">-</td>\n<td align="left">The content to display as the label.</td>\n</tr>\n<tr>\n<td align="left">items</td>\n<td align="left"><code>Item</code></td>\n<td align="left">-</td>\n<td align="left">List of tags displayed in the tag box.</td>\n</tr>\n<tr>\n<td align="left">helperText</td>\n<td align="left"><code>string</code></td>\n<td align="left">-</td>\n<td align="left">The little helper text display below the tag box.</td>\n</tr>\n<tr>\n<td align="left">onRemove</td>\n<td align="left"><code>function</code></td>\n<td align="left">—</td>\n<td align="left">Callback fired when the click to remove a tag.</td>\n</tr>\n<tr>\n<td align="left">onAdd</td>\n<td align="left"><code>function</code></td>\n<td align="left">—</td>\n<td align="left">Callback fired when user enter a new tag.</td>\n</tr>\n<tr>\n<td align="left">onEdit</td>\n<td align="left"><code>function</code></td>\n<td align="left">—</td>\n<td align="left">Callback fired when user edit a tag.</td>\n</tr>\n<tr>\n<td align="left">css</td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left">The system prop that allows defining system overrides as well as additional CSS styles.</td>\n</tr>\n</tbody></table>\n<h3 id="item">Item<a aria-labelledby="item" class="anchor-link" href="#item" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">id</td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">—</td>\n<td align="left">Unique Id</td>\n</tr>\n<tr>\n<td align="left">value</td>\n<td align="left"><code>string</code></td>\n<td align="left">-</td>\n<td align="left">Value to display in the item content</td>\n</tr>\n<tr>\n<td align="left">icon</td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">-</td>\n<td align="left">Display icon in the left side</td>\n</tr>\n<tr>\n<td align="left">isDisabled</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">-</td>\n<td align="left">Disable state.</td>\n</tr>\n<tr>\n<td align="left">isError</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">-</td>\n<td align="left">Error state.</td>\n</tr>\n</tbody></table>\n<h3 id="tagbox-action">TagBox.Action<a aria-labelledby="tagbox-action" class="anchor-link" href="#tagbox-action" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">children</td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">—</td>\n<td align="left">The content to display in the tag box action.</td>\n</tr>\n<tr>\n<td align="left">css</td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left">The system prop that allows defining system overrides as well as additional CSS styles.</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Example",level:2,hash:"example",children:[{text:"Full features",level:3,hash:"full-features"}]},{text:"Props",level:2,hash:"props",children:[{text:"TagBox",level:3,hash:"tagbox"},{text:"Item",level:3,hash:"item"},{text:"TagBox.Action",level:3,hash:"tagbox-action"}]}],title:"React Tag Box component",headers:{title:"React Tag Box component",components:["TagBox"],hooks:[]}}},w={"TagBoxBasic.tsx":{module:"./TagBoxBasic.tsx",raw:"import {\n  Button,\n  Column,\n  Icon,\n  TagBox,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {faExclamationTriangle} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst items = [\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 1',\n    icon: <Icon icon={faExclamationTriangle} />,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 2',\n    isDisabled: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 3',\n    icon: <Icon icon={faExclamationTriangle} />,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 4',\n    isDisabled: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 5',\n    icon: <Icon icon={faExclamationTriangle} />,\n    isError: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 6',\n    isDisabled: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 7',\n    icon: <Icon icon={faExclamationTriangle} />,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 8',\n    isDisabled: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 9',\n    icon: <Icon icon={faExclamationTriangle} />,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 10',\n    isDisabled: true,\n  },\n]\n\ntype Item = {\n  id: string | number\n  value: string\n  icon?: React.ReactNode\n  isDisabled?: boolean\n  isError?: boolean\n}\n\nconst onRemove = (\n  id: string | number,\n  setState: React.Dispatch<React.SetStateAction<Item[]>>,\n) => setState((l) => l.filter((item) => item.id !== id))\n\nconst onAdd = (\n  value: string,\n  setState: React.Dispatch<React.SetStateAction<Item[]>>,\n) =>\n  setState((l) => [\n    ...l,\n    {\n      id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n      value: value,\n    },\n  ])\n\nconst onEdit = (\n  id: string | number,\n  value: string,\n  setState: React.Dispatch<React.SetStateAction<Item[]>>,\n) =>\n  setState((l) => {\n    const items = [...l]\n    items.forEach((item, index) => {\n      if (item.id === id) {\n        const item = {...items[index]} as Item\n        item.value = value\n        items[index] = item\n      }\n    })\n    return items\n  })\n\nconst TagBoxs: React.FC = () => {\n  const [list, setList] = React.useState<Item[]>(items)\n\n  const removeItem = (id: string | number) => onRemove(id, setList)\n\n  const addItem = (value: string) => onAdd(value, setList)\n\n  const editItem = (id: string | number, value: string) =>\n    onEdit(id, value, setList)\n\n  return (\n    <Column>\n      <Typography.Header variant='header3'>Fully Functional</Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        icon={<Icon icon={faExclamationTriangle} />}\n        isRequired\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        helperText='Helper text'\n      >\n        <TagBox.Action>\n          <Button>Call to action</Button>\n        </TagBox.Action>\n      </TagBox>\n      <Typography.Header variant='header3'>Typeable</Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        typeable\n        icon={<Icon icon={faExclamationTriangle} />}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        helperText='Helper text'\n      >\n        <TagBox.Action>\n          <Button>Call to action</Button>\n        </TagBox.Action>\n      </TagBox>\n      <Typography.Header variant='header3'>Error</Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        icon={<Icon icon={faExclamationTriangle} />}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        isErrored\n        errorMessage='Error Message'\n        helperText='Helper text'\n      >\n        <TagBox.Action>\n          <Button>Call to action</Button>\n        </TagBox.Action>\n      </TagBox>\n      <Typography.Header variant='header3'>Positioned Label</Typography.Header>\n      <TagBox\n        items={list}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        labelPosition='left'\n        label='Text Label'\n        helperText='Helper text'\n      >\n        <TagBox.Action>\n          <Button>Call to action</Button>\n        </TagBox.Action>\n      </TagBox>\n      <Typography.Header variant='header3'>No Action</Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        helperText='Helper text'\n      />\n      <Typography.Header variant='header3'>\n        No Helper text and Action\n      </Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n      />\n    </Column>\n  )\n}\n\nexport default TagBoxs\n",jsxPreview:"<TagBox\r\n    label='Text Label'\r\n    items={list}\r\n    icon={<Icon icon={faExclamationTriangle} />}\r\n    isRequired\r\n    onAdd={addItem}\r\n    onEdit={editItem}\r\n    onRemove={removeItem}\r\n    helperText='Helper text'\r\n    >\r\n    <TagBox.Action>\r\n        <Button>Call to action</Button>\r\n    </TagBox.Action>\r\n</TagBox>",moduleTS:"./TagBoxBasic.tsx",rawTS:"import {\n  Button,\n  Column,\n  Icon,\n  TagBox,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {faExclamationTriangle} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst items = [\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 1',\n    icon: <Icon icon={faExclamationTriangle} />,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 2',\n    isDisabled: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 3',\n    icon: <Icon icon={faExclamationTriangle} />,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 4',\n    isDisabled: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 5',\n    icon: <Icon icon={faExclamationTriangle} />,\n    isError: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 6',\n    isDisabled: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 7',\n    icon: <Icon icon={faExclamationTriangle} />,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 8',\n    isDisabled: true,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 9',\n    icon: <Icon icon={faExclamationTriangle} />,\n  },\n  {\n    id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n    value: 'Item 10',\n    isDisabled: true,\n  },\n]\n\ntype Item = {\n  id: string | number\n  value: string\n  icon?: React.ReactNode\n  isDisabled?: boolean\n  isError?: boolean\n}\n\nconst onRemove = (\n  id: string | number,\n  setState: React.Dispatch<React.SetStateAction<Item[]>>,\n) => setState((l) => l.filter((item) => item.id !== id))\n\nconst onAdd = (\n  value: string,\n  setState: React.Dispatch<React.SetStateAction<Item[]>>,\n) =>\n  setState((l) => [\n    ...l,\n    {\n      id: `cdg-id-${Math.random().toString(36).substring(2)}`,\n      value: value,\n    },\n  ])\n\nconst onEdit = (\n  id: string | number,\n  value: string,\n  setState: React.Dispatch<React.SetStateAction<Item[]>>,\n) =>\n  setState((l) => {\n    const items = [...l]\n    items.forEach((item, index) => {\n      if (item.id === id) {\n        const item = {...items[index]} as Item\n        item.value = value\n        items[index] = item\n      }\n    })\n    return items\n  })\n\nconst TagBoxs: React.FC = () => {\n  const [list, setList] = React.useState<Item[]>(items)\n\n  const removeItem = (id: string | number) => onRemove(id, setList)\n\n  const addItem = (value: string) => onAdd(value, setList)\n\n  const editItem = (id: string | number, value: string) =>\n    onEdit(id, value, setList)\n\n  return (\n    <Column>\n      <Typography.Header variant='header3'>Fully Functional</Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        icon={<Icon icon={faExclamationTriangle} />}\n        isRequired\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        helperText='Helper text'\n      >\n        <TagBox.Action>\n          <Button>Call to action</Button>\n        </TagBox.Action>\n      </TagBox>\n      <Typography.Header variant='header3'>Typeable</Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        typeable\n        icon={<Icon icon={faExclamationTriangle} />}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        helperText='Helper text'\n      >\n        <TagBox.Action>\n          <Button>Call to action</Button>\n        </TagBox.Action>\n      </TagBox>\n      <Typography.Header variant='header3'>Error</Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        icon={<Icon icon={faExclamationTriangle} />}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        isErrored\n        errorMessage='Error Message'\n        helperText='Helper text'\n      >\n        <TagBox.Action>\n          <Button>Call to action</Button>\n        </TagBox.Action>\n      </TagBox>\n      <Typography.Header variant='header3'>Positioned Label</Typography.Header>\n      <TagBox\n        items={list}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        labelPosition='left'\n        label='Text Label'\n        helperText='Helper text'\n      >\n        <TagBox.Action>\n          <Button>Call to action</Button>\n        </TagBox.Action>\n      </TagBox>\n      <Typography.Header variant='header3'>No Action</Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n        helperText='Helper text'\n      />\n      <Typography.Header variant='header3'>\n        No Helper text and Action\n      </Typography.Header>\n      <TagBox\n        label='Text Label'\n        items={list}\n        onAdd={addItem}\n        onEdit={editItem}\n        onRemove={removeItem}\n      />\n    </Column>\n  )\n}\n\nexport default TagBoxs\n"}};w.scope={process:{},import:{"@comfortdelgro/react-compass":T,"@fortawesome/free-solid-svg-icons":v,react:I}};var k={"./TagBoxBasic.tsx":function(){var n=y.useState(H),t=(0,B.Z)(n,2),e=t[0],u=t[1],b=function(n){return u(function(t){return t.filter(function(t){return t.id!==n})})},I=function(n){return u(function(t){return[].concat((0,E.Z)(t),[{id:"cdg-id-".concat(Math.random().toString(36).substring(2)),value:n}])})},A=function(n,t){return u(function(e){var a=(0,E.Z)(e);return a.forEach(function(e,o){if(e.id===n){var i=(0,f.Z)({},a[o]);i.value=t,a[o]=i}}),a})};return(0,S.jsxs)(T.Column,{children:[a||(a=(0,S.jsx)(T.Typography.Header,{variant:"header3",children:"Fully Functional"})),(0,S.jsx)(T.TagBox,{label:"Text Label",items:e,icon:o||(o=(0,S.jsx)(T.Icon,{icon:v.faExclamationTriangle})),isRequired:!0,onAdd:I,onEdit:A,onRemove:b,helperText:"Helper text",children:i||(i=(0,S.jsx)(T.TagBox.Action,{children:(0,S.jsx)(T.Button,{children:"Call to action"})}))}),l||(l=(0,S.jsx)(T.Typography.Header,{variant:"header3",children:"Typeable"})),(0,S.jsx)(T.TagBox,{label:"Text Label",items:e,typeable:!0,icon:d||(d=(0,S.jsx)(T.Icon,{icon:v.faExclamationTriangle})),onAdd:I,onEdit:A,onRemove:b,helperText:"Helper text",children:r||(r=(0,S.jsx)(T.TagBox.Action,{children:(0,S.jsx)(T.Button,{children:"Call to action"})}))}),s||(s=(0,S.jsx)(T.Typography.Header,{variant:"header3",children:"Error"})),(0,S.jsx)(T.TagBox,{label:"Text Label",items:e,icon:c||(c=(0,S.jsx)(T.Icon,{icon:v.faExclamationTriangle})),onAdd:I,onEdit:A,onRemove:b,isErrored:!0,errorMessage:"Error Message",helperText:"Helper text",children:g||(g=(0,S.jsx)(T.TagBox.Action,{children:(0,S.jsx)(T.Button,{children:"Call to action"})}))}),m||(m=(0,S.jsx)(T.Typography.Header,{variant:"header3",children:"Positioned Label"})),(0,S.jsx)(T.TagBox,{items:e,onAdd:I,onEdit:A,onRemove:b,labelPosition:"left",label:"Text Label",helperText:"Helper text",children:h||(h=(0,S.jsx)(T.TagBox.Action,{children:(0,S.jsx)(T.Button,{children:"Call to action"})}))}),x||(x=(0,S.jsx)(T.Typography.Header,{variant:"header3",children:"No Action"})),(0,S.jsx)(T.TagBox,{label:"Text Label",items:e,onAdd:I,onEdit:A,onRemove:b,helperText:"Helper text"}),p||(p=(0,S.jsx)(T.Typography.Header,{variant:"header3",children:"No Helper text and Action"})),(0,S.jsx)(T.TagBox,{label:"Text Label",items:e,onAdd:I,onEdit:A,onRemove:b})]})}},M={"components/common/ComponentLinkHeader.tsx":A.Z};function C(){return(0,S.jsx)(b.Z,(0,f.Z)({},u))}},55722:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/tag-box",function(){return e(69947)}])}},function(n){n.O(0,[4308,7633,6471,9102,4706,9774,2888,179],function(){return n(n.s=55722)}),_N_E=n.O()}]);