(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8114],{52638:function(e,n,o){"use strict";o.r(n),o.d(n,{default:function(){return q}});var t,i,c,r,l,a,s,d,p,u,m,f,h,g,S,y,v,b={};o.r(b),o.d(b,{demoComponents:function(){return L},demos:function(){return D},docs:function(){return H},srcComponents:function(){return _}});var A=o(26098),w=o(3072),x=o(15393),C=o(64006),k=o(44194),T=o.t(k,2),B=o(50537),E=o.n(B),j=o(31549),R=["#475569","#ea580c","#059669","var(--cdg-color-cdgBlue)","#0891b2","#7c3aed","#e11d48"],H={description:"A component that requires user to swipe to confirm an action. Use for important actions, such as purchase order, privacy setting changes, delete something, etc.",location:"/docs/data/components/slide-action/slide-action.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Slide Action | Swiper</h1><p class="description">A component that requires user to swipe to confirm an action. Use for important actions, such as purchase order, privacy setting changes, delete something, etc.\n</p>\n\n\n<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>SlideAction<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="basic">Basic<a aria-labelledby="basic" class="anchor-link" href="#basic" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>When users swiped all the way to the end, we can call it a successful or confirmatory action.</p>\n',{demo:"SlideAction.tsx"},'<h3 id="interactive">Interactive<a aria-labelledby="interactive" class="anchor-link" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SlideActionInteractive.tsx"},'<h2 id="reset">Reset<a aria-labelledby="reset" class="anchor-link" href="#reset" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>How to reset the component state?</p>\n',{demo:"SlideActionReset.tsx"},'<h2 id="effects">Effects<a aria-labelledby="effects" class="anchor-link" href="#effects" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"SlideEffect.tsx"},'<h2 id="icon">Icon<a aria-labelledby="icon" class="anchor-link" href="#icon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"SlideActionIcon.tsx"},'<h2 id="color">Color<a aria-labelledby="color" class="anchor-link" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"SlideColorful.tsx"},'<h2 id="compact">Compact<a aria-labelledby="compact" class="anchor-link" href="#compact" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"SlideCompact.tsx"},'<h2 id="allowswipeafterend">allowSwipeAfterEnd<a aria-labelledby="allowswipeafterend" class="anchor-link" href="#allowswipeafterend" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Avoid enabling this flag as much as possible. If you wanna reset the component state, see the <a href="#reset">Reset section</a>.</p>\n<h4>⚠️ Accessibility considerations: Act unintentionally</h4><p>Since an action is a successful action when users dragged/swiped this component all the way to the end.</p>\n<p>On that state, if users tap &amp; release without swiping, this component will assume that it is an successful or confirmatory action. As a result, <code>onSwipeEnd</code> will be triggered.</p>\n',{demo:"SlideActionAvoidBehavior.tsx"},'<h2 id="component-props">Component Props<a aria-labelledby="component-props" class="anchor-link" href="#component-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>children</code></td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">—</td>\n<td align="left">Will be consider as a label</td>\n</tr>\n<tr>\n<td align="left"><code>css</code></td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left">The system prop that allows defining system overrides as well as additional CSS styles</td>\n</tr>\n<tr>\n<td align="left"><code>icon</code></td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">Double arrow right</td>\n<td align="left">Icon for the swiper</td>\n</tr>\n<tr>\n<td align="left"><code>color</code></td>\n<td align="left"><code>string</code></td>\n<td align="left"><code>--cdg-color-cdgBlue</code> - <code>#0142AF</code></td>\n<td align="left">Component theme color.<br/><small>Includes label, slide background, border and the dragger color</small></td>\n</tr>\n<tr>\n<td align="left"><code>label</code></td>\n<td align="left"><code>string</code></td>\n<td align="left"><code>&#39;Slide&#39;</code></td>\n<td align="left">Label</td>\n</tr>\n<tr>\n<td align="left"><code>labelType</code></td>\n<td align="left"><code>&#39;default&#39;</code> | <code>&#39;slide&#39;</code></td>\n<td align="left"><code>&#39;default&#39;</code></td>\n<td align="left">Label effect</td>\n</tr>\n<tr>\n<td align="left"><code>slideType</code></td>\n<td align="left"><code>&#39;static&#39;</code> | <code>&#39;slide&#39;</code></td>\n<td align="left"><code>&#39;slide&#39;</code></td>\n<td align="left">The left behind background color&#39;s effect</td>\n</tr>\n<tr>\n<td align="left"><code>onSwipeEnd</code></td>\n<td align="left"><code>(reset: () =&gt; void) =&gt; void</code></td>\n<td align="left">—</td>\n<td align="left">Trigger when users swiped all the way to the end.<br/><small>Call the <code>reset()</code> function to reset the component status</small></td>\n</tr>\n<tr>\n<td align="left"><code>onChange</code></td>\n<td align="left"><code>(isSuccess: boolean) =&gt; void</code></td>\n<td align="left">—</td>\n<td align="left">Trigger when component&#39;s status changes</td>\n</tr>\n<tr>\n<td align="left"><code>compact</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">Compact size</td>\n</tr>\n<tr>\n<td align="left"><code>allowSwipeAfterEnd</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">See the <a href="#allowswipeafterend">allowSwipeAfterEnd section</a> above</td>\n</tr>\n</tbody></table>\n<h2 id="other-types">Other Types<a aria-labelledby="other-types" class="anchor-link" href="#other-types" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>SlideActionOnSwipeEnd</code></td>\n<td align="left"><code>(reset: () =&gt; void) =&gt; void</code></td>\n<td align="left">Type of <code>onSwipeEnd</code> callback</td>\n</tr>\n<tr>\n<td align="left"><code>SlideActionOnChange</code></td>\n<td align="left"><code>(isSuccess: boolean) =&gt; void</code></td>\n<td align="left">Type of <code>onChange</code> callback</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Basic",level:2,hash:"basic",children:[{text:"Interactive",level:3,hash:"interactive"}]},{text:"Reset",level:2,hash:"reset",children:[]},{text:"Effects",level:2,hash:"effects",children:[]},{text:"Icon",level:2,hash:"icon",children:[]},{text:"Color",level:2,hash:"color",children:[]},{text:"Compact",level:2,hash:"compact",children:[]},{text:"allowSwipeAfterEnd",level:2,hash:"allowswipeafterend",children:[]},{text:"Component Props",level:2,hash:"component-props",children:[]},{text:"Other Types",level:2,hash:"other-types",children:[]}],title:"React Slide Action component",headers:{title:"React Slide Action component",components:["Slide Action"],hooks:[]}},D={"SlideAction.tsx":{module:"./SlideAction.tsx",raw:"import {SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderActionDocs() {\n  return (\n    <SlideAction\n      label='Swipe to confirm'\n      onSwipeEnd={() => {\n        // do sth when users swiped to the end, e.g. call API, mutation data, etc...\n      }}\n    />\n  )\n}\n",jsxPreview:"import {SlideAction} from '@comfortdelgro/react-compass'\n\n<SlideAction\n  onSwipeEnd={() => {\n    // handle confirmation logic\n  }}\n/>\n",moduleTS:"./SlideAction.tsx",rawTS:"import {SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderActionDocs() {\n  return (\n    <SlideAction\n      label='Swipe to confirm'\n      onSwipeEnd={() => {\n        // do sth when users swiped to the end, e.g. call API, mutation data, etc...\n      }}\n    />\n  )\n}\n"},"SlideActionInteractive.tsx":{module:"./SlideActionInteractive.tsx",raw:"import CheckIcon from '@comfortdelgro/compass-icons/react/tick'\nimport {\n  SlideAction,\n  Typography,\n  type SlideActionOnSwipeEnd,\n} from '@comfortdelgro/react-compass'\nimport {useCallback, useState} from 'react'\n\nexport default function SliderActionInteractiveDocs() {\n  const [status, setStatus] = useState(false)\n\n  const handleOnSwipeEnd = useCallback<SlideActionOnSwipeEnd>((reset) => {\n    // do sth when users swiped to the end, e.g. call API, mutation data, etc...\n\n    setTimeout(() => {\n      reset()\n    }, 1000)\n  }, [])\n\n  return (\n    <>\n      <SlideAction\n        label='Swipe to confirm'\n        color={status ? '--cdg-color-success' : undefined}\n        icon={\n          status ? <CheckIcon color='#fff' width={20} height={20} /> : undefined\n        }\n        onChange={setStatus}\n        onSwipeEnd={handleOnSwipeEnd}\n      />\n\n      <Typography.Body variant='body3' style={{marginTop: '1rem'}}>\n        Status:{' '}\n        {status ? (\n          <strong style={{color: 'var(--cdg-color-success)'}}>\n            Confirmed!\n          </strong>\n        ) : (\n          'Waiting for confirmation'\n        )}\n      </Typography.Body>\n    </>\n  )\n}\n",jsxPreview:"import {SlideAction} from '@comfortdelgro/react-compass'\n\n<SlideAction\n  onChange={(isConfirmed) => {\n    // trigger on status of SlideAction change (from unconfirmed to confirmed and vice versa).\n  }}\n  onSwipeEnd={(reset) => {\n    // handle confirmation logic\n  }}\n/>\n",moduleTS:"./SlideActionInteractive.tsx",rawTS:"import CheckIcon from '@comfortdelgro/compass-icons/react/tick'\nimport {\n  SlideAction,\n  Typography,\n  type SlideActionOnSwipeEnd,\n} from '@comfortdelgro/react-compass'\nimport {useCallback, useState} from 'react'\n\nexport default function SliderActionInteractiveDocs() {\n  const [status, setStatus] = useState(false)\n\n  const handleOnSwipeEnd = useCallback<SlideActionOnSwipeEnd>((reset) => {\n    // do sth when users swiped to the end, e.g. call API, mutation data, etc...\n\n    setTimeout(() => {\n      reset()\n    }, 1000)\n  }, [])\n\n  return (\n    <>\n      <SlideAction\n        label='Swipe to confirm'\n        color={status ? '--cdg-color-success' : undefined}\n        icon={\n          status ? <CheckIcon color='#fff' width={20} height={20} /> : undefined\n        }\n        onChange={setStatus}\n        onSwipeEnd={handleOnSwipeEnd}\n      />\n\n      <Typography.Body variant='body3' style={{marginTop: '1rem'}}>\n        Status:{' '}\n        {status ? (\n          <strong style={{color: 'var(--cdg-color-success)'}}>\n            Confirmed!\n          </strong>\n        ) : (\n          'Waiting for confirmation'\n        )}\n      </Typography.Body>\n    </>\n  )\n}\n"},"SlideActionReset.tsx":{module:"./SlideActionReset.tsx",raw:"import {\n  Button,\n  SlideAction,\n  Typography,\n  type SlideActionOnSwipeEnd,\n  type SlideActionRef,\n} from '@comfortdelgro/react-compass'\nimport {useCallback, useRef} from 'react'\nimport classes from './styles/slide-action-document.module.css'\n\nexport default function SlideActionResetDocs() {\n  const lastSlideRef = useRef<SlideActionRef>(null)\n  const handleOnSwipeEnd = useCallback<SlideActionOnSwipeEnd>((reset) => {\n    // do sth when users swiped to the end\n    setTimeout(() => {\n      reset()\n    }, 1000)\n  }, [])\n\n  return (\n    <div className={classes.exampleContainer}>\n      <Typography.Body variant='body2'>\n        1. Call <code>reset</code> function that <code>onSwipeEnd</code>{' '}\n        callback provided.\n      </Typography.Body>\n      <SlideAction\n        label='Reset 1s after confirmation'\n        onSwipeEnd={handleOnSwipeEnd}\n      />\n\n      <Typography.Body variant='body2'>\n        2. Call <code>resetState</code> function from component ref.\n      </Typography.Body>\n      <Button\n        variant='danger'\n        type='button'\n        onClick={() => lastSlideRef.current?.resetState()}\n        style={{marginBottom: '1rem'}}\n      >\n        Reset below SlideAction\n      </Button>\n      <SlideAction ref={lastSlideRef}>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit\n      </SlideAction>\n    </div>\n  )\n}\n",jsxPreview:"import {SlideAction} from '@comfortdelgro/react-compass'\n\n<SlideAction\n  onSwipeEnd={async (reset) => {\n    await doStuff()\n    reset()\n  }}\n/>",moduleTS:"./SlideActionReset.tsx",rawTS:"import {\n  Button,\n  SlideAction,\n  Typography,\n  type SlideActionOnSwipeEnd,\n  type SlideActionRef,\n} from '@comfortdelgro/react-compass'\nimport {useCallback, useRef} from 'react'\nimport classes from './styles/slide-action-document.module.css'\n\nexport default function SlideActionResetDocs() {\n  const lastSlideRef = useRef<SlideActionRef>(null)\n  const handleOnSwipeEnd = useCallback<SlideActionOnSwipeEnd>((reset) => {\n    // do sth when users swiped to the end\n    setTimeout(() => {\n      reset()\n    }, 1000)\n  }, [])\n\n  return (\n    <div className={classes.exampleContainer}>\n      <Typography.Body variant='body2'>\n        1. Call <code>reset</code> function that <code>onSwipeEnd</code>{' '}\n        callback provided.\n      </Typography.Body>\n      <SlideAction\n        label='Reset 1s after confirmation'\n        onSwipeEnd={handleOnSwipeEnd}\n      />\n\n      <Typography.Body variant='body2'>\n        2. Call <code>resetState</code> function from component ref.\n      </Typography.Body>\n      <Button\n        variant='danger'\n        type='button'\n        onClick={() => lastSlideRef.current?.resetState()}\n        style={{marginBottom: '1rem'}}\n      >\n        Reset below SlideAction\n      </Button>\n      <SlideAction ref={lastSlideRef}>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit\n      </SlideAction>\n    </div>\n  )\n}\n"},"SlideEffect.tsx":{module:"./SlideEffect.tsx",raw:"import {Column, SlideAction, Typography} from '@comfortdelgro/react-compass'\n\nexport default function SliderEffectDocs() {\n  return (\n    <Column>\n      <Typography.Header variant='header4'>Slide effect</Typography.Header>\n      <SlideAction color='#475569'>Default: Slide background</SlideAction>\n\n      <SlideAction css={{marginBlock: 'var(--cdg-spacing-4)'}} color='#475569' slideType='static'>\n        Static fade-in background\n      </SlideAction>\n\n      <Typography.Header variant='header4'>Label effect</Typography.Header>\n      <SlideAction color='#475569' labelType='slide'>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia,\n        temporibus voluptatibus! Dolorum tenetur in distinctio quaerat, hic a\n        soluta, veniam ut id porro adipisci molestias cumque perspiciatis\n        asperiores facilis voluptatem.\n      </SlideAction>\n    </Column>\n  )\n}\n",jsxPreview:"<SlideAction />\n<SlideAction slideType='static' />\n<SlideAction labelType='slide' />",moduleTS:"./SlideEffect.tsx",rawTS:"import {Column, SlideAction, Typography} from '@comfortdelgro/react-compass'\n\nexport default function SliderEffectDocs() {\n  return (\n    <Column>\n      <Typography.Header variant='header4'>Slide effect</Typography.Header>\n      <SlideAction color='#475569'>Default: Slide background</SlideAction>\n\n      <SlideAction css={{marginBlock: 'var(--cdg-spacing-4)'}} color='#475569' slideType='static'>\n        Static fade-in background\n      </SlideAction>\n\n      <Typography.Header variant='header4'>Label effect</Typography.Header>\n      <SlideAction color='#475569' labelType='slide'>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia,\n        temporibus voluptatibus! Dolorum tenetur in distinctio quaerat, hic a\n        soluta, veniam ut id porro adipisci molestias cumque perspiciatis\n        asperiores facilis voluptatem.\n      </SlideAction>\n    </Column>\n  )\n}\n"},"SlideActionIcon.tsx":{module:"./SlideActionIcon.tsx",raw:"import {SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderActionIconDocs() {\n  return (\n    <SlideAction\n      style={{\n        border: 'none',\n        backgroundColor: 'rgba(61, 127, 118, 0.5)',\n      }}\n      color='#fff'\n      icon={\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          color='red'\n          width='24'\n          height='24'\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='currentColor'\n          strokeWidth='2'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          style={{cursor: 'inherit'}}\n        >\n          <path stroke='none' d='M0 0h24v24H0z' fill='none' />\n          <path d='M7 6a7.75 7.75 0 1 0 10 0' />\n          <path d='M12 4l0 8' />\n        </svg>\n      }\n      labelType='slide'\n    >\n      Slide to power off\n    </SlideAction>\n  )\n}\n",jsxPreview:"<SlideAction icon={<Icon />} />",moduleTS:"./SlideActionIcon.tsx",rawTS:"import {SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderActionIconDocs() {\n  return (\n    <SlideAction\n      style={{\n        border: 'none',\n        backgroundColor: 'rgba(61, 127, 118, 0.5)',\n      }}\n      color='#fff'\n      icon={\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          color='red'\n          width='24'\n          height='24'\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='currentColor'\n          strokeWidth='2'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          style={{cursor: 'inherit'}}\n        >\n          <path stroke='none' d='M0 0h24v24H0z' fill='none' />\n          <path d='M7 6a7.75 7.75 0 1 0 10 0' />\n          <path d='M12 4l0 8' />\n        </svg>\n      }\n      labelType='slide'\n    >\n      Slide to power off\n    </SlideAction>\n  )\n}\n"},"SlideColorful.tsx":{module:"./SlideColorful.tsx",raw:"import {\n  Column,\n  Divider,\n  SlideAction,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\nimport classes from './styles/slide-action-document.module.css'\n\n// Slate, Orange, Emerald, CdgBlue, Cyan, Violet, Rose\nconst slideColors = [\n  '#475569',\n  '#ea580c',\n  '#059669',\n  'var(--cdg-color-cdgBlue)',\n  '#0891b2',\n  '#7c3aed',\n  '#e11d48',\n]\n\nexport default function SliderColorfulDocs() {\n  const [themeColor, setThemeColor] = useState(slideColors[0])\n\n  return (\n    <Column className={classes.exampleContainer}>\n      <Typography.Header variant='header4'>Theme color</Typography.Header>\n      <Typography.Body variant='body2'>\n        You can use the <code>color</code> prop to change the theme color.\n        <br />\n        <small>\n          Default color: &nbsp;\n          <code style={{color: '#0142AF'}}>--cdg-color-cdgBlue #0142AF</code>\n        </small>\n      </Typography.Body>\n      <SlideAction color='--cdg-color-success' style={{marginBlock: '1rem'}}>\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Cumque enim\n        sint labore nesciunt\n      </SlideAction>\n\n      <Divider />\n\n      <Typography.Header variant='header4'>More colors \uD83C\uDFA8</Typography.Header>\n      <div className={classes.colorPickerWrapper}>\n        {slideColors.map((color) => (\n          <button\n            key={color}\n            title={color}\n            className={classes.colorPickerBtn}\n            onClick={() => setThemeColor(color)}\n            style={{backgroundColor: color}}\n          />\n        ))}\n\n        <button\n          className={classes.colorPickerBtn}\n          style={{\n            background:\n              'linear-gradient(to right top, #fff6f2, #ffd4c1, #ffb194, #f98d6b, #f16645, #dc5135, #c63a26, #b12118, #8d2318, #6a2117, #481d15, #281713)',\n          }}\n          onClick={() =>\n            setThemeColor(\n              `#${Math.floor(Math.random() * 0xffffff)\n                .toString(16)\n                .padStart(6, '0')}`,\n            )\n          }\n        >\n          Random\n        </button>\n      </div>\n\n      <SlideAction color={themeColor}>Slide background</SlideAction>\n\n      <SlideAction\n        color={themeColor}\n        slideType='static'\n        style={{marginBlock: '1rem'}}\n      >\n        Fadein background\n      </SlideAction>\n\n      <SlideAction labelType='slide' color={themeColor}>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa non\n        ipsum, pariatur in eveniet neque dolores sequi, numquam aspernatur\n        ratione veritatis nemo earum maxime aut distinctio repellat dolorum ipsa\n        deleniti!\n      </SlideAction>\n\n      <Divider css={{marginBlock: 'var(--cdg-spacing-4)'}} />\n\n      <Typography.Header variant='header4'>\n        Gradient slide background\n      </Typography.Header>\n      <SlideAction className={classes.slideActionGradient}>\n        Slide to see bg color change\n      </SlideAction>\n    </Column>\n  )\n}\n",jsxPreview:"<SlideAction color='--cdg-color-cdgBlue' />\n",moduleTS:"./SlideColorful.tsx",rawTS:"import {\n  Column,\n  Divider,\n  SlideAction,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\nimport classes from './styles/slide-action-document.module.css'\n\n// Slate, Orange, Emerald, CdgBlue, Cyan, Violet, Rose\nconst slideColors = [\n  '#475569',\n  '#ea580c',\n  '#059669',\n  'var(--cdg-color-cdgBlue)',\n  '#0891b2',\n  '#7c3aed',\n  '#e11d48',\n]\n\nexport default function SliderColorfulDocs() {\n  const [themeColor, setThemeColor] = useState(slideColors[0])\n\n  return (\n    <Column className={classes.exampleContainer}>\n      <Typography.Header variant='header4'>Theme color</Typography.Header>\n      <Typography.Body variant='body2'>\n        You can use the <code>color</code> prop to change the theme color.\n        <br />\n        <small>\n          Default color: &nbsp;\n          <code style={{color: '#0142AF'}}>--cdg-color-cdgBlue #0142AF</code>\n        </small>\n      </Typography.Body>\n      <SlideAction color='--cdg-color-success' style={{marginBlock: '1rem'}}>\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Cumque enim\n        sint labore nesciunt\n      </SlideAction>\n\n      <Divider />\n\n      <Typography.Header variant='header4'>More colors \uD83C\uDFA8</Typography.Header>\n      <div className={classes.colorPickerWrapper}>\n        {slideColors.map((color) => (\n          <button\n            key={color}\n            title={color}\n            className={classes.colorPickerBtn}\n            onClick={() => setThemeColor(color)}\n            style={{backgroundColor: color}}\n          />\n        ))}\n\n        <button\n          className={classes.colorPickerBtn}\n          style={{\n            background:\n              'linear-gradient(to right top, #fff6f2, #ffd4c1, #ffb194, #f98d6b, #f16645, #dc5135, #c63a26, #b12118, #8d2318, #6a2117, #481d15, #281713)',\n          }}\n          onClick={() =>\n            setThemeColor(\n              `#${Math.floor(Math.random() * 0xffffff)\n                .toString(16)\n                .padStart(6, '0')}`,\n            )\n          }\n        >\n          Random\n        </button>\n      </div>\n\n      <SlideAction color={themeColor}>Slide background</SlideAction>\n\n      <SlideAction\n        color={themeColor}\n        slideType='static'\n        style={{marginBlock: '1rem'}}\n      >\n        Fadein background\n      </SlideAction>\n\n      <SlideAction labelType='slide' color={themeColor}>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa non\n        ipsum, pariatur in eveniet neque dolores sequi, numquam aspernatur\n        ratione veritatis nemo earum maxime aut distinctio repellat dolorum ipsa\n        deleniti!\n      </SlideAction>\n\n      <Divider css={{marginBlock: 'var(--cdg-spacing-4)'}} />\n\n      <Typography.Header variant='header4'>\n        Gradient slide background\n      </Typography.Header>\n      <SlideAction className={classes.slideActionGradient}>\n        Slide to see bg color change\n      </SlideAction>\n    </Column>\n  )\n}\n"},"SlideCompact.tsx":{module:"./SlideCompact.tsx",raw:"import {Column, SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderCompactDocs() {\n  return (\n    <Column>\n      <SlideAction compact>\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Reiciendis ab,\n        dicta consequatur harum iusto cumque, sunt quia dolor, adipisci commodi\n        repellendus perferendis iste. Soluta placeat dolores reiciendis\n        distinctio temporibus nisi!\n      </SlideAction>\n    </Column>\n  )\n}\n",jsxPreview:"<SlideAction compact />\n",moduleTS:"./SlideCompact.tsx",rawTS:"import {Column, SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderCompactDocs() {\n  return (\n    <Column>\n      <SlideAction compact>\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Reiciendis ab,\n        dicta consequatur harum iusto cumque, sunt quia dolor, adipisci commodi\n        repellendus perferendis iste. Soluta placeat dolores reiciendis\n        distinctio temporibus nisi!\n      </SlideAction>\n    </Column>\n  )\n}\n"},"SlideActionAvoidBehavior.tsx":{module:"./SlideActionAvoidBehavior.tsx",raw:"import {SlideAction, Typography} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function SliderActionAvoidBehaviorDocs() {\n  const [countSuccess, setCountSuccess] = useState(0)\n\n  return (\n    <>\n      <Typography.Body variant='body3' style={{marginBottom: 'var(--cdg-spacing-4)'}}>\n        Successful / confirmatory action count:{' '}\n        <strong>{`${countSuccess}`}</strong>\n      </Typography.Body>\n\n      <SlideAction\n        color='#475569'\n        allowSwipeAfterEnd\n        onSwipeEnd={() => setCountSuccess(countSuccess + 1)}\n      >\n        Can swipe after success\n      </SlideAction>\n    </>\n  )\n}\n",jsxPreview:"<SlideAction allowSwipeAfterEnd />\n",moduleTS:"./SlideActionAvoidBehavior.tsx",rawTS:"import {SlideAction, Typography} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function SliderActionAvoidBehaviorDocs() {\n  const [countSuccess, setCountSuccess] = useState(0)\n\n  return (\n    <>\n      <Typography.Body variant='body3' style={{marginBottom: 'var(--cdg-spacing-4)'}}>\n        Successful / confirmatory action count:{' '}\n        <strong>{`${countSuccess}`}</strong>\n      </Typography.Body>\n\n      <SlideAction\n        color='#475569'\n        allowSwipeAfterEnd\n        onSwipeEnd={() => setCountSuccess(countSuccess + 1)}\n      >\n        Can swipe after success\n      </SlideAction>\n    </>\n  )\n}\n"}};D.scope={process:{},import:{"@comfortdelgro/react-compass":x,"@comfortdelgro/compass-icons/react/tick":C,react:T,"./styles/slide-action-document.module.css":B}};var L={"./SlideAction.tsx":function(){return(0,j.jsx)(x.SlideAction,{label:"Swipe to confirm",onSwipeEnd:function(){}})},"./SlideActionInteractive.tsx":function(){var e=(0,k.useState)(!1),n=e[0],o=e[1],i=(0,k.useCallback)(function(e){setTimeout(function(){e()},1e3)},[]);return(0,j.jsxs)(j.Fragment,{children:[(0,j.jsx)(x.SlideAction,{label:"Swipe to confirm",color:n?"--cdg-color-success":void 0,icon:n?t||(t=(0,j.jsx)(C.default,{color:"#fff",width:20,height:20})):void 0,onChange:o,onSwipeEnd:i}),(0,j.jsxs)(x.Typography.Body,{variant:"body3",style:{marginTop:"1rem"},children:["Status:"," ",n?(0,j.jsx)("strong",{style:{color:"var(--cdg-color-success)"},children:"Confirmed!"}):"Waiting for confirmation"]})]})},"./SlideActionReset.tsx":function(){var e=(0,k.useRef)(null),n=(0,k.useCallback)(function(e){setTimeout(function(){e()},1e3)},[]);return(0,j.jsxs)("div",{className:E().exampleContainer,children:[i||(i=(0,j.jsxs)(x.Typography.Body,{variant:"body2",children:["1. Call ",(0,j.jsx)("code",{children:"reset"})," function that ",(0,j.jsx)("code",{children:"onSwipeEnd"})," ","callback provided."]})),(0,j.jsx)(x.SlideAction,{label:"Reset 1s after confirmation",onSwipeEnd:n}),c||(c=(0,j.jsxs)(x.Typography.Body,{variant:"body2",children:["2. Call ",(0,j.jsx)("code",{children:"resetState"})," function from component ref."]})),(0,j.jsx)(x.Button,{variant:"danger",type:"button",onClick:function(){var n;return null===(n=e.current)||void 0===n?void 0:n.resetState()},style:{marginBottom:"1rem"},children:"Reset below SlideAction"}),(0,j.jsx)(x.SlideAction,{ref:e,children:"Lorem ipsum dolor sit amet consectetur adipisicing elit"})]})},"./SlideEffect.tsx":function(){return(0,j.jsxs)(x.Column,{children:[r||(r=(0,j.jsx)(x.Typography.Header,{variant:"header4",children:"Slide effect"})),l||(l=(0,j.jsx)(x.SlideAction,{color:"#475569",children:"Default: Slide background"})),(0,j.jsx)(x.SlideAction,{css:{marginBlock:"var(--cdg-spacing-4)"},color:"#475569",slideType:"static",children:"Static fade-in background"}),a||(a=(0,j.jsx)(x.Typography.Header,{variant:"header4",children:"Label effect"})),s||(s=(0,j.jsx)(x.SlideAction,{color:"#475569",labelType:"slide",children:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia, temporibus voluptatibus! Dolorum tenetur in distinctio quaerat, hic a soluta, veniam ut id porro adipisci molestias cumque perspiciatis asperiores facilis voluptatem."}))]})},"./SlideActionIcon.tsx":function(){return(0,j.jsx)(x.SlideAction,{style:{border:"none",backgroundColor:"rgba(61, 127, 118, 0.5)"},color:"#fff",icon:(0,j.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",color:"red",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",style:{cursor:"inherit"},children:[d||(d=(0,j.jsx)("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"})),p||(p=(0,j.jsx)("path",{d:"M7 6a7.75 7.75 0 1 0 10 0"})),u||(u=(0,j.jsx)("path",{d:"M12 4l0 8"}))]}),labelType:"slide",children:"Slide to power off"})},"./SlideColorful.tsx":function(){var e=(0,k.useState)(R[0]),n=e[0],o=e[1];return(0,j.jsxs)(x.Column,{className:E().exampleContainer,children:[m||(m=(0,j.jsx)(x.Typography.Header,{variant:"header4",children:"Theme color"})),(0,j.jsxs)(x.Typography.Body,{variant:"body2",children:["You can use the ",f||(f=(0,j.jsx)("code",{children:"color"}))," prop to change the theme color.",h||(h=(0,j.jsx)("br",{})),(0,j.jsxs)("small",{children:["Default color: \xa0",(0,j.jsx)("code",{style:{color:"#0142AF"},children:"--cdg-color-cdgBlue #0142AF"})]})]}),(0,j.jsx)(x.SlideAction,{color:"--cdg-color-success",style:{marginBlock:"1rem"},children:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Cumque enim sint labore nesciunt"}),g||(g=(0,j.jsx)(x.Divider,{})),S||(S=(0,j.jsx)(x.Typography.Header,{variant:"header4",children:"More colors \uD83C\uDFA8"})),(0,j.jsxs)("div",{className:E().colorPickerWrapper,children:[R.map(function(e){return(0,j.jsx)("button",{title:e,className:E().colorPickerBtn,onClick:function(){return o(e)},style:{backgroundColor:e}},e)}),(0,j.jsx)("button",{className:E().colorPickerBtn,style:{background:"linear-gradient(to right top, #fff6f2, #ffd4c1, #ffb194, #f98d6b, #f16645, #dc5135, #c63a26, #b12118, #8d2318, #6a2117, #481d15, #281713)"},onClick:function(){return o("#".concat(Math.floor(16777215*Math.random()).toString(16).padStart(6,"0")))},children:"Random"})]}),(0,j.jsx)(x.SlideAction,{color:n,children:"Slide background"}),(0,j.jsx)(x.SlideAction,{color:n,slideType:"static",style:{marginBlock:"1rem"},children:"Fadein background"}),(0,j.jsx)(x.SlideAction,{labelType:"slide",color:n,children:"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa non ipsum, pariatur in eveniet neque dolores sequi, numquam aspernatur ratione veritatis nemo earum maxime aut distinctio repellat dolorum ipsa deleniti!"}),(0,j.jsx)(x.Divider,{css:{marginBlock:"var(--cdg-spacing-4)"}}),y||(y=(0,j.jsx)(x.Typography.Header,{variant:"header4",children:"Gradient slide background"})),(0,j.jsx)(x.SlideAction,{className:E().slideActionGradient,children:"Slide to see bg color change"})]})},"./SlideCompact.tsx":function(){return v||(v=(0,j.jsx)(x.Column,{children:(0,j.jsx)(x.SlideAction,{compact:!0,children:"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Reiciendis ab, dicta consequatur harum iusto cumque, sunt quia dolor, adipisci commodi repellendus perferendis iste. Soluta placeat dolores reiciendis distinctio temporibus nisi!"})}))},"./SlideActionAvoidBehavior.tsx":function(){var e=(0,k.useState)(0),n=e[0],o=e[1];return(0,j.jsxs)(j.Fragment,{children:[(0,j.jsxs)(x.Typography.Body,{variant:"body3",style:{marginBottom:"var(--cdg-spacing-4)"},children:["Successful / confirmatory action count:"," ",(0,j.jsx)("strong",{children:"".concat(n)})]}),(0,j.jsx)(x.SlideAction,{color:"#475569",allowSwipeAfterEnd:!0,onSwipeEnd:function(){return o(n+1)},children:"Can swipe after success"})]})}},_={};function q(){return(0,j.jsx)(w.Z,(0,A.Z)({},b))}},12137:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/slide-action",function(){return o(52638)}])},50537:function(e){e.exports={exampleContainer:"slide-action-document_exampleContainer__0_WLp",colorPickerWrapper:"slide-action-document_colorPickerWrapper__4Ur_C",colorPickerBtn:"slide-action-document_colorPickerBtn__yr_XS",slideActionGradient:"slide-action-document_slideActionGradient___AqrN",gradientWave:"slide-action-document_gradientWave__N2ZoR"}},64006:function(e,n,o){"use strict";o.r(n);var t=o(44194);let i=(0,t.forwardRef)((e,n)=>t.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 32 32",ref:n,...e},t.createElement("g",{fill:"currentColor"},t.createElement("path",{d:"M30.0527 5.95944C30.8712 6.79287 30.8712 8.13968 30.0527 8.97311L13.2899 26.0416C12.4714 26.8751 11.1487 26.8751 10.3302 26.0416L1.94693 17.5074C1.12869 16.6739 1.12869 15.3271 1.94693 14.4937C2.7653 13.6603 4.09192 13.6603 4.91042 14.4937L11.7511 21.5145L27.093 5.95944C27.9115 5.12468 29.2342 5.12468 30.0527 5.95944Z"}))));n.default=i}},function(e){e.O(0,[508,6371,4308,3003,2089,3072,9774,2888,179],function(){return e(e.s=12137)}),_N_E=e.O()}]);