(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8114],{70052:function(e,n,o){"use strict";o.d(n,{Z:function(){return s}});var t,i,r=o(15393),c=o(16371),l=o.n(c),a=o(31549);function s(){return(0,a.jsxs)(r.Flexbox,{style:{marginBottom:"var(--cdg-spacing-4)"},children:[(0,a.jsx)(l(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:t||(t=(0,a.jsx)(r.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,a.jsx)(l(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:i||(i=(0,a.jsx)(r.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},3440:function(e,n,o){"use strict";o.r(n),o.d(n,{default:function(){return q}});var t,i,r,c,l,a,s,d,p,u,m,h,f,g,y,S,b,v={};o.r(v),o.d(v,{demoComponents:function(){return _},demos:function(){return D},docs:function(){return H},srcComponents:function(){return L}});var x=o(26098),w=o(24437),A=o(15393),C=o(44194),k=o.t(C,2),T=o(50537),B=o.n(T),j=o(31549),E=["#475569","#ea580c","#059669","var(--cdg-color-cdgBlue)","#0891b2","#7c3aed","#e11d48"],R=o(70052),H={description:"A component that requires user to swipe to confirm an action. Use for important actions, such as purchase order, privacy setting changes, delete something, etc.",location:"/docs/data/components/slide-action/slide-action.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Slide Action | Swiper</h1><p class="description">A component that requires user to swipe to confirm an action. Use for important actions, such as purchase order, privacy setting changes, delete something, etc.\n</p>\n\n',{component:"components/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>SlideAction<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="usage">Usage<a aria-labelledby="usage" class="anchor-link" href="#usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="basic">Basic<a aria-labelledby="basic" class="anchor-link" href="#basic" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SlideAction.tsx"},'<h3 id="reset">Reset<a aria-labelledby="reset" class="anchor-link" href="#reset" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>How to reset the component state?</p>\n',{demo:"SlideActionReset.tsx"},'<h3 id="effects">Effects<a aria-labelledby="effects" class="anchor-link" href="#effects" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SlideEffect.tsx"},'<h3 id="icon">Icon<a aria-labelledby="icon" class="anchor-link" href="#icon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SlideActionIcon.tsx"},'<h3 id="color">Color<a aria-labelledby="color" class="anchor-link" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SlideColorful.tsx"},'<h3 id="compact">Compact<a aria-labelledby="compact" class="anchor-link" href="#compact" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"SlideCompact.tsx"},'<h3 id="allowswipeafterend">allowSwipeAfterEnd<a aria-labelledby="allowswipeafterend" class="anchor-link" href="#allowswipeafterend" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Avoid enabling this flag as much as possible. If you wanna reset the component state, see the <a href="#reset">Reset section</a>.</p>\n<h4>⚠️ Accessibility considerations: Act unintentionally</h4><p>Since an action is a successful action when users dragged/swiped this component all the way to the end.</p>\n<p>On that state, if users tap &amp; release without swiping, this component will assume that it is an successful or confirmatory action. As a result, <code>onSwipeEnd</code> will be triggered.</p>\n',{demo:"SlideActionBehavior.tsx"},'<h2 id="component-props">Component Props<a aria-labelledby="component-props" class="anchor-link" href="#component-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>children</code></td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">—</td>\n<td align="left">Will be consider as a label</td>\n</tr>\n<tr>\n<td align="left"><code>css</code></td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left">The system prop that allows defining system overrides as well as additional CSS styles.</td>\n</tr>\n<tr>\n<td align="left"><code>icon</code></td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">Double arrow right</td>\n<td align="left">Icon for the swiper</td>\n</tr>\n<tr>\n<td align="left"><code>color</code></td>\n<td align="left"><code>string</code></td>\n<td align="left"><code>--cdg-color-cdgBlue</code> - <code>#0142AF</code></td>\n<td align="left">Component theme color.<br/><small>Includes label, slide background, border and the dragger color.</small></td>\n</tr>\n<tr>\n<td align="left"><code>label</code></td>\n<td align="left"><code>string</code></td>\n<td align="left"><code>&#39;Slide&#39;</code></td>\n<td align="left">Label</td>\n</tr>\n<tr>\n<td align="left"><code>labelType</code></td>\n<td align="left"><code>&#39;default&#39;</code> | <code>&#39;slide&#39;</code></td>\n<td align="left"><code>&#39;default&#39;</code></td>\n<td align="left">Label effect</td>\n</tr>\n<tr>\n<td align="left"><code>slideType</code></td>\n<td align="left"><code>&#39;static&#39;</code> | <code>&#39;slide&#39;</code></td>\n<td align="left"><code>&#39;slide&#39;</code></td>\n<td align="left">The left behind background color&#39;s effect</td>\n</tr>\n<tr>\n<td align="left"><code>onSwipeEnd</code></td>\n<td align="left"><code>(reset: () =&gt; void) =&gt; void</code></td>\n<td align="left">—</td>\n<td align="left">Trigger when users swiped all the way to the end.<br/><small>Call the <code>reset()</code> function to reset the component status.</small></td>\n</tr>\n<tr>\n<td align="left"><code>onChange</code></td>\n<td align="left"><code>(isSuccess: boolean) =&gt; void</code></td>\n<td align="left">—</td>\n<td align="left">Trigger when component&#39;s status changes</td>\n</tr>\n<tr>\n<td align="left"><code>compact</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">Compact size</td>\n</tr>\n<tr>\n<td align="left"><code>allowSwipeAfterEnd</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">Read the section <strong>allowSwipeAfterEnd</strong> above for detail</td>\n</tr>\n</tbody></table>\n<h2 id="other-types">Other Types<a aria-labelledby="other-types" class="anchor-link" href="#other-types" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>SlideActionOnSwipeEnd</code></td>\n<td align="left"><code>(reset: () =&gt; void) =&gt; void</code></td>\n<td align="left">Type of <code>onSwipeEnd</code> callback</td>\n</tr>\n<tr>\n<td align="left"><code>SlideActionOnChange</code></td>\n<td align="left"><code>(isSuccess: boolean) =&gt; void</code></td>\n<td align="left">Type of <code>onChange</code> callback</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Usage",level:2,hash:"usage",children:[{text:"Basic",level:3,hash:"basic"},{text:"Reset",level:3,hash:"reset"},{text:"Effects",level:3,hash:"effects"},{text:"Icon",level:3,hash:"icon"},{text:"Color",level:3,hash:"color"},{text:"Compact",level:3,hash:"compact"},{text:"allowSwipeAfterEnd",level:3,hash:"allowswipeafterend"}]},{text:"Component Props",level:2,hash:"component-props",children:[]},{text:"Other Types",level:2,hash:"other-types",children:[]}],title:"React Slide Action component",headers:{title:"React Slide Action component",components:["Slide Action"],hooks:[]}},D={"SlideActionReset.tsx":{module:"./SlideActionReset.tsx",raw:"import {\n  Button,\n  SlideAction,\n  Typography,\n  type SlideActionOnSwipeEnd,\n  type SlideActionRef,\n} from '@comfortdelgro/react-compass'\nimport {useCallback, useRef} from 'react'\nimport classes from './styles/slide-action-document.module.css'\n\nexport default function SlideActionResetDocs() {\n  const lastSlideRef = useRef<SlideActionRef>(null)\n  const handleOnSwipeEnd = useCallback<SlideActionOnSwipeEnd>((reset) => {\n    // do sth when users swiped to the end\n    setTimeout(() => {\n      reset()\n    }, 1000)\n  }, [])\n\n  return (\n    <div className={classes.exampleContainer}>\n      <Typography.Body variant='body2'>\n        1. Call <code>reset</code> function that <code>onSwipeEnd</code>{' '}\n        callback provided.\n      </Typography.Body>\n      <SlideAction\n        label='Reset 1s after confirmation'\n        onSwipeEnd={handleOnSwipeEnd}\n      />\n\n      <Typography.Body variant='body2'>\n        2. Call <code>resetState</code> function from component ref.\n      </Typography.Body>\n      <Button\n        variant='danger'\n        type='button'\n        onClick={() => lastSlideRef.current?.resetState()}\n        style={{marginBottom: '1rem'}}\n      >\n        Reset below SlideAction\n      </Button>\n      <SlideAction ref={lastSlideRef}>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit\n      </SlideAction>\n    </div>\n  )\n}\n",jsxPreview:"import {SlideAction} from '@comfortdelgro/react-compass'\n\n<SlideAction\n  onSwipeEnd={async (reset) => {\n    await doStuff()\n    reset()\n  }}\n/>",moduleTS:"./SlideActionReset.tsx",rawTS:"import {\n  Button,\n  SlideAction,\n  Typography,\n  type SlideActionOnSwipeEnd,\n  type SlideActionRef,\n} from '@comfortdelgro/react-compass'\nimport {useCallback, useRef} from 'react'\nimport classes from './styles/slide-action-document.module.css'\n\nexport default function SlideActionResetDocs() {\n  const lastSlideRef = useRef<SlideActionRef>(null)\n  const handleOnSwipeEnd = useCallback<SlideActionOnSwipeEnd>((reset) => {\n    // do sth when users swiped to the end\n    setTimeout(() => {\n      reset()\n    }, 1000)\n  }, [])\n\n  return (\n    <div className={classes.exampleContainer}>\n      <Typography.Body variant='body2'>\n        1. Call <code>reset</code> function that <code>onSwipeEnd</code>{' '}\n        callback provided.\n      </Typography.Body>\n      <SlideAction\n        label='Reset 1s after confirmation'\n        onSwipeEnd={handleOnSwipeEnd}\n      />\n\n      <Typography.Body variant='body2'>\n        2. Call <code>resetState</code> function from component ref.\n      </Typography.Body>\n      <Button\n        variant='danger'\n        type='button'\n        onClick={() => lastSlideRef.current?.resetState()}\n        style={{marginBottom: '1rem'}}\n      >\n        Reset below SlideAction\n      </Button>\n      <SlideAction ref={lastSlideRef}>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit\n      </SlideAction>\n    </div>\n  )\n}\n"},"SlideAction.tsx":{module:"./SlideAction.tsx",raw:"import {Column, SlideAction, Typography} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function SliderActionDocs() {\n  const [status, setStatus] = useState(false)\n\n  return (\n    <Column>\n      <Typography.Body variant='body2'>\n        When users swiped all the way to the end, we can call it a successful or\n        confirmatory action.\n      </Typography.Body>\n\n      <SlideAction\n        label='Swipe to confirm'\n        onSwipeEnd={() => {\n          // do sth when users swiped to the end, e.g. call API, mutation data, etc...\n          setStatus(true)\n        }}\n      />\n\n      <Typography.Body variant='body3'>\n        Status:{' '}\n        {status ? (\n          <strong style={{color: 'var(--cdg-color-success)'}}>\n            Confirmed! \n          </strong>\n        ) : (\n          'Waiting for confirmation'\n        )}\n      </Typography.Body>\n    </Column>\n  )\n}\n",jsxPreview:"import {SlideAction} from '@comfortdelgro/react-compass'\n\n<SlideAction\n  onSwipeEnd={() => {\n    // handle confirmation logic\n  }}\n/>\n",moduleTS:"./SlideAction.tsx",rawTS:"import {Column, SlideAction, Typography} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function SliderActionDocs() {\n  const [status, setStatus] = useState(false)\n\n  return (\n    <Column>\n      <Typography.Body variant='body2'>\n        When users swiped all the way to the end, we can call it a successful or\n        confirmatory action.\n      </Typography.Body>\n\n      <SlideAction\n        label='Swipe to confirm'\n        onSwipeEnd={() => {\n          // do sth when users swiped to the end, e.g. call API, mutation data, etc...\n          setStatus(true)\n        }}\n      />\n\n      <Typography.Body variant='body3'>\n        Status:{' '}\n        {status ? (\n          <strong style={{color: 'var(--cdg-color-success)'}}>\n            Confirmed! \n          </strong>\n        ) : (\n          'Waiting for confirmation'\n        )}\n      </Typography.Body>\n    </Column>\n  )\n}\n"},"SlideEffect.tsx":{module:"./SlideEffect.tsx",raw:"import {Column, SlideAction, Typography} from '@comfortdelgro/react-compass'\n\nexport default function SliderEffectDocs() {\n  return (\n    <Column>\n      <Typography.Header variant='header4'>Slide effect</Typography.Header>\n      <SlideAction color='#475569'>Default: Slide background</SlideAction>\n\n      <SlideAction css={{marginBlock: 'var(--cdg-spacing-4)'}} color='#475569' slideType='static'>\n        Static fade-in background\n      </SlideAction>\n\n      <Typography.Header variant='header4'>Label effect</Typography.Header>\n      <SlideAction color='#475569' labelType='slide'>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia,\n        temporibus voluptatibus! Dolorum tenetur in distinctio quaerat, hic a\n        soluta, veniam ut id porro adipisci molestias cumque perspiciatis\n        asperiores facilis voluptatem.\n      </SlideAction>\n    </Column>\n  )\n}\n",jsxPreview:"<SlideAction />\n<SlideAction slideType='static' />\n<SlideAction labelType='slide' />",moduleTS:"./SlideEffect.tsx",rawTS:"import {Column, SlideAction, Typography} from '@comfortdelgro/react-compass'\n\nexport default function SliderEffectDocs() {\n  return (\n    <Column>\n      <Typography.Header variant='header4'>Slide effect</Typography.Header>\n      <SlideAction color='#475569'>Default: Slide background</SlideAction>\n\n      <SlideAction css={{marginBlock: 'var(--cdg-spacing-4)'}} color='#475569' slideType='static'>\n        Static fade-in background\n      </SlideAction>\n\n      <Typography.Header variant='header4'>Label effect</Typography.Header>\n      <SlideAction color='#475569' labelType='slide'>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia,\n        temporibus voluptatibus! Dolorum tenetur in distinctio quaerat, hic a\n        soluta, veniam ut id porro adipisci molestias cumque perspiciatis\n        asperiores facilis voluptatem.\n      </SlideAction>\n    </Column>\n  )\n}\n"},"SlideActionIcon.tsx":{module:"./SlideActionIcon.tsx",raw:"import {SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderActionIconDocs() {\n  return (\n    <SlideAction\n      style={{\n        border: 'none',\n        backgroundColor: 'rgba(61, 127, 118, 0.5)',\n      }}\n      color='#fff'\n      icon={\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          color='red'\n          width='24'\n          height='24'\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='currentColor'\n          strokeWidth='2'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          style={{cursor: 'inherit'}}\n        >\n          <path stroke='none' d='M0 0h24v24H0z' fill='none' />\n          <path d='M7 6a7.75 7.75 0 1 0 10 0' />\n          <path d='M12 4l0 8' />\n        </svg>\n      }\n      labelType='slide'\n    >\n      Slide to power off\n    </SlideAction>\n  )\n}\n",jsxPreview:"<SlideAction icon={<Icon />} />",moduleTS:"./SlideActionIcon.tsx",rawTS:"import {SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderActionIconDocs() {\n  return (\n    <SlideAction\n      style={{\n        border: 'none',\n        backgroundColor: 'rgba(61, 127, 118, 0.5)',\n      }}\n      color='#fff'\n      icon={\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          color='red'\n          width='24'\n          height='24'\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='currentColor'\n          strokeWidth='2'\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          style={{cursor: 'inherit'}}\n        >\n          <path stroke='none' d='M0 0h24v24H0z' fill='none' />\n          <path d='M7 6a7.75 7.75 0 1 0 10 0' />\n          <path d='M12 4l0 8' />\n        </svg>\n      }\n      labelType='slide'\n    >\n      Slide to power off\n    </SlideAction>\n  )\n}\n"},"SlideCompact.tsx":{module:"./SlideCompact.tsx",raw:"import {Column, SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderCompactDocs() {\n  return (\n    <Column>\n      <SlideAction compact>\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Reiciendis ab,\n        dicta consequatur harum iusto cumque, sunt quia dolor, adipisci commodi\n        repellendus perferendis iste. Soluta placeat dolores reiciendis\n        distinctio temporibus nisi!\n      </SlideAction>\n    </Column>\n  )\n}\n",jsxPreview:"<SlideAction compact />\n",moduleTS:"./SlideCompact.tsx",rawTS:"import {Column, SlideAction} from '@comfortdelgro/react-compass'\n\nexport default function SliderCompactDocs() {\n  return (\n    <Column>\n      <SlideAction compact>\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Reiciendis ab,\n        dicta consequatur harum iusto cumque, sunt quia dolor, adipisci commodi\n        repellendus perferendis iste. Soluta placeat dolores reiciendis\n        distinctio temporibus nisi!\n      </SlideAction>\n    </Column>\n  )\n}\n"},"SlideColorful.tsx":{module:"./SlideColorful.tsx",raw:"import {\n  Column,\n  Divider,\n  SlideAction,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\nimport classes from './styles/slide-action-document.module.css'\n\n// Slate, Orange, Emerald, CdgBlue, Cyan, Violet, Rose\nconst slideColors = [\n  '#475569',\n  '#ea580c',\n  '#059669',\n  'var(--cdg-color-cdgBlue)',\n  '#0891b2',\n  '#7c3aed',\n  '#e11d48',\n]\n\nexport default function SliderColorfulDocs() {\n  const [themeColor, setThemeColor] = useState(slideColors[0])\n\n  return (\n    <Column className={classes.exampleContainer}>\n      <Typography.Header variant='header4'>Theme color</Typography.Header>\n      <Typography.Body variant='body2'>\n        You can use the <code>color</code> prop to change the theme color.\n        <br />\n        <small>\n          Default color: &nbsp;\n          <code style={{color: '#0142AF'}}>--cdg-color-cdgBlue #0142AF</code>\n        </small>\n      </Typography.Body>\n      <SlideAction color='--cdg-color-success' style={{marginBlock: '1rem'}}>\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Cumque enim\n        sint labore nesciunt\n      </SlideAction>\n\n      <Divider />\n\n      <Typography.Header variant='header4'>More colors \uD83C\uDFA8</Typography.Header>\n      <div className={classes.colorPickerWrapper}>\n        {slideColors.map((color) => (\n          <button\n            key={color}\n            title={color}\n            className={classes.colorPickerBtn}\n            onClick={() => setThemeColor(color)}\n            style={{backgroundColor: color}}\n          />\n        ))}\n\n        <button\n          className={classes.colorPickerBtn}\n          style={{\n            background:\n              'linear-gradient(to right top, #fff6f2, #ffd4c1, #ffb194, #f98d6b, #f16645, #dc5135, #c63a26, #b12118, #8d2318, #6a2117, #481d15, #281713)',\n          }}\n          onClick={() =>\n            setThemeColor(\n              `#${Math.floor(Math.random() * 0xffffff)\n                .toString(16)\n                .padStart(6, '0')}`,\n            )\n          }\n        >\n          Random\n        </button>\n      </div>\n\n      <SlideAction color={themeColor}>Slide background</SlideAction>\n\n      <SlideAction\n        color={themeColor}\n        slideType='static'\n        style={{marginBlock: '1rem'}}\n      >\n        Fadein background\n      </SlideAction>\n\n      <SlideAction labelType='slide' color={themeColor}>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa non\n        ipsum, pariatur in eveniet neque dolores sequi, numquam aspernatur\n        ratione veritatis nemo earum maxime aut distinctio repellat dolorum ipsa\n        deleniti!\n      </SlideAction>\n\n      <Divider css={{marginBlock: 'var(--cdg-spacing-4)'}} />\n\n      <Typography.Header variant='header4'>\n        Gradient slide background\n      </Typography.Header>\n      <SlideAction className={classes.slideActionGradient}>\n        Slide to see bg color change\n      </SlideAction>\n    </Column>\n  )\n}\n",jsxPreview:"<SlideAction color='--cdg-color-cdgBlue' />\n",moduleTS:"./SlideColorful.tsx",rawTS:"import {\n  Column,\n  Divider,\n  SlideAction,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\nimport classes from './styles/slide-action-document.module.css'\n\n// Slate, Orange, Emerald, CdgBlue, Cyan, Violet, Rose\nconst slideColors = [\n  '#475569',\n  '#ea580c',\n  '#059669',\n  'var(--cdg-color-cdgBlue)',\n  '#0891b2',\n  '#7c3aed',\n  '#e11d48',\n]\n\nexport default function SliderColorfulDocs() {\n  const [themeColor, setThemeColor] = useState(slideColors[0])\n\n  return (\n    <Column className={classes.exampleContainer}>\n      <Typography.Header variant='header4'>Theme color</Typography.Header>\n      <Typography.Body variant='body2'>\n        You can use the <code>color</code> prop to change the theme color.\n        <br />\n        <small>\n          Default color: &nbsp;\n          <code style={{color: '#0142AF'}}>--cdg-color-cdgBlue #0142AF</code>\n        </small>\n      </Typography.Body>\n      <SlideAction color='--cdg-color-success' style={{marginBlock: '1rem'}}>\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Cumque enim\n        sint labore nesciunt\n      </SlideAction>\n\n      <Divider />\n\n      <Typography.Header variant='header4'>More colors \uD83C\uDFA8</Typography.Header>\n      <div className={classes.colorPickerWrapper}>\n        {slideColors.map((color) => (\n          <button\n            key={color}\n            title={color}\n            className={classes.colorPickerBtn}\n            onClick={() => setThemeColor(color)}\n            style={{backgroundColor: color}}\n          />\n        ))}\n\n        <button\n          className={classes.colorPickerBtn}\n          style={{\n            background:\n              'linear-gradient(to right top, #fff6f2, #ffd4c1, #ffb194, #f98d6b, #f16645, #dc5135, #c63a26, #b12118, #8d2318, #6a2117, #481d15, #281713)',\n          }}\n          onClick={() =>\n            setThemeColor(\n              `#${Math.floor(Math.random() * 0xffffff)\n                .toString(16)\n                .padStart(6, '0')}`,\n            )\n          }\n        >\n          Random\n        </button>\n      </div>\n\n      <SlideAction color={themeColor}>Slide background</SlideAction>\n\n      <SlideAction\n        color={themeColor}\n        slideType='static'\n        style={{marginBlock: '1rem'}}\n      >\n        Fadein background\n      </SlideAction>\n\n      <SlideAction labelType='slide' color={themeColor}>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa non\n        ipsum, pariatur in eveniet neque dolores sequi, numquam aspernatur\n        ratione veritatis nemo earum maxime aut distinctio repellat dolorum ipsa\n        deleniti!\n      </SlideAction>\n\n      <Divider css={{marginBlock: 'var(--cdg-spacing-4)'}} />\n\n      <Typography.Header variant='header4'>\n        Gradient slide background\n      </Typography.Header>\n      <SlideAction className={classes.slideActionGradient}>\n        Slide to see bg color change\n      </SlideAction>\n    </Column>\n  )\n}\n"},"SlideActionBehavior.tsx":{module:"./SlideActionBehavior.tsx",raw:"import {SlideAction, Typography} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function SliderActionBehaviorDocs() {\n  const [countSuccess, setCountSuccess] = useState(0)\n\n  return (\n    <>\n      <Typography.Body variant='body3' css={{marginBottom: 'var(--cdg-spacing-4)'}}>\n        Successful / confirmatory action count:{' '}\n        <strong>{`${countSuccess}`}</strong>\n      </Typography.Body>\n\n      <SlideAction\n        color='#475569'\n        allowSwipeAfterEnd\n        onSwipeEnd={() => setCountSuccess((currState) => currState + 1)}\n      >\n        Can swipe after success\n      </SlideAction>\n    </>\n  )\n}\n",jsxPreview:"<SlideAction allowSwipeAfterEnd />\n",moduleTS:"./SlideActionBehavior.tsx",rawTS:"import {SlideAction, Typography} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function SliderActionBehaviorDocs() {\n  const [countSuccess, setCountSuccess] = useState(0)\n\n  return (\n    <>\n      <Typography.Body variant='body3' css={{marginBottom: 'var(--cdg-spacing-4)'}}>\n        Successful / confirmatory action count:{' '}\n        <strong>{`${countSuccess}`}</strong>\n      </Typography.Body>\n\n      <SlideAction\n        color='#475569'\n        allowSwipeAfterEnd\n        onSwipeEnd={() => setCountSuccess((currState) => currState + 1)}\n      >\n        Can swipe after success\n      </SlideAction>\n    </>\n  )\n}\n"}};D.scope={process:{},import:{"@comfortdelgro/react-compass":A,react:k,"./styles/slide-action-document.module.css":T}};var _={"./SlideActionReset.tsx":function(){var e=(0,C.useRef)(null),n=(0,C.useCallback)(function(e){setTimeout(function(){e()},1e3)},[]);return(0,j.jsxs)("div",{className:B().exampleContainer,children:[t||(t=(0,j.jsxs)(A.Typography.Body,{variant:"body2",children:["1. Call ",(0,j.jsx)("code",{children:"reset"})," function that ",(0,j.jsx)("code",{children:"onSwipeEnd"})," ","callback provided."]})),(0,j.jsx)(A.SlideAction,{label:"Reset 1s after confirmation",onSwipeEnd:n}),i||(i=(0,j.jsxs)(A.Typography.Body,{variant:"body2",children:["2. Call ",(0,j.jsx)("code",{children:"resetState"})," function from component ref."]})),(0,j.jsx)(A.Button,{variant:"danger",type:"button",onClick:function(){var n;return null===(n=e.current)||void 0===n?void 0:n.resetState()},style:{marginBottom:"1rem"},children:"Reset below SlideAction"}),(0,j.jsx)(A.SlideAction,{ref:e,children:"Lorem ipsum dolor sit amet consectetur adipisicing elit"})]})},"./SlideAction.tsx":function(){var e=(0,C.useState)(!1),n=e[0],o=e[1];return(0,j.jsxs)(A.Column,{children:[r||(r=(0,j.jsx)(A.Typography.Body,{variant:"body2",children:"When users swiped all the way to the end, we can call it a successful or confirmatory action."})),(0,j.jsx)(A.SlideAction,{label:"Swipe to confirm",onSwipeEnd:function(){o(!0)}}),(0,j.jsxs)(A.Typography.Body,{variant:"body3",children:["Status:"," ",n?(0,j.jsx)("strong",{style:{color:"var(--cdg-color-success)"},children:"Confirmed!"}):"Waiting for confirmation"]})]})},"./SlideEffect.tsx":function(){return(0,j.jsxs)(A.Column,{children:[c||(c=(0,j.jsx)(A.Typography.Header,{variant:"header4",children:"Slide effect"})),l||(l=(0,j.jsx)(A.SlideAction,{color:"#475569",children:"Default: Slide background"})),(0,j.jsx)(A.SlideAction,{css:{marginBlock:"var(--cdg-spacing-4)"},color:"#475569",slideType:"static",children:"Static fade-in background"}),a||(a=(0,j.jsx)(A.Typography.Header,{variant:"header4",children:"Label effect"})),s||(s=(0,j.jsx)(A.SlideAction,{color:"#475569",labelType:"slide",children:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia, temporibus voluptatibus! Dolorum tenetur in distinctio quaerat, hic a soluta, veniam ut id porro adipisci molestias cumque perspiciatis asperiores facilis voluptatem."}))]})},"./SlideActionIcon.tsx":function(){return(0,j.jsx)(A.SlideAction,{style:{border:"none",backgroundColor:"rgba(61, 127, 118, 0.5)"},color:"#fff",icon:(0,j.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",color:"red",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",style:{cursor:"inherit"},children:[d||(d=(0,j.jsx)("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"})),p||(p=(0,j.jsx)("path",{d:"M7 6a7.75 7.75 0 1 0 10 0"})),u||(u=(0,j.jsx)("path",{d:"M12 4l0 8"}))]}),labelType:"slide",children:"Slide to power off"})},"./SlideCompact.tsx":function(){return m||(m=(0,j.jsx)(A.Column,{children:(0,j.jsx)(A.SlideAction,{compact:!0,children:"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Reiciendis ab, dicta consequatur harum iusto cumque, sunt quia dolor, adipisci commodi repellendus perferendis iste. Soluta placeat dolores reiciendis distinctio temporibus nisi!"})}))},"./SlideColorful.tsx":function(){var e=(0,C.useState)(E[0]),n=e[0],o=e[1];return(0,j.jsxs)(A.Column,{className:B().exampleContainer,children:[h||(h=(0,j.jsx)(A.Typography.Header,{variant:"header4",children:"Theme color"})),(0,j.jsxs)(A.Typography.Body,{variant:"body2",children:["You can use the ",f||(f=(0,j.jsx)("code",{children:"color"}))," prop to change the theme color.",g||(g=(0,j.jsx)("br",{})),(0,j.jsxs)("small",{children:["Default color: \xa0",(0,j.jsx)("code",{style:{color:"#0142AF"},children:"--cdg-color-cdgBlue #0142AF"})]})]}),(0,j.jsx)(A.SlideAction,{color:"--cdg-color-success",style:{marginBlock:"1rem"},children:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Cumque enim sint labore nesciunt"}),y||(y=(0,j.jsx)(A.Divider,{})),S||(S=(0,j.jsx)(A.Typography.Header,{variant:"header4",children:"More colors \uD83C\uDFA8"})),(0,j.jsxs)("div",{className:B().colorPickerWrapper,children:[E.map(function(e){return(0,j.jsx)("button",{title:e,className:B().colorPickerBtn,onClick:function(){return o(e)},style:{backgroundColor:e}},e)}),(0,j.jsx)("button",{className:B().colorPickerBtn,style:{background:"linear-gradient(to right top, #fff6f2, #ffd4c1, #ffb194, #f98d6b, #f16645, #dc5135, #c63a26, #b12118, #8d2318, #6a2117, #481d15, #281713)"},onClick:function(){return o("#".concat(Math.floor(16777215*Math.random()).toString(16).padStart(6,"0")))},children:"Random"})]}),(0,j.jsx)(A.SlideAction,{color:n,children:"Slide background"}),(0,j.jsx)(A.SlideAction,{color:n,slideType:"static",style:{marginBlock:"1rem"},children:"Fadein background"}),(0,j.jsx)(A.SlideAction,{labelType:"slide",color:n,children:"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa non ipsum, pariatur in eveniet neque dolores sequi, numquam aspernatur ratione veritatis nemo earum maxime aut distinctio repellat dolorum ipsa deleniti!"}),(0,j.jsx)(A.Divider,{css:{marginBlock:"var(--cdg-spacing-4)"}}),b||(b=(0,j.jsx)(A.Typography.Header,{variant:"header4",children:"Gradient slide background"})),(0,j.jsx)(A.SlideAction,{className:B().slideActionGradient,children:"Slide to see bg color change"})]})},"./SlideActionBehavior.tsx":function(){var e=(0,C.useState)(0),n=e[0],o=e[1];return(0,j.jsxs)(j.Fragment,{children:[(0,j.jsxs)(A.Typography.Body,{variant:"body3",css:{marginBottom:"var(--cdg-spacing-4)"},children:["Successful / confirmatory action count:"," ",(0,j.jsx)("strong",{children:"".concat(n)})]}),(0,j.jsx)(A.SlideAction,{color:"#475569",allowSwipeAfterEnd:!0,onSwipeEnd:function(){return o(function(e){return e+1})},children:"Can swipe after success"})]})}},L={"components/ComponentLinkHeader.tsx":R.Z};function q(){return(0,j.jsx)(w.Z,(0,x.Z)({},v))}},12137:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/slide-action",function(){return o(3440)}])},50537:function(e){e.exports={exampleContainer:"slide-action-document_exampleContainer__0_WLp",colorPickerWrapper:"slide-action-document_colorPickerWrapper__4Ur_C",colorPickerBtn:"slide-action-document_colorPickerBtn__yr_XS",slideActionGradient:"slide-action-document_slideActionGradient___AqrN",gradientWave:"slide-action-document_gradientWave__N2ZoR"}}},function(e){e.O(0,[508,6371,7306,3936,4437,9774,2888,179],function(){return e(e.s=12137)}),_N_E=e.O()}]);