(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[317],{37166:function(n,e,o){"use strict";o.d(e,{Z:function(){return d}});var t,r,a=o(38443),i=o(48329),s=o.n(i),l=o(97458);function d(){return(0,l.jsxs)(a.Flexbox,{css:{marginBottom:"$4"},children:[(0,l.jsx)(s(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:t||(t=(0,l.jsx)(a.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,l.jsx)(s(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:r||(r=(0,l.jsx)(a.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},51451:function(n,e,o){"use strict";o.r(e),o.d(e,{default:function(){return ni}});var t,r,a,i,s,l,d,c,p,u,m,h,g,f,y,w,b,v,D,x,C,k,B,T,S,j,q,R,M,H,O,F,P,$={};o.r($),o.d($,{demoComponents:function(){return nr},demos:function(){return nt},docs:function(){return no},srcComponents:function(){return na}});var L=o(2815),A=o(30031),N=o(49336),I=o(38443),z=o(52983),E=o.t(z,2),V=o(94291),K=o(33807),Z=o(81314),_=o(66580),G=o(81583),U=o(20234),J=o.n(U),Q=o(97458),Y=o(19572),X=o.n(Y),W=function(n){n.idSelected;var e=n.onClickDropdown;return(0,Q.jsxs)(I.Box,{as:"button",onClick:e,css:{width:"100%",display:"flex",justifyContent:"space-between",padding:"12px 16px",border:"1px solid #E6E6E6",margin:"$6 0",borderRadius:"8px",cursor:"pointer"},children:[(0,Q.jsxs)(I.Typography.Label,{css:{cursor:"pointer"},children:["Reason for cancel"," "]}),D||(D=(0,Q.jsx)(I.Icon,{icon:_.faChevronDown,color:"#757575"}))]})},nn={disableResize:!1,disableDragClose:!1,preventClose:!1},ne=o(37166),no={en:{description:"Display overlay area on top of a page and slides in from the side. Build on top of the native HTML <strong>&#60;dialog/></strong> element.",location:"/docs/data/components/drawer/drawer.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Drawer</h1><p class="description">Display overlay area on top of a page and slides in from the side. Build on top of the native HTML <strong>&#60;dialog/></strong> element.\n</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>Drawer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or</p>\n<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Drawer <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/drawer\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="usage">Usage<a aria-labelledby="usage" class="anchor-link" href="#usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="basic">Basic<a aria-labelledby="basic" class="anchor-link" href="#basic" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"Drawer.tsx"},'<h3 id="positions">Positions<a aria-labelledby="positions" class="anchor-link" href="#positions" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DrawerPosition.tsx"},'<h3 id="h5-variant">H5 variant<a aria-labelledby="h5-variant" class="anchor-link" href="#h5-variant" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DrawerH5.tsx"},'<h3 id="non-modal-mode">Non-modal mode<a aria-labelledby="non-modal-mode" class="anchor-link" href="#non-modal-mode" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A Drawer that has no backdrop and also doesn&#39;t render on the top-layer. It can NOT be closed by pressing the <code>ESC</code> key.\nThe content below the non-modal drawer can be interacted.</p>\n',{demo:"DrawerMode.tsx"},'<h2 id="control-behavior">Control behavior<a aria-labelledby="control-behavior" class="anchor-link" href="#control-behavior" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"DrawerCustomize.tsx"},'<h2 id="compound-components">Compound components<a aria-labelledby="compound-components" class="anchor-link" href="#compound-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><code>Drawer.Header</code> – a fully customizable header for drawer, usually contains a title and the close button.</li>\n<li><code>Drawer.Footer</code> – bottom of drawer, usually contains action buttons.</li>\n</ul>\n<h2 id="accessibility">Accessibility<a aria-labelledby="accessibility" class="anchor-link" href="#accessibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><code>Drawer</code> component build on top of the native HTML <a href="https://github.com/comfortdelgro/compass-design"><code>&lt;dialog/&gt;</code></a> element.</p>\n<p>By default, it respects the default accessibility behavior and settings of a <code>&lt;dialog/&gt;</code> element.</p>\n<h3 id="keyboard-interactions">Keyboard interactions<a aria-labelledby="keyboard-interactions" class="anchor-link" href="#keyboard-interactions" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Key</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><kbd>Escape</kbd></td>\n<td align="left">Close the drawer. This behavior will be disabled if <code>drawerMode</code> is <code>&#39;non-modal&#39;</code>.</td>\n</tr>\n<tr>\n<td align="left"><kbd>Tab</kbd> | <kbd>Shift</kbd> <kbd>Tab</kbd></td>\n<td align="left">Cycles through all the focusable elements of the drawer only</td>\n</tr>\n</tbody></table>\n<h2 id="component-props">Component Props<a aria-labelledby="component-props" class="anchor-link" href="#component-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="common-props">Common Props<a aria-labelledby="common-props" class="anchor-link" href="#common-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>css</code></td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left">The system prop that allows defining system overrides as well as additional CSS styles.</td>\n</tr>\n<tr>\n<td align="left"><code>variant</code></td>\n<td align="left"><code>&#39;default&#39;</code> | <code>&#39;h5&#39;</code></td>\n<td align="left"><code>&#39;default&#39;</code></td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="left"><code>drawerMode</code></td>\n<td align="left"><code>&#39;modal&#39;</code> | <code>&#39;non-modal&#39;</code></td>\n<td align="left"><code>&#39;modal&#39;</code></td>\n<td align="left"><code>&#39;modal&#39;</code>[^1]<br/><code>&#39;non-modal&#39;</code>[^2]</td>\n</tr>\n<tr>\n<td align="left"><code>preventFocus</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">If <code>true</code>, disable a default behavior of <code>&lt;dialog&gt;</code> element: Browser won&#39;t autofocus on the first nested focusable element anymore.</td>\n</tr>\n<tr>\n<td align="left"><code>preventClose</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">If <code>true</code>, the drawer won&#39;t close when users press <code>Escape</code> key or click/tap on the backdrop.</td>\n</tr>\n</tbody></table>\n<h3 id="variant-default">Variant <code>&#39;default&#39;</code><a aria-labelledby="variant-default" class="anchor-link" href="#variant-default" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>position</code></td>\n<td align="left"><code>&#39;left&#39;</code> | <code>&#39;bottom&#39;</code> | <code>&#39;right&#39;</code></td>\n<td align="left"><code>&#39;right&#39;</code></td>\n<td align="left">Side of the screen where drawer will be opened.</td>\n</tr>\n</tbody></table>\n<h3 id="variant-h5">Variant <code>&#39;h5&#39;</code><a aria-labelledby="variant-h5" class="anchor-link" href="#variant-h5" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>expanderCSS</code></td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left">Allows to custom CSS styles for the expander (use for drag &amp; drop).</td>\n</tr>\n<tr>\n<td align="left"><code>onExpandChange</code></td>\n<td align="left"><code>(isExpand: boolean) =&gt; void</code></td>\n<td align="left">—</td>\n<td align="left">Trigger when the H5 drawer expanded.</td>\n</tr>\n<tr>\n<td align="left"><code>expandedPoint</code></td>\n<td align="left"><code>number</code></td>\n<td align="left"><code>100</code> - <small>the top edge of available viewport</small></td>\n<td align="left">How many <strong>percentage</strong> of the viewport height that the drawer will be fully expanded.<br/><small>Accepted value range: <code>0</code> - <code>100</code><br/>Must be greater than <code>expandableLine</code> and the drawer initialization height (percent).</small></td>\n</tr>\n<tr>\n<td align="left"><code>expandableLine</code></td>\n<td align="left"><code>number</code></td>\n<td align="left"><code>67</code> - <small>2/3 viewport from bottom of available viewport</small></td>\n<td align="left">A boundary to tell the drawer to fully expand when its top crosses this line.<br/><small>Accepted value range: <code>0</code> - <code>100</code><br/>It must be smaller than <code>expandedPoint</code> and greater than drawer initialization height (percentage).</small></td>\n</tr>\n<tr>\n<td align="left"><code>disableResize</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>true</code></td>\n<td align="left">If <code>true</code>, the H5 drawer will NOT be able to expand/collapse and the expander line will be hidden.</td>\n</tr>\n<tr>\n<td align="left"><code>disableAddBodyAttr</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>true</code></td>\n<td align="left">If <code>true</code>, when open the H5 drawer, it will NOT add inert attribute and <code>overflow: hidden</code> to the <code>&lt;body&gt;</code> tag.</td>\n</tr>\n<tr>\n<td align="left"><code>disableDragClose</code></td>\n<td align="left"><code>boolean</code></td>\n<td align="left"><code>true</code></td>\n<td align="left">If <code>true</code>, the H5 drawer will NOT close itself if user drags and drops it below the default height.</td>\n</tr>\n</tbody></table>\n<p>[^1]: Act the same as a default <code>&lt;dialog/&gt;</code>. It will be rendered on the top-layer with a backdrop. Everything other than the drawer and its contents will be ignored by the browsers and can&#39;t be interact with.<br/>\n[^2]: It has no backdrop and also doesn&#39;t render on the top-layer. It can not be closed by pressing the <code>ESC</code> key. The content below the non-modal drawer can be interacted. <a href="https://github.com/comfortdelgro/compass-design">Read more</a>.</p>\n'],toc:[{text:"Usage",level:2,hash:"usage",children:[{text:"Basic",level:3,hash:"basic"},{text:"Positions",level:3,hash:"positions"},{text:"H5 variant",level:3,hash:"h5-variant"},{text:"Non-modal mode",level:3,hash:"non-modal-mode"}]},{text:"Control behavior",level:2,hash:"control-behavior",children:[]},{text:"Compound components",level:2,hash:"compound-components",children:[]},{text:"Accessibility",level:2,hash:"accessibility",children:[{text:"Keyboard interactions",level:3,hash:"keyboard-interactions"}]},{text:"Component Props",level:2,hash:"component-props",children:[{text:"Common Props",level:3,hash:"common-props"},{text:"Variant <code>&#39;default&#39;</code>",level:3,hash:"variant-default"},{text:"Variant <code>&#39;h5&#39;</code>",level:3,hash:"variant-h5"}]}],title:"React Drawer component",headers:{title:"React Drawer component",components:["Drawer"],hooks:[]}}},nt={"Drawer.tsx":{module:"./Drawer.tsx",raw:"import CrossIcon from '@comfortdelgro/compass-icons/react/cross'\nimport {\n  Button,\n  Column,\n  Divider,\n  Drawer,\n  Row,\n  TextField,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {FormEventHandler, useState} from 'react'\n\nexport default function DrawerDocs() {\n  const [openDrawer, setOpenDrawer] = useState(false)\n  const [keyword, setKeyword] = useState('') // just for display form value\n\n  const handleFormSubmit: FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault()\n\n    const formData = new FormData(e.currentTarget)\n    setKeyword((formData.get('keyword') as string) || '')\n\n    if (!formData.get('keepFormValue')) {\n      e.currentTarget.reset()\n    }\n\n    setOpenDrawer(false)\n  }\n\n  const listenOnCloseDrawer = () => {\n    setOpenDrawer(false)\n\n    // Do other stuff when drawer close\n  }\n\n  return (\n    <Column>\n      <Typography.Header variant='header4'>\n        Drawer controlled by form\n      </Typography.Header>\n\n      <Row css={{marginBlock: '$4'}}>\n        <Button type='button' onClick={() => setOpenDrawer(true)}>\n          Open Drawer\n        </Button>\n      </Row>\n\n      <Typography.Body variant='body2'>Submitted form values:</Typography.Body>\n      <pre>{JSON.stringify({keyword}, null, 2)}</pre>\n\n      <Drawer open={openDrawer} onClose={listenOnCloseDrawer}>\n        <Drawer.Header>\n          <Typography.Header variant='header3'>\n            Drawer controlled by form\n          </Typography.Header>\n          <Button\n            css={{\n              padding: '$1',\n              svg: {\n                width: 'fit-content !important',\n              },\n            }}\n            type='button'\n            variant='ghost'\n            onClick={() => setOpenDrawer(false)}\n          >\n            <CrossIcon />\n          </Button>\n        </Drawer.Header>\n\n        <Typography.Header variant='header4'>Drawer Form</Typography.Header>\n        <Typography.Body\n          variant='body3'\n          css={{color: '$grayShades60', marginBottom: '$4'}}\n        >\n          In this example, all inputs are uncontrolled input.\n        </Typography.Body>\n\n        <form id='form-in-drawer' method='dialog' onSubmit={handleFormSubmit}>\n          <TextField\n            label='Keyword'\n            name='keyword'\n            id='keyword'\n            placeholder='Enter anything'\n          />\n\n          <label htmlFor='keepValue'>Keep form value: </label>\n          <input\n            name='keepFormValue'\n            type='checkbox'\n            id='keepValue'\n            style={{marginTop: '1rem'}}\n          />\n        </form>\n\n        <Divider css={{marginBlock: '$4'}} />\n\n        <Typography.Header variant='header4' css={{marginTop: '$16'}}>\n          Article contents\n        </Typography.Header>\n        <section style={{height: '50vh'}}>\n          <Typography.Header\n            variant='header5'\n            css={{\n              position: 'sticky',\n              insetInline: 0,\n              top: '-1rem',\n              paddingBlock: '1rem',\n              marginBlock: 0,\n              backgroundColor: 'white',\n            }}\n          >\n            Section 1: Very long content here, scroll down ⏬ for more content\n          </Typography.Header>\n\n          <Typography.Body variant='body3'>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo\n            molestiae tenetur in, dicta veniam quisquam iste officia deleniti,\n            nemo cum nesciunt repudiandae fugiat sapiente nihil eius ut culpa\n            quis modi.\n          </Typography.Body>\n        </section>\n\n        <section style={{height: '100vh'}}>\n          <Typography.Header\n            variant='header5'\n            css={{\n              position: 'sticky',\n              insetInline: 0,\n              top: '-1rem',\n              paddingBlock: '1rem',\n              marginBlock: 0,\n              backgroundColor: 'white',\n            }}\n          >\n            Section 2: No idea\n          </Typography.Header>\n\n          <Typography.Body variant='body3'>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo\n            molestiae tenetur in, dicta veniam quisquam iste officia deleniti,\n            nemo cum nesciunt repudiandae fugiat sapiente nihil eius ut culpa\n            quis modi. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n            Voluptatem quidem omnis architecto aliquam id dicta dolor magnam,\n            sapiente, itaque quaerat laboriosam reiciendis placeat tempore animi\n            ratione! Neque doloribus vel esse.\n          </Typography.Body>\n        </section>\n\n        <Drawer.Footer css={{display: 'flex', gap: '$2'}}>\n          <Button\n            variant='secondary'\n            form='form-in-drawer'\n            type='reset'\n            onClick={() => setOpenDrawer(false)}\n          >\n            Cancel\n          </Button>\n\n          <Button form='form-in-drawer' type='submit'>\n            Submit\n          </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </Column>\n  )\n}\n",jsxPreview:"import {Button, Drawer} from '@comfortdelgro/react-compass'\n\nconst [openDrawer, setOpenDrawer] = useState(false)\n\n<Button type='button' onClick={() => setOpenDrawer(true)}>\n  Open Drawer\n</Button>\n\n<Drawer open={openDrawer} onClose={() => setOpenDrawer(false)}>\n  Some article contents\n</Drawer>\n",moduleTS:"./Drawer.tsx",rawTS:"import CrossIcon from '@comfortdelgro/compass-icons/react/cross'\nimport {\n  Button,\n  Column,\n  Divider,\n  Drawer,\n  Row,\n  TextField,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {FormEventHandler, useState} from 'react'\n\nexport default function DrawerDocs() {\n  const [openDrawer, setOpenDrawer] = useState(false)\n  const [keyword, setKeyword] = useState('') // just for display form value\n\n  const handleFormSubmit: FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault()\n\n    const formData = new FormData(e.currentTarget)\n    setKeyword((formData.get('keyword') as string) || '')\n\n    if (!formData.get('keepFormValue')) {\n      e.currentTarget.reset()\n    }\n\n    setOpenDrawer(false)\n  }\n\n  const listenOnCloseDrawer = () => {\n    setOpenDrawer(false)\n\n    // Do other stuff when drawer close\n  }\n\n  return (\n    <Column>\n      <Typography.Header variant='header4'>\n        Drawer controlled by form\n      </Typography.Header>\n\n      <Row css={{marginBlock: '$4'}}>\n        <Button type='button' onClick={() => setOpenDrawer(true)}>\n          Open Drawer\n        </Button>\n      </Row>\n\n      <Typography.Body variant='body2'>Submitted form values:</Typography.Body>\n      <pre>{JSON.stringify({keyword}, null, 2)}</pre>\n\n      <Drawer open={openDrawer} onClose={listenOnCloseDrawer}>\n        <Drawer.Header>\n          <Typography.Header variant='header3'>\n            Drawer controlled by form\n          </Typography.Header>\n          <Button\n            css={{\n              padding: '$1',\n              svg: {\n                width: 'fit-content !important',\n              },\n            }}\n            type='button'\n            variant='ghost'\n            onClick={() => setOpenDrawer(false)}\n          >\n            <CrossIcon />\n          </Button>\n        </Drawer.Header>\n\n        <Typography.Header variant='header4'>Drawer Form</Typography.Header>\n        <Typography.Body\n          variant='body3'\n          css={{color: '$grayShades60', marginBottom: '$4'}}\n        >\n          In this example, all inputs are uncontrolled input.\n        </Typography.Body>\n\n        <form id='form-in-drawer' method='dialog' onSubmit={handleFormSubmit}>\n          <TextField\n            label='Keyword'\n            name='keyword'\n            id='keyword'\n            placeholder='Enter anything'\n          />\n\n          <label htmlFor='keepValue'>Keep form value: </label>\n          <input\n            name='keepFormValue'\n            type='checkbox'\n            id='keepValue'\n            style={{marginTop: '1rem'}}\n          />\n        </form>\n\n        <Divider css={{marginBlock: '$4'}} />\n\n        <Typography.Header variant='header4' css={{marginTop: '$16'}}>\n          Article contents\n        </Typography.Header>\n        <section style={{height: '50vh'}}>\n          <Typography.Header\n            variant='header5'\n            css={{\n              position: 'sticky',\n              insetInline: 0,\n              top: '-1rem',\n              paddingBlock: '1rem',\n              marginBlock: 0,\n              backgroundColor: 'white',\n            }}\n          >\n            Section 1: Very long content here, scroll down ⏬ for more content\n          </Typography.Header>\n\n          <Typography.Body variant='body3'>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo\n            molestiae tenetur in, dicta veniam quisquam iste officia deleniti,\n            nemo cum nesciunt repudiandae fugiat sapiente nihil eius ut culpa\n            quis modi.\n          </Typography.Body>\n        </section>\n\n        <section style={{height: '100vh'}}>\n          <Typography.Header\n            variant='header5'\n            css={{\n              position: 'sticky',\n              insetInline: 0,\n              top: '-1rem',\n              paddingBlock: '1rem',\n              marginBlock: 0,\n              backgroundColor: 'white',\n            }}\n          >\n            Section 2: No idea\n          </Typography.Header>\n\n          <Typography.Body variant='body3'>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo\n            molestiae tenetur in, dicta veniam quisquam iste officia deleniti,\n            nemo cum nesciunt repudiandae fugiat sapiente nihil eius ut culpa\n            quis modi. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n            Voluptatem quidem omnis architecto aliquam id dicta dolor magnam,\n            sapiente, itaque quaerat laboriosam reiciendis placeat tempore animi\n            ratione! Neque doloribus vel esse.\n          </Typography.Body>\n        </section>\n\n        <Drawer.Footer css={{display: 'flex', gap: '$2'}}>\n          <Button\n            variant='secondary'\n            form='form-in-drawer'\n            type='reset'\n            onClick={() => setOpenDrawer(false)}\n          >\n            Cancel\n          </Button>\n\n          <Button form='form-in-drawer' type='submit'>\n            Submit\n          </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </Column>\n  )\n}\n"},"DrawerPosition.tsx":{module:"./DrawerPosition.tsx",raw:"import ArrowLeft from '@comfortdelgro/compass-icons/react/arrow-left'\nimport ArrowRight from '@comfortdelgro/compass-icons/react/arrow-right'\nimport {\n  Button,\n  Column,\n  Drawer,\n  DrawerProps,\n  Row,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function DrawerPositionDocs() {\n  const [openDrawerPosition, setOpenDrawerPosition] = useState(false)\n  const [drawerPosition, setDrawerPosition] =\n    useState<DrawerProps['position']>(undefined)\n\n  const handleChangePosition = (position: DrawerProps['position']) => {\n    setDrawerPosition(position)\n    setOpenDrawerPosition(true)\n  }\n\n  const handleCloseDrawer = () => {\n    setOpenDrawerPosition(false)\n  }\n\n  return (\n    <Column>\n      <Row>\n        <Button\n          type='button'\n          leftIcon={<ArrowLeft />}\n          onClick={() => handleChangePosition('left')}\n        >\n          Open on the left\n        </Button>\n\n        <Button\n          variant='secondary'\n          type='button'\n          onClick={() => handleChangePosition('bottom')}\n        >\n          Open on the bottom\n        </Button>\n\n        <Button\n          type='button'\n          rightIcon={<ArrowRight />}\n          onClick={() => handleChangePosition('right')}\n        >\n          Open on the right\n        </Button>\n      </Row>\n\n      <Drawer\n        open={openDrawerPosition}\n        onClose={handleCloseDrawer}\n        position={drawerPosition}\n      >\n        <Drawer.Header>\n          <h2>Drawer {drawerPosition || ''}</h2>\n        </Drawer.Header>\n\n        <p>Article contents</p>\n\n        <Button type='button' onClick={handleCloseDrawer}>\n          Close Drawer\n        </Button>\n      </Drawer>\n    </Column>\n  )\n}\n",jsxPreview:"<Drawer position='left'>\n  ...\n</Drawer>\n",moduleTS:"./DrawerPosition.tsx",rawTS:"import ArrowLeft from '@comfortdelgro/compass-icons/react/arrow-left'\nimport ArrowRight from '@comfortdelgro/compass-icons/react/arrow-right'\nimport {\n  Button,\n  Column,\n  Drawer,\n  DrawerProps,\n  Row,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function DrawerPositionDocs() {\n  const [openDrawerPosition, setOpenDrawerPosition] = useState(false)\n  const [drawerPosition, setDrawerPosition] =\n    useState<DrawerProps['position']>(undefined)\n\n  const handleChangePosition = (position: DrawerProps['position']) => {\n    setDrawerPosition(position)\n    setOpenDrawerPosition(true)\n  }\n\n  const handleCloseDrawer = () => {\n    setOpenDrawerPosition(false)\n  }\n\n  return (\n    <Column>\n      <Row>\n        <Button\n          type='button'\n          leftIcon={<ArrowLeft />}\n          onClick={() => handleChangePosition('left')}\n        >\n          Open on the left\n        </Button>\n\n        <Button\n          variant='secondary'\n          type='button'\n          onClick={() => handleChangePosition('bottom')}\n        >\n          Open on the bottom\n        </Button>\n\n        <Button\n          type='button'\n          rightIcon={<ArrowRight />}\n          onClick={() => handleChangePosition('right')}\n        >\n          Open on the right\n        </Button>\n      </Row>\n\n      <Drawer\n        open={openDrawerPosition}\n        onClose={handleCloseDrawer}\n        position={drawerPosition}\n      >\n        <Drawer.Header>\n          <h2>Drawer {drawerPosition || ''}</h2>\n        </Drawer.Header>\n\n        <p>Article contents</p>\n\n        <Button type='button' onClick={handleCloseDrawer}>\n          Close Drawer\n        </Button>\n      </Drawer>\n    </Column>\n  )\n}\n"},"DrawerH5.tsx":{module:"./DrawerH5.tsx",raw:"import {\n  Box,\n  Button,\n  Column,\n  Drawer,\n  Icon,\n  List,\n  Modal,\n  Radio,\n  Row,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport ListImage from '@comfortdelgro/react-compass/list/list-image'\nimport {\n  faChevronDown,\n  faChevronRight,\n  faFaceSmile,\n} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {useState} from 'react'\n\nconst imgSrc =\n  'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n\nexport default function DrawerH5Docs() {\n  const [openDrawer, setOpenDrawer] = useState(false)\n  const [openModal, setOpenModal] = useState(false)\n\n  const renderDemoList = Array.from(Array(10).keys()).map((id) => (\n    <List\n      key={id}\n      title={`ComfortRIDE ${id}`}\n      description='Car or Taxi, Flat Fare'\n      descriptionIcon={\n        id % 2 === 1 ? (\n          <FontAwesomeIcon\n            style={{width: 14, height: 14, color: '#0142AF'}}\n            icon={faFaceSmile}\n          />\n        ) : undefined\n      }\n      variant='h5'\n      leftInfo={\n        <ListImage variant='h5' isRounded src={imgSrc} alt='singapore' />\n      }\n      rightInfo={{\n        text: '$9.90',\n        description: 'Fees may apply',\n        icon: <FontAwesomeIcon icon={faChevronRight} />,\n      }}\n      onClick={() => console.log('Ride selected:', id)}\n    />\n  ))\n\n  return (\n    <Column>\n      <Typography.Header variant='header4'>Default</Typography.Header>\n      <Row css={{marginBlock: '$4'}}>\n        <Button type='button' onClick={() => setOpenDrawer(true)}>\n          Open H5 Drawer\n        </Button>\n      </Row>\n\n      <Drawer\n        open={openDrawer}\n        css={{height: '40dvh', '& .drawer-content': {padding: 0}}}\n        onClose={() => setOpenDrawer(false)}\n        variant='h5'\n      >\n        <Typography.Body\n          variant='body2'\n          css={{textAlign: 'center', paddingBlock: '$4'}}\n        >\n          Pull up for more rides\n        </Typography.Body>\n\n        <Column>{renderDemoList}</Column>\n      </Drawer>\n      <Typography.Header variant='header4'>Dropdown</Typography.Header>\n      <Row css={{marginBlock: '$4'}}>\n        <Button type='button' onClick={() => setOpenModal(true)}>\n          Modal & Dropdown\n        </Button>\n      </Row>\n\n      <Modal.Trigger\n        isOpen={openModal}\n        size='sm'\n        handleClose={() => setOpenModal(false)}\n      >\n        <Modal>\n          <Modal.Description css={{display: 'flex', flexDirection: 'column'}}>\n            <Typography.Label variant='label1' css={{textAlign: 'center'}}>\n              Trip is cancelled. No Payment is required.\n            </Typography.Label>\n            <Dropdown onClickDropdown={() => setOpenDrawer(true)} />\n            <Button type='button' variant='primary' h5>\n              Submit\n            </Button>\n          </Modal.Description>\n        </Modal>\n      </Modal.Trigger>\n\n      <Drawer\n        open={openDrawer}\n        css={{height: '40dvh', '& .drawer-content': {padding: 0}}}\n        onClose={() => setOpenDrawer(false)}\n        variant='h5'\n        disableResize\n      >\n        <Typography.Body\n          variant='body2'\n          css={{textAlign: 'center', paddingBlock: '$4'}}\n        >\n          Select Reason\n        </Typography.Body>\n\n        <Column>\n          <Radio.Group orientation='vertical'>\n            <Radio\n              description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n              value='1'\n              css={{width: '100%'}}\n            />\n            <Radio\n              description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n              value='2'\n              css={{width: '100%'}}\n            />\n          </Radio.Group>\n        </Column>\n      </Drawer>\n    </Column>\n  )\n}\n\nconst Dropdown = ({\n  idSelected = 0,\n  onClickDropdown,\n}: {\n  idSelected?: number\n  onClickDropdown: () => void\n}) => {\n  return (\n    <Box\n      as='button'\n      onClick={onClickDropdown}\n      css={{\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '12px 16px',\n        border: '1px solid #E6E6E6',\n        margin: '$6 0',\n        borderRadius: '8px',\n        cursor: 'pointer',\n      }}\n    >\n      <Typography.Label css={{cursor: 'pointer'}}>\n        Reason for cancel{' '}\n      </Typography.Label>\n      <Icon icon={faChevronDown} color='#757575' />\n    </Box>\n  )\n}\n",jsxPreview:"<Drawer variant='h5'>\n  ...\n</Drawer>",moduleTS:"./DrawerH5.tsx",rawTS:"import {\n  Box,\n  Button,\n  Column,\n  Drawer,\n  Icon,\n  List,\n  Modal,\n  Radio,\n  Row,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport ListImage from '@comfortdelgro/react-compass/list/list-image'\nimport {\n  faChevronDown,\n  faChevronRight,\n  faFaceSmile,\n} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {useState} from 'react'\n\nconst imgSrc =\n  'https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\n\nexport default function DrawerH5Docs() {\n  const [openDrawer, setOpenDrawer] = useState(false)\n  const [openModal, setOpenModal] = useState(false)\n\n  const renderDemoList = Array.from(Array(10).keys()).map((id) => (\n    <List\n      key={id}\n      title={`ComfortRIDE ${id}`}\n      description='Car or Taxi, Flat Fare'\n      descriptionIcon={\n        id % 2 === 1 ? (\n          <FontAwesomeIcon\n            style={{width: 14, height: 14, color: '#0142AF'}}\n            icon={faFaceSmile}\n          />\n        ) : undefined\n      }\n      variant='h5'\n      leftInfo={\n        <ListImage variant='h5' isRounded src={imgSrc} alt='singapore' />\n      }\n      rightInfo={{\n        text: '$9.90',\n        description: 'Fees may apply',\n        icon: <FontAwesomeIcon icon={faChevronRight} />,\n      }}\n      onClick={() => console.log('Ride selected:', id)}\n    />\n  ))\n\n  return (\n    <Column>\n      <Typography.Header variant='header4'>Default</Typography.Header>\n      <Row css={{marginBlock: '$4'}}>\n        <Button type='button' onClick={() => setOpenDrawer(true)}>\n          Open H5 Drawer\n        </Button>\n      </Row>\n\n      <Drawer\n        open={openDrawer}\n        css={{height: '40dvh', '& .drawer-content': {padding: 0}}}\n        onClose={() => setOpenDrawer(false)}\n        variant='h5'\n      >\n        <Typography.Body\n          variant='body2'\n          css={{textAlign: 'center', paddingBlock: '$4'}}\n        >\n          Pull up for more rides\n        </Typography.Body>\n\n        <Column>{renderDemoList}</Column>\n      </Drawer>\n      <Typography.Header variant='header4'>Dropdown</Typography.Header>\n      <Row css={{marginBlock: '$4'}}>\n        <Button type='button' onClick={() => setOpenModal(true)}>\n          Modal & Dropdown\n        </Button>\n      </Row>\n\n      <Modal.Trigger\n        isOpen={openModal}\n        size='sm'\n        handleClose={() => setOpenModal(false)}\n      >\n        <Modal>\n          <Modal.Description css={{display: 'flex', flexDirection: 'column'}}>\n            <Typography.Label variant='label1' css={{textAlign: 'center'}}>\n              Trip is cancelled. No Payment is required.\n            </Typography.Label>\n            <Dropdown onClickDropdown={() => setOpenDrawer(true)} />\n            <Button type='button' variant='primary' h5>\n              Submit\n            </Button>\n          </Modal.Description>\n        </Modal>\n      </Modal.Trigger>\n\n      <Drawer\n        open={openDrawer}\n        css={{height: '40dvh', '& .drawer-content': {padding: 0}}}\n        onClose={() => setOpenDrawer(false)}\n        variant='h5'\n        disableResize\n      >\n        <Typography.Body\n          variant='body2'\n          css={{textAlign: 'center', paddingBlock: '$4'}}\n        >\n          Select Reason\n        </Typography.Body>\n\n        <Column>\n          <Radio.Group orientation='vertical'>\n            <Radio\n              description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n              value='1'\n              css={{width: '100%'}}\n            />\n            <Radio\n              description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n              value='2'\n              css={{width: '100%'}}\n            />\n          </Radio.Group>\n        </Column>\n      </Drawer>\n    </Column>\n  )\n}\n\nconst Dropdown = ({\n  idSelected = 0,\n  onClickDropdown,\n}: {\n  idSelected?: number\n  onClickDropdown: () => void\n}) => {\n  return (\n    <Box\n      as='button'\n      onClick={onClickDropdown}\n      css={{\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '12px 16px',\n        border: '1px solid #E6E6E6',\n        margin: '$6 0',\n        borderRadius: '8px',\n        cursor: 'pointer',\n      }}\n    >\n      <Typography.Label css={{cursor: 'pointer'}}>\n        Reason for cancel{' '}\n      </Typography.Label>\n      <Icon icon={faChevronDown} color='#757575' />\n    </Box>\n  )\n}\n"},"DrawerMode.tsx":{module:"./DrawerMode.tsx",raw:"import {\n  Button,\n  Column,\n  Drawer,\n  Modal,\n  Row,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function DrawerModeDocs() {\n  const [openNonModalDrawer, setOpenNonModalDrawer] = useState(false)\n  const [openConfirmModal, setOpenConfirmModal] = useState(false)\n\n  return (\n    <Column>\n      <Row>\n        <Button\n          type='button'\n          variant='secondary'\n          onClick={() => setOpenNonModalDrawer(!openNonModalDrawer)}\n        >\n          Toggle Non-modal Drawer\n        </Button>\n      </Row>\n\n      <Drawer\n        open={openNonModalDrawer}\n        css={{height: '30dvh'}}\n        expanderCSS={{\n          background: '$blueShades100',\n          paddingBlock: '$2 $6',\n        }}\n        onClose={() => setOpenNonModalDrawer(false)}\n        variant='h5'\n        expandedPoint={70}\n        expandableLine={60}\n        drawerMode='non-modal'\n      >\n        <Drawer.Header\n          css={{\n            display: 'flex',\n            paddingTop: 0,\n            gap: '$2',\n            justifyContent: 'space-between',\n            backgroundColor: '$blueShades100',\n          }}\n        >\n          <Typography.Body\n            variant='body3'\n            weight='semibold'\n            css={{color: '$grayShades10', width: 'fit-content'}}\n          >\n            Your ride is on the way\n          </Typography.Body>\n          <Typography.Body\n            variant='body3'\n            weight='semibold'\n            css={{color: '$grayShades10', width: 'fit-content'}}\n          >\n            Arriving in 8 - 10 min\n          </Typography.Body>\n        </Drawer.Header>\n\n        <Typography.Body variant='body3' css={{marginBlock: '$4'}}>\n          To close this drawer:\n          <br />\n          <strong>Drag to bottom</strong> ⏬ of the screen or{' '}\n          <strong>confirm</strong> the modal that opened by button below or\n          <br /> just <strong>tap</strong> on the button that open it (the{' '}\n          <q>Toggle Non-modal Drawer</q> button).\n        </Typography.Body>\n\n        <Button\n          type='button'\n          variant='secondary'\n          onClick={() => setOpenConfirmModal(true)}\n        >\n          Open confirm modal\n        </Button>\n\n        <Modal.Trigger\n          isOpen={openConfirmModal}\n          handleClose={() => setOpenConfirmModal(false)}\n        >\n          <Modal css={{display: 'flex', flexDirection: 'column'}}>\n            <Modal.Title>Please confirm</Modal.Title>\n            <Modal.Description css={{flex: 1}}>\n              Lorem ipsum dolor sit, amet consectetur adipisicing elit.\n              Molestias reprehenderit animi ducimus facere perspiciatis, quod\n              deserunt, necessitatibus voluptatibus ipsam harum rerum cumque,\n              vero tempore ipsum praesentium quas veniam expedita magnam.\n            </Modal.Description>\n            <Modal.Actions>\n              <Button\n                variant='ghost'\n                onClick={() => setOpenConfirmModal(false)}\n                css={{marginRight: '4px'}}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='danger'\n                onClick={() => {\n                  setOpenConfirmModal(false)\n                  setOpenNonModalDrawer(false)\n                }}\n              >\n                Proceed\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Modal.Trigger>\n      </Drawer>\n    </Column>\n  )\n}\n",jsxPreview:"<Drawer drawerMode='non-modal'>\n  ...\n</Drawer>",moduleTS:"./DrawerMode.tsx",rawTS:"import {\n  Button,\n  Column,\n  Drawer,\n  Modal,\n  Row,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nexport default function DrawerModeDocs() {\n  const [openNonModalDrawer, setOpenNonModalDrawer] = useState(false)\n  const [openConfirmModal, setOpenConfirmModal] = useState(false)\n\n  return (\n    <Column>\n      <Row>\n        <Button\n          type='button'\n          variant='secondary'\n          onClick={() => setOpenNonModalDrawer(!openNonModalDrawer)}\n        >\n          Toggle Non-modal Drawer\n        </Button>\n      </Row>\n\n      <Drawer\n        open={openNonModalDrawer}\n        css={{height: '30dvh'}}\n        expanderCSS={{\n          background: '$blueShades100',\n          paddingBlock: '$2 $6',\n        }}\n        onClose={() => setOpenNonModalDrawer(false)}\n        variant='h5'\n        expandedPoint={70}\n        expandableLine={60}\n        drawerMode='non-modal'\n      >\n        <Drawer.Header\n          css={{\n            display: 'flex',\n            paddingTop: 0,\n            gap: '$2',\n            justifyContent: 'space-between',\n            backgroundColor: '$blueShades100',\n          }}\n        >\n          <Typography.Body\n            variant='body3'\n            weight='semibold'\n            css={{color: '$grayShades10', width: 'fit-content'}}\n          >\n            Your ride is on the way\n          </Typography.Body>\n          <Typography.Body\n            variant='body3'\n            weight='semibold'\n            css={{color: '$grayShades10', width: 'fit-content'}}\n          >\n            Arriving in 8 - 10 min\n          </Typography.Body>\n        </Drawer.Header>\n\n        <Typography.Body variant='body3' css={{marginBlock: '$4'}}>\n          To close this drawer:\n          <br />\n          <strong>Drag to bottom</strong> ⏬ of the screen or{' '}\n          <strong>confirm</strong> the modal that opened by button below or\n          <br /> just <strong>tap</strong> on the button that open it (the{' '}\n          <q>Toggle Non-modal Drawer</q> button).\n        </Typography.Body>\n\n        <Button\n          type='button'\n          variant='secondary'\n          onClick={() => setOpenConfirmModal(true)}\n        >\n          Open confirm modal\n        </Button>\n\n        <Modal.Trigger\n          isOpen={openConfirmModal}\n          handleClose={() => setOpenConfirmModal(false)}\n        >\n          <Modal css={{display: 'flex', flexDirection: 'column'}}>\n            <Modal.Title>Please confirm</Modal.Title>\n            <Modal.Description css={{flex: 1}}>\n              Lorem ipsum dolor sit, amet consectetur adipisicing elit.\n              Molestias reprehenderit animi ducimus facere perspiciatis, quod\n              deserunt, necessitatibus voluptatibus ipsam harum rerum cumque,\n              vero tempore ipsum praesentium quas veniam expedita magnam.\n            </Modal.Description>\n            <Modal.Actions>\n              <Button\n                variant='ghost'\n                onClick={() => setOpenConfirmModal(false)}\n                css={{marginRight: '4px'}}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='danger'\n                onClick={() => {\n                  setOpenConfirmModal(false)\n                  setOpenNonModalDrawer(false)\n                }}\n              >\n                Proceed\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Modal.Trigger>\n      </Drawer>\n    </Column>\n  )\n}\n"},"DrawerCustomize.tsx":{module:"./DrawerCustomize.tsx",raw:"import {\n  Button,\n  Column,\n  Drawer,\n  DrawerH5Props,\n  Row,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nconst h5DrawerDefaultConfig: Partial<DrawerH5Props> = {\n  disableResize: false,\n  disableDragClose: false,\n  preventClose: false,\n}\n\nexport default function DrawerCustomizeDocs() {\n  const [openDemoDrawer, setOpenDemoDrawer] = useState(false)\n  const [drawerConfig, setDrawerConfig] = useState<Partial<DrawerH5Props>>(\n    h5DrawerDefaultConfig,\n  )\n\n  const [openNoFocusDrawer, setOpenNoFocusDrawer] = useState({\n    open: false,\n    preventFocus: false,\n  })\n\n  return (\n    <Column>\n      <Typography.Header variant='header4'>\n        Resizable, drag to close and prevent the default closing behaviors.\n      </Typography.Header>\n      <Row css={{marginBottom: '$8'}}>\n        <Button type='button' onClick={() => setOpenDemoDrawer(true)}>\n          Open Customizable Drawer\n        </Button>\n      </Row>\n\n      <Drawer\n        {...drawerConfig}\n        open={openDemoDrawer}\n        css={{\n          height: '40dvh',\n          '& .drawer-content': {\n            button: {\n              marginBottom: '$4',\n            },\n          },\n        }}\n        onClose={() => {\n          setOpenDemoDrawer(false)\n          setDrawerConfig(h5DrawerDefaultConfig)\n        }}\n        variant='h5'\n      >\n        <p>\n          Resizable Drawer? <strong>{`${!drawerConfig.disableResize}`}</strong>\n        </p>\n        <Button\n          type='button'\n          onClick={() =>\n            setDrawerConfig((currState) => ({\n              ...currState,\n              disableResize: !currState.disableResize,\n            }))\n          }\n        >\n          Toggle Draggable\n        </Button>\n        <hr />\n\n        <p>\n          Should autoclose when drags and drops the drawer below its height?{' '}\n          <strong>{`${!drawerConfig.disableDragClose}`}</strong>\n        </p>\n        <Button\n          type='button'\n          onClick={() =>\n            setDrawerConfig((currState) => ({\n              ...currState,\n              disableDragClose: !currState.disableDragClose,\n            }))\n          }\n        >\n          Toggle autoclose\n        </Button>\n\n        <hr />\n        <p>\n          Should prevent drawer from closing when users tap/click on the\n          backdrop or press Escape key?{' '}\n          <strong>{`${drawerConfig.preventClose}`}</strong>\n        </p>\n        <Button\n          css={{marginRight: '$4'}}\n          type='button'\n          onClick={() =>\n            setDrawerConfig((currState) => ({\n              ...currState,\n              preventClose: !currState.preventClose,\n            }))\n          }\n        >\n          Toggle prevent close\n        </Button>\n        {drawerConfig.preventClose && (\n          <Button\n            type='button'\n            variant='secondary'\n            onClick={() => {\n              setOpenDemoDrawer(false)\n              setDrawerConfig(h5DrawerDefaultConfig)\n            }}\n          >\n            Manually close drawer\n          </Button>\n        )}\n      </Drawer>\n\n      <Typography.Header variant='header4'>\n        Disable autofocus on the first nested focusable element\n      </Typography.Header>\n      <Typography.Body variant='body3' css={{marginBottom: '$4'}}>\n        By default, the Drawer will autofocus on the first nested focusable\n        element after opening.\n        <br />\n        To disable that, set <code>preventFocus</code> to true\n      </Typography.Body>\n      <Row>\n        <Button\n          css={{marginRight: '$4'}}\n          type='button'\n          onClick={() =>\n            setOpenNoFocusDrawer({\n              open: true,\n              preventFocus: true,\n            })\n          }\n        >\n          Normal drawer\n        </Button>\n        <Button\n          type='button'\n          variant='secondary'\n          onClick={() =>\n            setOpenNoFocusDrawer({\n              open: true,\n              preventFocus: false,\n            })\n          }\n        >\n          Autofocus prevented drawer\n        </Button>\n      </Row>\n\n      <Drawer\n        open={openNoFocusDrawer.open}\n        css={{height: '30dvh'}}\n        onClose={() => setOpenNoFocusDrawer({open: false, preventFocus: false})}\n        variant='h5'\n        expandedPoint={90}\n        expandableLine={50}\n        preventFocus={openNoFocusDrawer.preventFocus}\n      >\n        {openNoFocusDrawer.open && (\n          <>\n            <Typography.Body variant='body3'>\n              {!openNoFocusDrawer.preventFocus && 'Disable'}{' '}\n              <strong>Autofocus</strong> on the first focusable element - a\n              button at the bottom ⏬\n            </Typography.Body>\n\n            <Typography.Body\n              variant='body3'\n              css={{minHeight: '30vh', marginTop: '$10'}}\n            >\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Praesentium molestias voluptatem officia at repellat, voluptates\n              corrupti quod sunt necessitatibus delectus quae enim, temporibus\n              nisi, asperiores consectetur fugiat molestiae error itaque. Animi\n              ad ut eum cupiditate tempora reiciendis, doloremque quis corporis\n              ipsam aperiam explicabo voluptatum! Possimus tempore praesentium\n              suscipit non quisquam ea assumenda, eius sit illo ratione rem\n              consequatur est dignissimos? Similique animi dolor a fugiat modi\n              nostrum maiores possimus aliquid, repudiandae commodi, suscipit\n              aliquam eaque sint repellendus illum dolorem velit. Totam\n              necessitatibus accusamus tenetur, saepe distinctio illo maiores\n              facilis sapiente! Natus, ab. Omnis deleniti optio sunt debitis\n              odio placeat exercitationem tenetur sapiente atque quod neque\n              vitae, ipsum amet quas asperiores fugit corporis quo laboriosam\n              quibusdam iure porro. Ullam, veritatis totam. Qui reprehenderit\n              quidem reiciendis dolorum nisi molestias placeat sit enim culpa\n              hic quasi, doloribus, omnis quod ea eligendi architecto? Sint\n              alias voluptatem eveniet. Ipsa dolorem, maxime dolor excepturi\n              expedita consequuntur. Earum iste voluptatum, expedita vitae\n              temporibus optio dolor eius. Eveniet quae ipsum beatae! Pariatur\n              explicabo est fuga, suscipit nulla ad a eius porro minus eveniet\n              sed eligendi impedit adipisci quaerat.\n            </Typography.Body>\n\n            <Button\n              type='button'\n              variant='secondary'\n              onClick={() => console.log('Focusing button is clicked')}\n            >\n              A focusable element at the bottom\n            </Button>\n          </>\n        )}\n      </Drawer>\n    </Column>\n  )\n}\n",jsxPreview:" ",moduleTS:"./DrawerCustomize.tsx",rawTS:"import {\n  Button,\n  Column,\n  Drawer,\n  DrawerH5Props,\n  Row,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nconst h5DrawerDefaultConfig: Partial<DrawerH5Props> = {\n  disableResize: false,\n  disableDragClose: false,\n  preventClose: false,\n}\n\nexport default function DrawerCustomizeDocs() {\n  const [openDemoDrawer, setOpenDemoDrawer] = useState(false)\n  const [drawerConfig, setDrawerConfig] = useState<Partial<DrawerH5Props>>(\n    h5DrawerDefaultConfig,\n  )\n\n  const [openNoFocusDrawer, setOpenNoFocusDrawer] = useState({\n    open: false,\n    preventFocus: false,\n  })\n\n  return (\n    <Column>\n      <Typography.Header variant='header4'>\n        Resizable, drag to close and prevent the default closing behaviors.\n      </Typography.Header>\n      <Row css={{marginBottom: '$8'}}>\n        <Button type='button' onClick={() => setOpenDemoDrawer(true)}>\n          Open Customizable Drawer\n        </Button>\n      </Row>\n\n      <Drawer\n        {...drawerConfig}\n        open={openDemoDrawer}\n        css={{\n          height: '40dvh',\n          '& .drawer-content': {\n            button: {\n              marginBottom: '$4',\n            },\n          },\n        }}\n        onClose={() => {\n          setOpenDemoDrawer(false)\n          setDrawerConfig(h5DrawerDefaultConfig)\n        }}\n        variant='h5'\n      >\n        <p>\n          Resizable Drawer? <strong>{`${!drawerConfig.disableResize}`}</strong>\n        </p>\n        <Button\n          type='button'\n          onClick={() =>\n            setDrawerConfig((currState) => ({\n              ...currState,\n              disableResize: !currState.disableResize,\n            }))\n          }\n        >\n          Toggle Draggable\n        </Button>\n        <hr />\n\n        <p>\n          Should autoclose when drags and drops the drawer below its height?{' '}\n          <strong>{`${!drawerConfig.disableDragClose}`}</strong>\n        </p>\n        <Button\n          type='button'\n          onClick={() =>\n            setDrawerConfig((currState) => ({\n              ...currState,\n              disableDragClose: !currState.disableDragClose,\n            }))\n          }\n        >\n          Toggle autoclose\n        </Button>\n\n        <hr />\n        <p>\n          Should prevent drawer from closing when users tap/click on the\n          backdrop or press Escape key?{' '}\n          <strong>{`${drawerConfig.preventClose}`}</strong>\n        </p>\n        <Button\n          css={{marginRight: '$4'}}\n          type='button'\n          onClick={() =>\n            setDrawerConfig((currState) => ({\n              ...currState,\n              preventClose: !currState.preventClose,\n            }))\n          }\n        >\n          Toggle prevent close\n        </Button>\n        {drawerConfig.preventClose && (\n          <Button\n            type='button'\n            variant='secondary'\n            onClick={() => {\n              setOpenDemoDrawer(false)\n              setDrawerConfig(h5DrawerDefaultConfig)\n            }}\n          >\n            Manually close drawer\n          </Button>\n        )}\n      </Drawer>\n\n      <Typography.Header variant='header4'>\n        Disable autofocus on the first nested focusable element\n      </Typography.Header>\n      <Typography.Body variant='body3' css={{marginBottom: '$4'}}>\n        By default, the Drawer will autofocus on the first nested focusable\n        element after opening.\n        <br />\n        To disable that, set <code>preventFocus</code> to true\n      </Typography.Body>\n      <Row>\n        <Button\n          css={{marginRight: '$4'}}\n          type='button'\n          onClick={() =>\n            setOpenNoFocusDrawer({\n              open: true,\n              preventFocus: true,\n            })\n          }\n        >\n          Normal drawer\n        </Button>\n        <Button\n          type='button'\n          variant='secondary'\n          onClick={() =>\n            setOpenNoFocusDrawer({\n              open: true,\n              preventFocus: false,\n            })\n          }\n        >\n          Autofocus prevented drawer\n        </Button>\n      </Row>\n\n      <Drawer\n        open={openNoFocusDrawer.open}\n        css={{height: '30dvh'}}\n        onClose={() => setOpenNoFocusDrawer({open: false, preventFocus: false})}\n        variant='h5'\n        expandedPoint={90}\n        expandableLine={50}\n        preventFocus={openNoFocusDrawer.preventFocus}\n      >\n        {openNoFocusDrawer.open && (\n          <>\n            <Typography.Body variant='body3'>\n              {!openNoFocusDrawer.preventFocus && 'Disable'}{' '}\n              <strong>Autofocus</strong> on the first focusable element - a\n              button at the bottom ⏬\n            </Typography.Body>\n\n            <Typography.Body\n              variant='body3'\n              css={{minHeight: '30vh', marginTop: '$10'}}\n            >\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Praesentium molestias voluptatem officia at repellat, voluptates\n              corrupti quod sunt necessitatibus delectus quae enim, temporibus\n              nisi, asperiores consectetur fugiat molestiae error itaque. Animi\n              ad ut eum cupiditate tempora reiciendis, doloremque quis corporis\n              ipsam aperiam explicabo voluptatum! Possimus tempore praesentium\n              suscipit non quisquam ea assumenda, eius sit illo ratione rem\n              consequatur est dignissimos? Similique animi dolor a fugiat modi\n              nostrum maiores possimus aliquid, repudiandae commodi, suscipit\n              aliquam eaque sint repellendus illum dolorem velit. Totam\n              necessitatibus accusamus tenetur, saepe distinctio illo maiores\n              facilis sapiente! Natus, ab. Omnis deleniti optio sunt debitis\n              odio placeat exercitationem tenetur sapiente atque quod neque\n              vitae, ipsum amet quas asperiores fugit corporis quo laboriosam\n              quibusdam iure porro. Ullam, veritatis totam. Qui reprehenderit\n              quidem reiciendis dolorum nisi molestias placeat sit enim culpa\n              hic quasi, doloribus, omnis quod ea eligendi architecto? Sint\n              alias voluptatem eveniet. Ipsa dolorem, maxime dolor excepturi\n              expedita consequuntur. Earum iste voluptatum, expedita vitae\n              temporibus optio dolor eius. Eveniet quae ipsum beatae! Pariatur\n              explicabo est fuga, suscipit nulla ad a eius porro minus eveniet\n              sed eligendi impedit adipisci quaerat.\n            </Typography.Body>\n\n            <Button\n              type='button'\n              variant='secondary'\n              onClick={() => console.log('Focusing button is clicked')}\n            >\n              A focusable element at the bottom\n            </Button>\n          </>\n        )}\n      </Drawer>\n    </Column>\n  )\n}\n"}};nt.scope={process:{},import:{"@comfortdelgro/compass-icons/react/cross":N,"@comfortdelgro/react-compass":I,react:E,"@comfortdelgro/compass-icons/react/arrow-left":V,"@comfortdelgro/compass-icons/react/arrow-right":K,"@comfortdelgro/react-compass/list/list-image":Z,"@fortawesome/free-solid-svg-icons":_,"@fortawesome/react-fontawesome":G}};var nr={"./Drawer.tsx":function(){var n=(0,z.useState)(!1),e=n[0],o=n[1],m=(0,z.useState)(""),h=m[0],g=m[1];return(0,Q.jsxs)(I.Column,{children:[t||(t=(0,Q.jsx)(I.Typography.Header,{variant:"header4",children:"Drawer controlled by form"})),(0,Q.jsx)(I.Row,{css:{marginBlock:"$4"},children:(0,Q.jsx)(I.Button,{type:"button",onClick:function(){return o(!0)},children:"Open Drawer"})}),r||(r=(0,Q.jsx)(I.Typography.Body,{variant:"body2",children:"Submitted form values:"})),(0,Q.jsx)("pre",{children:J()({keyword:h},null,2)}),(0,Q.jsxs)(I.Drawer,{open:e,onClose:function(){o(!1)},children:[(0,Q.jsxs)(I.Drawer.Header,{children:[a||(a=(0,Q.jsx)(I.Typography.Header,{variant:"header3",children:"Drawer controlled by form"})),(0,Q.jsx)(I.Button,{css:{padding:"$1",svg:{width:"fit-content !important"}},type:"button",variant:"ghost",onClick:function(){return o(!1)},children:i||(i=(0,Q.jsx)(N.default,{}))})]}),s||(s=(0,Q.jsx)(I.Typography.Header,{variant:"header4",children:"Drawer Form"})),(0,Q.jsx)(I.Typography.Body,{variant:"body3",css:{color:"$grayShades60",marginBottom:"$4"},children:"In this example, all inputs are uncontrolled input."}),(0,Q.jsxs)("form",{id:"form-in-drawer",method:"dialog",onSubmit:function(n){n.preventDefault();var e=new FormData(n.currentTarget);g(e.get("keyword")||""),e.get("keepFormValue")||n.currentTarget.reset(),o(!1)},children:[l||(l=(0,Q.jsx)(I.TextField,{label:"Keyword",name:"keyword",id:"keyword",placeholder:"Enter anything"})),d||(d=(0,Q.jsx)("label",{htmlFor:"keepValue",children:"Keep form value: "})),(0,Q.jsx)("input",{name:"keepFormValue",type:"checkbox",id:"keepValue",style:{marginTop:"1rem"}})]}),(0,Q.jsx)(I.Divider,{css:{marginBlock:"$4"}}),(0,Q.jsx)(I.Typography.Header,{variant:"header4",css:{marginTop:"$16"},children:"Article contents"}),(0,Q.jsxs)("section",{style:{height:"50vh"},children:[(0,Q.jsx)(I.Typography.Header,{variant:"header5",css:{position:"sticky",insetInline:0,top:"-1rem",paddingBlock:"1rem",marginBlock:0,backgroundColor:"white"},children:"Section 1: Very long content here, scroll down ⏬ for more content"}),c||(c=(0,Q.jsx)(I.Typography.Body,{variant:"body3",children:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo molestiae tenetur in, dicta veniam quisquam iste officia deleniti, nemo cum nesciunt repudiandae fugiat sapiente nihil eius ut culpa quis modi."}))]}),(0,Q.jsxs)("section",{style:{height:"100vh"},children:[(0,Q.jsx)(I.Typography.Header,{variant:"header5",css:{position:"sticky",insetInline:0,top:"-1rem",paddingBlock:"1rem",marginBlock:0,backgroundColor:"white"},children:"Section 2: No idea"}),p||(p=(0,Q.jsx)(I.Typography.Body,{variant:"body3",children:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo molestiae tenetur in, dicta veniam quisquam iste officia deleniti, nemo cum nesciunt repudiandae fugiat sapiente nihil eius ut culpa quis modi. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatem quidem omnis architecto aliquam id dicta dolor magnam, sapiente, itaque quaerat laboriosam reiciendis placeat tempore animi ratione! Neque doloribus vel esse."}))]}),(0,Q.jsxs)(I.Drawer.Footer,{css:{display:"flex",gap:"$2"},children:[(0,Q.jsx)(I.Button,{variant:"secondary",form:"form-in-drawer",type:"reset",onClick:function(){return o(!1)},children:"Cancel"}),u||(u=(0,Q.jsx)(I.Button,{form:"form-in-drawer",type:"submit",children:"Submit"}))]})]})]})},"./DrawerPosition.tsx":function(){var n=(0,z.useState)(!1),e=n[0],o=n[1],t=(0,z.useState)(void 0),r=t[0],a=t[1],i=function(n){a(n),o(!0)},s=function(){o(!1)};return(0,Q.jsxs)(I.Column,{children:[(0,Q.jsxs)(I.Row,{children:[(0,Q.jsx)(I.Button,{type:"button",leftIcon:m||(m=(0,Q.jsx)(V.default,{})),onClick:function(){return i("left")},children:"Open on the left"}),(0,Q.jsx)(I.Button,{variant:"secondary",type:"button",onClick:function(){return i("bottom")},children:"Open on the bottom"}),(0,Q.jsx)(I.Button,{type:"button",rightIcon:h||(h=(0,Q.jsx)(K.default,{})),onClick:function(){return i("right")},children:"Open on the right"})]}),(0,Q.jsxs)(I.Drawer,{open:e,onClose:s,position:r,children:[(0,Q.jsx)(I.Drawer.Header,{children:(0,Q.jsxs)("h2",{children:["Drawer ",r||""]})}),g||(g=(0,Q.jsx)("p",{children:"Article contents"})),(0,Q.jsx)(I.Button,{type:"button",onClick:s,children:"Close Drawer"})]})]})},"./DrawerH5.tsx":function(){var n=(0,z.useState)(!1),e=n[0],o=n[1],t=(0,z.useState)(!1),r=t[0],a=t[1],i=X()(Array(10).keys()).map(function(n){return(0,Q.jsx)(I.List,{title:"ComfortRIDE ".concat(n),description:"Car or Taxi, Flat Fare",descriptionIcon:n%2==1?(0,Q.jsx)(G.FontAwesomeIcon,{style:{width:14,height:14,color:"#0142AF"},icon:_.faFaceSmile}):void 0,variant:"h5",leftInfo:f||(f=(0,Q.jsx)(Z.default,{variant:"h5",isRounded:!0,src:"https://images.pexels.com/photos/777059/pexels-photo-777059.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500",alt:"singapore"})),rightInfo:{text:"$9.90",description:"Fees may apply",icon:y||(y=(0,Q.jsx)(G.FontAwesomeIcon,{icon:_.faChevronRight}))},onClick:function(){return console.log("Ride selected:",n)}},n)});return(0,Q.jsxs)(I.Column,{children:[w||(w=(0,Q.jsx)(I.Typography.Header,{variant:"header4",children:"Default"})),(0,Q.jsx)(I.Row,{css:{marginBlock:"$4"},children:(0,Q.jsx)(I.Button,{type:"button",onClick:function(){return o(!0)},children:"Open H5 Drawer"})}),(0,Q.jsxs)(I.Drawer,{open:e,css:{height:"40dvh","& .drawer-content":{padding:0}},onClose:function(){return o(!1)},variant:"h5",children:[(0,Q.jsx)(I.Typography.Body,{variant:"body2",css:{textAlign:"center",paddingBlock:"$4"},children:"Pull up for more rides"}),(0,Q.jsx)(I.Column,{children:i})]}),b||(b=(0,Q.jsx)(I.Typography.Header,{variant:"header4",children:"Dropdown"})),(0,Q.jsx)(I.Row,{css:{marginBlock:"$4"},children:(0,Q.jsx)(I.Button,{type:"button",onClick:function(){return a(!0)},children:"Modal & Dropdown"})}),(0,Q.jsx)(I.Modal.Trigger,{isOpen:r,size:"sm",handleClose:function(){return a(!1)},children:(0,Q.jsx)(I.Modal,{children:(0,Q.jsxs)(I.Modal.Description,{css:{display:"flex",flexDirection:"column"},children:[(0,Q.jsx)(I.Typography.Label,{variant:"label1",css:{textAlign:"center"},children:"Trip is cancelled. No Payment is required."}),(0,Q.jsx)(W,{onClickDropdown:function(){return o(!0)}}),v||(v=(0,Q.jsx)(I.Button,{type:"button",variant:"primary",h5:!0,children:"Submit"}))]})})}),(0,Q.jsxs)(I.Drawer,{open:e,css:{height:"40dvh","& .drawer-content":{padding:0}},onClose:function(){return o(!1)},variant:"h5",disableResize:!0,children:[(0,Q.jsx)(I.Typography.Body,{variant:"body2",css:{textAlign:"center",paddingBlock:"$4"},children:"Select Reason"}),(0,Q.jsx)(I.Column,{children:(0,Q.jsxs)(I.Radio.Group,{orientation:"vertical",children:[(0,Q.jsx)(I.Radio,{description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit",value:"1",css:{width:"100%"}}),(0,Q.jsx)(I.Radio,{description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit",value:"2",css:{width:"100%"}})]})})]})]})},"./DrawerMode.tsx":function(){var n=(0,z.useState)(!1),e=n[0],o=n[1],t=(0,z.useState)(!1),r=t[0],a=t[1];return(0,Q.jsxs)(I.Column,{children:[(0,Q.jsx)(I.Row,{children:(0,Q.jsx)(I.Button,{type:"button",variant:"secondary",onClick:function(){return o(!e)},children:"Toggle Non-modal Drawer"})}),(0,Q.jsxs)(I.Drawer,{open:e,css:{height:"30dvh"},expanderCSS:{background:"$blueShades100",paddingBlock:"$2 $6"},onClose:function(){return o(!1)},variant:"h5",expandedPoint:70,expandableLine:60,drawerMode:"non-modal",children:[(0,Q.jsxs)(I.Drawer.Header,{css:{display:"flex",paddingTop:0,gap:"$2",justifyContent:"space-between",backgroundColor:"$blueShades100"},children:[(0,Q.jsx)(I.Typography.Body,{variant:"body3",weight:"semibold",css:{color:"$grayShades10",width:"fit-content"},children:"Your ride is on the way"}),(0,Q.jsx)(I.Typography.Body,{variant:"body3",weight:"semibold",css:{color:"$grayShades10",width:"fit-content"},children:"Arriving in 8 - 10 min"})]}),(0,Q.jsxs)(I.Typography.Body,{variant:"body3",css:{marginBlock:"$4"},children:["To close this drawer:",x||(x=(0,Q.jsx)("br",{})),C||(C=(0,Q.jsx)("strong",{children:"Drag to bottom"}))," ⏬ of the screen or"," ",k||(k=(0,Q.jsx)("strong",{children:"confirm"}))," the modal that opened by button below or",B||(B=(0,Q.jsx)("br",{}))," just ",T||(T=(0,Q.jsx)("strong",{children:"tap"}))," on the button that open it (the"," ",S||(S=(0,Q.jsx)("q",{children:"Toggle Non-modal Drawer"}))," button)."]}),(0,Q.jsx)(I.Button,{type:"button",variant:"secondary",onClick:function(){return a(!0)},children:"Open confirm modal"}),(0,Q.jsx)(I.Modal.Trigger,{isOpen:r,handleClose:function(){return a(!1)},children:(0,Q.jsxs)(I.Modal,{css:{display:"flex",flexDirection:"column"},children:[j||(j=(0,Q.jsx)(I.Modal.Title,{children:"Please confirm"})),(0,Q.jsx)(I.Modal.Description,{css:{flex:1},children:"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Molestias reprehenderit animi ducimus facere perspiciatis, quod deserunt, necessitatibus voluptatibus ipsam harum rerum cumque, vero tempore ipsum praesentium quas veniam expedita magnam."}),(0,Q.jsxs)(I.Modal.Actions,{children:[(0,Q.jsx)(I.Button,{variant:"ghost",onClick:function(){return a(!1)},css:{marginRight:"4px"},children:"Cancel"}),(0,Q.jsx)(I.Button,{variant:"danger",onClick:function(){a(!1),o(!1)},children:"Proceed"})]})]})})]})]})},"./DrawerCustomize.tsx":function(){var n=(0,z.useState)(!1),e=n[0],o=n[1],t=(0,z.useState)(nn),r=t[0],a=t[1],i=(0,z.useState)({open:!1,preventFocus:!1}),s=i[0],l=i[1];return(0,Q.jsxs)(I.Column,{children:[q||(q=(0,Q.jsx)(I.Typography.Header,{variant:"header4",children:"Resizable, drag to close and prevent the default closing behaviors."})),(0,Q.jsx)(I.Row,{css:{marginBottom:"$8"},children:(0,Q.jsx)(I.Button,{type:"button",onClick:function(){return o(!0)},children:"Open Customizable Drawer"})}),(0,Q.jsxs)(I.Drawer,(0,L.Z)((0,L.Z)({},r),{},{open:e,css:{height:"40dvh","& .drawer-content":{button:{marginBottom:"$4"}}},onClose:function(){o(!1),a(nn)},variant:"h5",children:[(0,Q.jsxs)("p",{children:["Resizable Drawer? ",(0,Q.jsx)("strong",{children:"".concat(!r.disableResize)})]}),(0,Q.jsx)(I.Button,{type:"button",onClick:function(){return a(function(n){return(0,L.Z)((0,L.Z)({},n),{},{disableResize:!n.disableResize})})},children:"Toggle Draggable"}),R||(R=(0,Q.jsx)("hr",{})),(0,Q.jsxs)("p",{children:["Should autoclose when drags and drops the drawer below its height?"," ",(0,Q.jsx)("strong",{children:"".concat(!r.disableDragClose)})]}),(0,Q.jsx)(I.Button,{type:"button",onClick:function(){return a(function(n){return(0,L.Z)((0,L.Z)({},n),{},{disableDragClose:!n.disableDragClose})})},children:"Toggle autoclose"}),M||(M=(0,Q.jsx)("hr",{})),(0,Q.jsxs)("p",{children:["Should prevent drawer from closing when users tap/click on the backdrop or press Escape key?"," ",(0,Q.jsx)("strong",{children:"".concat(r.preventClose)})]}),(0,Q.jsx)(I.Button,{css:{marginRight:"$4"},type:"button",onClick:function(){return a(function(n){return(0,L.Z)((0,L.Z)({},n),{},{preventClose:!n.preventClose})})},children:"Toggle prevent close"}),r.preventClose&&(0,Q.jsx)(I.Button,{type:"button",variant:"secondary",onClick:function(){o(!1),a(nn)},children:"Manually close drawer"})]})),H||(H=(0,Q.jsx)(I.Typography.Header,{variant:"header4",children:"Disable autofocus on the first nested focusable element"})),(0,Q.jsxs)(I.Typography.Body,{variant:"body3",css:{marginBottom:"$4"},children:["By default, the Drawer will autofocus on the first nested focusable element after opening.",O||(O=(0,Q.jsx)("br",{})),"To disable that, set ",F||(F=(0,Q.jsx)("code",{children:"preventFocus"}))," to true"]}),(0,Q.jsxs)(I.Row,{children:[(0,Q.jsx)(I.Button,{css:{marginRight:"$4"},type:"button",onClick:function(){return l({open:!0,preventFocus:!0})},children:"Normal drawer"}),(0,Q.jsx)(I.Button,{type:"button",variant:"secondary",onClick:function(){return l({open:!0,preventFocus:!1})},children:"Autofocus prevented drawer"})]}),(0,Q.jsx)(I.Drawer,{open:s.open,css:{height:"30dvh"},onClose:function(){return l({open:!1,preventFocus:!1})},variant:"h5",expandedPoint:90,expandableLine:50,preventFocus:s.preventFocus,children:s.open&&(0,Q.jsxs)(Q.Fragment,{children:[(0,Q.jsxs)(I.Typography.Body,{variant:"body3",children:[!s.preventFocus&&"Disable"," ",P||(P=(0,Q.jsx)("strong",{children:"Autofocus"}))," on the first focusable element - a button at the bottom ⏬"]}),(0,Q.jsx)(I.Typography.Body,{variant:"body3",css:{minHeight:"30vh",marginTop:"$10"},children:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Praesentium molestias voluptatem officia at repellat, voluptates corrupti quod sunt necessitatibus delectus quae enim, temporibus nisi, asperiores consectetur fugiat molestiae error itaque. Animi ad ut eum cupiditate tempora reiciendis, doloremque quis corporis ipsam aperiam explicabo voluptatum! Possimus tempore praesentium suscipit non quisquam ea assumenda, eius sit illo ratione rem consequatur est dignissimos? Similique animi dolor a fugiat modi nostrum maiores possimus aliquid, repudiandae commodi, suscipit aliquam eaque sint repellendus illum dolorem velit. Totam necessitatibus accusamus tenetur, saepe distinctio illo maiores facilis sapiente! Natus, ab. Omnis deleniti optio sunt debitis odio placeat exercitationem tenetur sapiente atque quod neque vitae, ipsum amet quas asperiores fugit corporis quo laboriosam quibusdam iure porro. Ullam, veritatis totam. Qui reprehenderit quidem reiciendis dolorum nisi molestias placeat sit enim culpa hic quasi, doloribus, omnis quod ea eligendi architecto? Sint alias voluptatem eveniet. Ipsa dolorem, maxime dolor excepturi expedita consequuntur. Earum iste voluptatum, expedita vitae temporibus optio dolor eius. Eveniet quae ipsum beatae! Pariatur explicabo est fuga, suscipit nulla ad a eius porro minus eveniet sed eligendi impedit adipisci quaerat."}),(0,Q.jsx)(I.Button,{type:"button",variant:"secondary",onClick:function(){return console.log("Focusing button is clicked")},children:"A focusable element at the bottom"})]})})]})}},na={"components/common/ComponentLinkHeader.tsx":ne.Z};function ni(){return(0,Q.jsx)(A.Z,(0,L.Z)({},$))}},22025:function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/drawer",function(){return o(51451)}])},49336:function(n,e,o){"use strict";o.r(e);var t=o(52983);let r=(0,t.forwardRef)((n,e)=>t.createElement("svg",{width:"1em",height:"1em",viewBox:"0 0 32 32",ref:e,...n},t.createElement("g",{fill:"currentColor"},t.createElement("path",{d:"M30.1165 25.8816C31.2883 27.0534 31.2883 28.9517 30.1165 30.1235C29.5353 30.7094 28.7666 31 27.9979 31C27.2292 31 26.4624 30.7071 25.8774 30.1212L15.9988 20.2477L6.12116 30.1188C5.53527 30.7094 4.76752 31 3.99977 31C3.23201 31 2.4652 30.7094 1.87884 30.1188C0.707054 28.947 0.707054 27.0487 1.87884 25.877L11.7593 15.9965L1.87884 6.12069C0.707054 4.94891 0.707054 3.05062 1.87884 1.87884C3.05062 0.707054 4.94891 0.707054 6.12069 1.87884L15.9988 11.764L25.8793 1.88353C27.0511 0.711742 28.9494 0.711742 30.1212 1.88353C31.2929 3.05531 31.2929 4.9536 30.1212 6.12538L20.2407 16.0059L30.1165 25.8816Z"}))));e.default=r}},function(n){n.O(0,[4308,8553,964,9958,31,9774,2888,179],function(){return n(n.s=22025)}),_N_E=n.O()}]);