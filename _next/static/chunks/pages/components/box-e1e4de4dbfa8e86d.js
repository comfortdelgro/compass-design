(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1045],{74710:function(t,n,d){"use strict";d.d(n,{Z:function(){return l}});var r,e,o=d(38443),s=d(54284),i=d.n(s),a=d(97458);function l(){return(0,a.jsxs)(o.Flexbox,{css:{marginBottom:"$4"},children:[(0,a.jsx)(i(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:r||(r=(0,a.jsx)(o.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,a.jsx)(i(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:e||(e=(0,a.jsx)(o.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},98165:function(t,n,d){"use strict";d.r(n),d.d(n,{default:function(){return C}});var r,e,o,s,i,a,l,c,p,g={};d.r(g),d.d(g,{demoComponents:function(){return B},demos:function(){return w},docs:function(){return v},srcComponents:function(){return k}});var h=d(80208),m=d(34706),x=d(38443),u=d(52983),y=d.t(u,2),f=d(97458),b=d(74710),v={en:{description:"The Box component serves as a wrapper component for most of the CSS utility needs.",location:"/docs/data/components/box/box.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Box</h1><p class="description">The Box component serves as a wrapper component for most of the CSS utility needs.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>Box<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or</p>\n<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/box\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="example">Example<a aria-labelledby="example" class="anchor-link" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="element-mapping">Element mapping<a aria-labelledby="element-mapping" class="anchor-link" href="#element-mapping" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"BoxElementMapping.tsx"},'<h3 id="dynamic-styling">Dynamic styling<a aria-labelledby="dynamic-styling" class="anchor-link" href="#dynamic-styling" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"BoxDynamicStyling.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>border</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>borderBottom</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>borderColor</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>borderLeft</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>borderRadius</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>borderRight</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>borderTop</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>boxShadow</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>displayPrint</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>displayRaw</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>alignContent</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>alignItems</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>alignSelf</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>flex</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>flexDirection</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>flexGrow</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>flexShrink</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>flexWrap</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>justifyContent</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>order</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gap</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>columnGap</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>rowGap</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridColumn</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridRow</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridAutoFlow</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridAutoColumns</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridAutoRows</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridTemplateColumns</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridTemplateRows</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridTemplateAreas</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridArea</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bgcolor</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>color</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bottom</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>left</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>position</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>right</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>top</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>zIndex</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>height</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>maxHeight</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>maxWidth</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>minHeight</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>minWidth</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>width</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>boxSizing</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>margin</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginBottom</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginLeft</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginRight</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginTop</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginX</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginY</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginInline</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginInlineStart</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginInlineEnd</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginBlock</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginBlockStart</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>marginBlockEnd</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>padding</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>paddingBottom</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>paddingLeft</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>paddingRight</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>paddingTop</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>paddingX</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>paddingY</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>paddingInline</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>paddingInlineStart</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Example",level:2,hash:"example",children:[{text:"Element mapping",level:3,hash:"element-mapping"},{text:"Dynamic styling",level:3,hash:"dynamic-styling"}]},{text:"Props",level:2,hash:"props",children:[]}],title:"React Box component",headers:{title:"React Box component",components:["Box"],hooks:[]}}},w={"BoxElementMapping.tsx":{module:"./BoxElementMapping.tsx",raw:"import {Box, Column, TextField} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nconst ElementMapping: React.FC = () => {\n  const [inputValue, setInputValue] = useState<string | number>('')\n  return (\n    <Column>\n      <section>\n        <h3>'as' prop</h3>\n        The 'as' prop refers to the HTML element that the Box component should\n        render as. By default, the Box component will render as a div element,\n        but if you pass a different value to the as prop, it will render as that\n        element instead.\n      </section>\n      <h3>Box as 'div' Element - default option</h3>\n      <Box\n        css={{\n          backgroundColor: 'grey',\n          width: '8rem',\n          textAlign: 'center',\n        }}\n      >\n        <TextField\n          value={inputValue}\n          onChange={(value) => setInputValue(value)}\n        />\n      </Box>\n      <h3>Box as 'h2' Element</h3>\n      <Box as='h2' color='red'>\n        <p>My 'div' box</p>\n      </Box>\n    </Column>\n  )\n}\n\nexport default ElementMapping\n",jsxPreview:"<Box\r\n    css={{\r\n        backgroundColor: 'grey',\r\n        width: '8rem',\r\n        textAlign: 'center',\r\n    }}\r\n    >\r\n    <TextField\r\n        value={inputValue}\r\n        onChange={(value) => setInputValue(value)}\r\n    />\r\n</Box>\r\n\r\n<Box as='h2' color='red'>\r\n    <p>My 'div' box</p>\r\n</Box>",moduleTS:"./BoxElementMapping.tsx",rawTS:"import {Box, Column, TextField} from '@comfortdelgro/react-compass'\nimport {useState} from 'react'\n\nconst ElementMapping: React.FC = () => {\n  const [inputValue, setInputValue] = useState<string | number>('')\n  return (\n    <Column>\n      <section>\n        <h3>'as' prop</h3>\n        The 'as' prop refers to the HTML element that the Box component should\n        render as. By default, the Box component will render as a div element,\n        but if you pass a different value to the as prop, it will render as that\n        element instead.\n      </section>\n      <h3>Box as 'div' Element - default option</h3>\n      <Box\n        css={{\n          backgroundColor: 'grey',\n          width: '8rem',\n          textAlign: 'center',\n        }}\n      >\n        <TextField\n          value={inputValue}\n          onChange={(value) => setInputValue(value)}\n        />\n      </Box>\n      <h3>Box as 'h2' Element</h3>\n      <Box as='h2' color='red'>\n        <p>My 'div' box</p>\n      </Box>\n    </Column>\n  )\n}\n\nexport default ElementMapping\n"},"BoxDynamicStyling.tsx":{module:"./BoxDynamicStyling.tsx",raw:"import {Box, Column} from '@comfortdelgro/react-compass'\n\nconst DynamicStyling: React.FC = () => {\n  return (\n    <Column>\n      <h3>\n        To style the Box component, you can use both 'css' and 'style' props.\n      </h3>\n      <h3>\n        1. Styling with 'css' prop, giving you much more power than the regular\n        'style' prop.\n      </h3>\n      <Box\n        css={{\n          backgroundColor: 'grey',\n          width: '8rem',\n          textAlign: 'center',\n          '& p': {\n            color: 'white',\n          },\n        }}\n      >\n        <p>My box</p>\n      </Box>\n      <h3>1. Styling with 'style' prop</h3>\n      <Box\n        style={{\n          backgroundColor: 'grey',\n          width: '8rem',\n          textAlign: 'center',\n          color: 'red',\n        }}\n      >\n        <p>My box</p>\n      </Box>\n    </Column>\n  )\n}\n\nexport default DynamicStyling\n",jsxPreview:"<Box\r\n    css={{\r\n        backgroundColor: 'grey',\r\n        width: '8rem',\r\n        textAlign: 'center',\r\n        '& p': {\r\n        color: 'white',\r\n        },\r\n    }}\r\n>\r\n    <p>My box</p>\r\n</Box>\r\n\r\n<Box\r\n    style={{\r\n        backgroundColor: 'grey',\r\n        width: '8rem',\r\n        textAlign: 'center',\r\n        color: 'red',\r\n    }}\r\n>\r\n<p>My box</p>\r\n</Box>",moduleTS:"./BoxDynamicStyling.tsx",rawTS:"import {Box, Column} from '@comfortdelgro/react-compass'\n\nconst DynamicStyling: React.FC = () => {\n  return (\n    <Column>\n      <h3>\n        To style the Box component, you can use both 'css' and 'style' props.\n      </h3>\n      <h3>\n        1. Styling with 'css' prop, giving you much more power than the regular\n        'style' prop.\n      </h3>\n      <Box\n        css={{\n          backgroundColor: 'grey',\n          width: '8rem',\n          textAlign: 'center',\n          '& p': {\n            color: 'white',\n          },\n        }}\n      >\n        <p>My box</p>\n      </Box>\n      <h3>1. Styling with 'style' prop</h3>\n      <Box\n        style={{\n          backgroundColor: 'grey',\n          width: '8rem',\n          textAlign: 'center',\n          color: 'red',\n        }}\n      >\n        <p>My box</p>\n      </Box>\n    </Column>\n  )\n}\n\nexport default DynamicStyling\n"}};w.scope={process:{},import:{"@comfortdelgro/react-compass":x,react:y}};var B={"./BoxElementMapping.tsx":function(){var t=(0,u.useState)(""),n=t[0],d=t[1];return(0,f.jsxs)(x.Column,{children:[r||(r=(0,f.jsxs)("section",{children:[(0,f.jsx)("h3",{children:"'as' prop"}),"The 'as' prop refers to the HTML element that the Box component should render as. By default, the Box component will render as a div element, but if you pass a different value to the as prop, it will render as that element instead."]})),e||(e=(0,f.jsx)("h3",{children:"Box as 'div' Element - default option"})),(0,f.jsx)(x.Box,{css:{backgroundColor:"grey",width:"8rem",textAlign:"center"},children:(0,f.jsx)(x.TextField,{value:n,onChange:function(t){return d(t)}})}),o||(o=(0,f.jsx)("h3",{children:"Box as 'h2' Element"})),s||(s=(0,f.jsx)(x.Box,{as:"h2",color:"red",children:(0,f.jsx)("p",{children:"My 'div' box"})}))]})},"./BoxDynamicStyling.tsx":function(){return(0,f.jsxs)(x.Column,{children:[i||(i=(0,f.jsx)("h3",{children:"To style the Box component, you can use both 'css' and 'style' props."})),a||(a=(0,f.jsx)("h3",{children:"1. Styling with 'css' prop, giving you much more power than the regular 'style' prop."})),(0,f.jsx)(x.Box,{css:{backgroundColor:"grey",width:"8rem",textAlign:"center","& p":{color:"white"}},children:l||(l=(0,f.jsx)("p",{children:"My box"}))}),c||(c=(0,f.jsx)("h3",{children:"1. Styling with 'style' prop"})),(0,f.jsx)(x.Box,{style:{backgroundColor:"grey",width:"8rem",textAlign:"center",color:"red"},children:p||(p=(0,f.jsx)("p",{children:"My box"}))})]})}},k={"components/common/ComponentLinkHeader.tsx":b.Z};function C(){return(0,f.jsx)(m.Z,(0,h.Z)({},g))}},40307:function(t,n,d){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/box",function(){return d(98165)}])}},function(t){t.O(0,[4308,7633,6471,9102,4706,9774,2888,179],function(){return t(t.s=40307)}),_N_E=t.O()}]);