(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3559],{37166:function(e,n,o){"use strict";o.d(n,{Z:function(){return i}});var r,l,a=o(38443),t=o(48329),s=o.n(t),c=o(97458);function i(){return(0,c.jsxs)(a.Flexbox,{css:{marginBottom:"$4"},children:[(0,c.jsx)(s(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:r||(r=(0,c.jsx)(a.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,c.jsx)(s(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:l||(l=(0,c.jsx)(a.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},19618:function(e,n,o){"use strict";o.r(n),o.d(n,{default:function(){return P}});var r,l,a,t,s,c,i,d,p,h,m,u,g,y,x,b,f={};o.r(f),o.d(f,{demoComponents:function(){return C},demos:function(){return k},docs:function(){return A},srcComponents:function(){return D}});var T=o(2815),w=o(30031),F=o(38443),v=o(66580),L=o(81583),I=o(52983),E=o.t(I,2),R=o(12717),N=o(97458),j=(0,N.jsx)("input",{value:"+64",onChange:function(){},style:{fontSize:"0.8em",lineHeight:"1em",display:"flex",justifyContent:"center",alignItems:"center",appearance:"none",border:"none",width:"3rem"}}),B=o(37166),A={en:{description:"Text Fields let users enter and edit text.",location:"/docs/data/components/textfield/textfield.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Text Field</h1><p class="description">Text Fields let users enter and edit text.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>Textfield<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or</p>\n<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Textfield <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/textfield\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="example">Example<a aria-labelledby="example" class="anchor-link" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="basic">Basic<a aria-labelledby="basic" class="anchor-link" href="#basic" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"Textfield.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>placeholder</code></td>\n<td align="left"><code>string</code> | <code>null</code></td>\n<td align="left"><code>null</code></td>\n<td align="left"><code>Placeholder of the text field</code></td>\n</tr>\n<tr>\n<td align="left"><code>label</code></td>\n<td align="left"><code>string</code> | <code>null</code></td>\n<td align="left"><code>null</code></td>\n<td align="left"><code>Label of the text field</code></td>\n</tr>\n<tr>\n<td align="left"><code>helperText</code></td>\n<td align="left"><code>string</code> | <code>null</code></td>\n<td align="left">—</td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="left"><code>isErrored</code></td>\n<td align="left"><code>true</code> | <code>false</code></td>\n<td align="left"><code>false</code></td>\n<td align="left"><code>Throw error when input value is wrong</code></td>\n</tr>\n<tr>\n<td align="left"><code>value</code></td>\n<td align="left"><code>string</code></td>\n<td align="left">—</td>\n<td align="left"><code>Input value</code></td>\n</tr>\n<tr>\n<td align="left"><code>rightIcon</code></td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">-</td>\n<td align="left"><code>Icon placed on the right side of the text field</code></td>\n</tr>\n<tr>\n<td align="left"><code>leftIcon</code></td>\n<td align="left"><code>ReactNode</code></td>\n<td align="left">-</td>\n<td align="left"><code>Icon placed on the left side of the text field</code></td>\n</tr>\n<tr>\n<td align="left"><code>isDisabled</code></td>\n<td align="left"><code>false</code>| <code>true</code></td>\n<td align="left"><code>false</code></td>\n<td align="left"><code>Disable the text field when true</code></td>\n</tr>\n<tr>\n<td align="left"><code>css </code></td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="left"><code>inputRef </code></td>\n<td align="left"><code>React.RefObject&lt;HTMLInputElement&gt;</code></td>\n<td align="left">—</td>\n<td align="left"><code>Use useRef to control input tag inside TextField component</code></td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Example",level:2,hash:"example",children:[{text:"Basic",level:3,hash:"basic"}]},{text:"Props",level:2,hash:"props",children:[]}],title:"React Text Field component",headers:{title:"React Text Field component",components:["Textfield"],hooks:[]}}},k={"Textfield.tsx":{module:"./Textfield.tsx",raw:"import {Column, Row, TextField, Typography} from '@comfortdelgro/react-compass'\nimport {faBug} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport React from 'react'\n\nconst Select = (\n  <input\n    value={'+64'}\n    onChange={() => {\n      /* do nothing */\n    }}\n    style={{\n      fontSize: '0.8em',\n      lineHeight: '1em',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      appearance: 'none',\n      border: 'none',\n      width: '3rem',\n    }}\n  />\n)\n\nconst Variants: React.FC = () => {\n  const [value, setValue] = React.useState('')\n  return (\n    <Column>\n      <Row>\n        <TextField\n          type='number'\n          placeholder='Enter your name'\n          isErrored\n          helperText='my helper text'\n          errorMessage='my error message'\n          className='my-class'\n          onKeyDown={(e) => console.log('onKeyDownTest', e)}\n        />\n      </Row>\n      <Typography.Label>Controlled (min-max number input)</Typography.Label>\n      <Row>\n        <TextField\n          placeholder='Pick a number from 1 - 100'\n          value={value}\n          onChange={(value) => {\n            const valueAsNumber = Number(value)\n            if ((valueAsNumber >= 0 && valueAsNumber <= 100) || value === '') {\n              setValue(value as string)\n            }\n            return\n          }}\n        />\n      </Row>\n\n      <Typography.Label>With Label</Typography.Label>\n      <Row>\n        <TextField\n          label={\n            <>\n              Name <FontAwesomeIcon icon={faBug} />\n            </>\n          }\n          placeholder='Enter your name'\n          isRequired\n        />\n      </Row>\n\n      <Typography.Label>With Helper Text</Typography.Label>\n      <Row>\n        <TextField\n          label='Name'\n          placeholder='Enter your name'\n          helperText='Helper Text'\n        />\n      </Row>\n\n      <Typography.Label>Error</Typography.Label>\n      <Row>\n        <TextField\n          isErrored\n          label='Name'\n          placeholder='Enter your name'\n          helperText='This is helpers text'\n          errorMessage='Errror'\n        />\n      </Row>\n\n      <Typography.Label>With Icons</Typography.Label>\n      <Row>\n        <TextField\n          label='Name'\n          leftIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n        />\n        <TextField\n          label='Name'\n          rightIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n        />\n        <TextField\n          label='Name'\n          leftIcon={<FontAwesomeIcon icon={faBug} />}\n          rightIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n        />\n      </Row>\n\n      <Typography.Label>Disabled</Typography.Label>\n      <Row>\n        <TextField label='Name' placeholder='Enter your name' isDisabled />\n        <TextField\n          label='Name'\n          leftIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n          isDisabled\n        />\n        <TextField\n          label='Name'\n          rightIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n          isDisabled\n        />\n        <TextField\n          label='Name'\n          leftIcon={<FontAwesomeIcon icon={faBug} />}\n          rightIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n          isDisabled\n        />\n      </Row>\n      <Typography.Label>Prefix</Typography.Label>\n      <Row>\n        <TextField\n          label='Name'\n          prefix={Select}\n          placeholder='Enter your phone number'\n        />\n      </Row>\n      <Typography.Label>Password</Typography.Label>\n      <TextField\n        css={{width: '16rem'}}\n        label='Password'\n        placeholder='Enter your password'\n        helperText='Your password should contain at least 18 characters.'\n        password={true}\n      />\n      <Typography.Label>Max length</Typography.Label>\n      <TextField\n        css={{width: '16rem'}}\n        label='Password'\n        placeholder='This has a max length of 10'\n        helperText='Your input should be equal or less than 10 characters.'\n        maxLength={10}\n      />\n      <Typography.Label>Min length</Typography.Label>\n      <TextField\n        css={{width: '16rem'}}\n        label='Password'\n        placeholder='This has a min length of 5'\n        helperText='Your input should be equal or more than 5 characters.'\n        minLength={5}\n      />\n    </Column>\n  )\n}\n\nexport default Variants\n",jsxPreview:"<Column>\r\n    <Row>\r\n    <TextField\r\n        type='number'\r\n        placeholder='Enter your name'\r\n        isErrored\r\n        helperText='my helper text'\r\n        errorMessage='my error message'\r\n        className='my-class'\r\n        onKeyDown={(e) => console.log('onKeyDownTest', e)}\r\n    />\r\n    </Row>\r\n    <Typography.Label>Controlled (min-max number input)</Typography.Label>\r\n    <Row>\r\n    <TextField\r\n        placeholder='Pick a number from 1 - 100'\r\n        value={value}\r\n        onChange={(value) => {\r\n        const valueAsNumber = Number(value)\r\n        if ((valueAsNumber >= 0 && valueAsNumber <= 100) || value === '') {\r\n            setValue(value as string)\r\n        }\r\n        return\r\n        }}\r\n    />\r\n    </Row>\r\n\r\n    <Typography.Label>With Label</Typography.Label>\r\n    <Row>\r\n    <TextField\r\n        label={\r\n        <>\r\n            Name <FontAwesomeIcon icon={faBug} />\r\n        </>\r\n        }\r\n        placeholder='Enter your name'\r\n        isRequired\r\n    />\r\n    </Row>\r\n\r\n    <Typography.Label>With Helper Text</Typography.Label>\r\n    <Row>\r\n    <TextField\r\n        label='Name'\r\n        placeholder='Enter your name'\r\n        helperText='Helper Text'\r\n    />\r\n    </Row>\r\n\r\n    <Typography.Label>Error</Typography.Label>\r\n    <Row>\r\n    <TextField\r\n        isErrored\r\n        label='Name'\r\n        placeholder='Enter your name'\r\n        helperText='This is helpers text'\r\n        errorMessage='Errror'\r\n    />\r\n    </Row>\r\n\r\n    <Typography.Label>With Icons</Typography.Label>\r\n    <Row>\r\n    <TextField\r\n        label='Name'\r\n        leftIcon={<FontAwesomeIcon icon={faBug} />}\r\n        placeholder='Enter your name'\r\n    />\r\n    <TextField\r\n        label='Name'\r\n        rightIcon={<FontAwesomeIcon icon={faBug} />}\r\n        placeholder='Enter your name'\r\n    />\r\n    <TextField\r\n        label='Name'\r\n        leftIcon={<FontAwesomeIcon icon={faBug} />}\r\n        rightIcon={<FontAwesomeIcon icon={faBug} />}\r\n        placeholder='Enter your name'\r\n    />\r\n    </Row>\r\n\r\n    <Typography.Label>Disabled</Typography.Label>\r\n    <Row>\r\n    <TextField label='Name' placeholder='Enter your name' isDisabled />\r\n    <TextField\r\n        label='Name'\r\n        leftIcon={<FontAwesomeIcon icon={faBug} />}\r\n        placeholder='Enter your name'\r\n        isDisabled\r\n    />\r\n    <TextField\r\n        label='Name'\r\n        rightIcon={<FontAwesomeIcon icon={faBug} />}\r\n        placeholder='Enter your name'\r\n        isDisabled\r\n    />\r\n    <TextField\r\n        label='Name'\r\n        leftIcon={<FontAwesomeIcon icon={faBug} />}\r\n        rightIcon={<FontAwesomeIcon icon={faBug} />}\r\n        placeholder='Enter your name'\r\n        isDisabled\r\n    />\r\n    </Row>\r\n    <Typography.Label>Prefix</Typography.Label>\r\n    <Row>\r\n    <TextField\r\n        label='Name'\r\n        prefix={Select}\r\n        placeholder='Enter your phone number'\r\n    />\r\n    </Row>\r\n    <Typography.Label>Password</Typography.Label>\r\n    <TextField\r\n    css={{width: '16rem'}}\r\n    label='Password'\r\n    placeholder='Enter your password'\r\n    helperText='Your password should contain at least 18 characters.'\r\n    password={true}\r\n    />\r\n    <Typography.Label>Max length</Typography.Label>\r\n    <TextField\r\n    css={{width: '16rem'}}\r\n    label='Password'\r\n    placeholder='This has a max length of 10'\r\n    helperText='Your input should be equal or less than 10 characters.'\r\n    maxLength={10}\r\n    />\r\n    <Typography.Label>Min length</Typography.Label>\r\n    <TextField\r\n    css={{width: '16rem'}}\r\n    label='Password'\r\n    placeholder='This has a min length of 5'\r\n    helperText='Your input should be equal or more than 5 characters.'\r\n    minLength={5}\r\n    />\r\n</Column>",moduleTS:"./Textfield.tsx",rawTS:"import {Column, Row, TextField, Typography} from '@comfortdelgro/react-compass'\nimport {faBug} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport React from 'react'\n\nconst Select = (\n  <input\n    value={'+64'}\n    onChange={() => {\n      /* do nothing */\n    }}\n    style={{\n      fontSize: '0.8em',\n      lineHeight: '1em',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      appearance: 'none',\n      border: 'none',\n      width: '3rem',\n    }}\n  />\n)\n\nconst Variants: React.FC = () => {\n  const [value, setValue] = React.useState('')\n  return (\n    <Column>\n      <Row>\n        <TextField\n          type='number'\n          placeholder='Enter your name'\n          isErrored\n          helperText='my helper text'\n          errorMessage='my error message'\n          className='my-class'\n          onKeyDown={(e) => console.log('onKeyDownTest', e)}\n        />\n      </Row>\n      <Typography.Label>Controlled (min-max number input)</Typography.Label>\n      <Row>\n        <TextField\n          placeholder='Pick a number from 1 - 100'\n          value={value}\n          onChange={(value) => {\n            const valueAsNumber = Number(value)\n            if ((valueAsNumber >= 0 && valueAsNumber <= 100) || value === '') {\n              setValue(value as string)\n            }\n            return\n          }}\n        />\n      </Row>\n\n      <Typography.Label>With Label</Typography.Label>\n      <Row>\n        <TextField\n          label={\n            <>\n              Name <FontAwesomeIcon icon={faBug} />\n            </>\n          }\n          placeholder='Enter your name'\n          isRequired\n        />\n      </Row>\n\n      <Typography.Label>With Helper Text</Typography.Label>\n      <Row>\n        <TextField\n          label='Name'\n          placeholder='Enter your name'\n          helperText='Helper Text'\n        />\n      </Row>\n\n      <Typography.Label>Error</Typography.Label>\n      <Row>\n        <TextField\n          isErrored\n          label='Name'\n          placeholder='Enter your name'\n          helperText='This is helpers text'\n          errorMessage='Errror'\n        />\n      </Row>\n\n      <Typography.Label>With Icons</Typography.Label>\n      <Row>\n        <TextField\n          label='Name'\n          leftIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n        />\n        <TextField\n          label='Name'\n          rightIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n        />\n        <TextField\n          label='Name'\n          leftIcon={<FontAwesomeIcon icon={faBug} />}\n          rightIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n        />\n      </Row>\n\n      <Typography.Label>Disabled</Typography.Label>\n      <Row>\n        <TextField label='Name' placeholder='Enter your name' isDisabled />\n        <TextField\n          label='Name'\n          leftIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n          isDisabled\n        />\n        <TextField\n          label='Name'\n          rightIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n          isDisabled\n        />\n        <TextField\n          label='Name'\n          leftIcon={<FontAwesomeIcon icon={faBug} />}\n          rightIcon={<FontAwesomeIcon icon={faBug} />}\n          placeholder='Enter your name'\n          isDisabled\n        />\n      </Row>\n      <Typography.Label>Prefix</Typography.Label>\n      <Row>\n        <TextField\n          label='Name'\n          prefix={Select}\n          placeholder='Enter your phone number'\n        />\n      </Row>\n      <Typography.Label>Password</Typography.Label>\n      <TextField\n        css={{width: '16rem'}}\n        label='Password'\n        placeholder='Enter your password'\n        helperText='Your password should contain at least 18 characters.'\n        password={true}\n      />\n      <Typography.Label>Max length</Typography.Label>\n      <TextField\n        css={{width: '16rem'}}\n        label='Password'\n        placeholder='This has a max length of 10'\n        helperText='Your input should be equal or less than 10 characters.'\n        maxLength={10}\n      />\n      <Typography.Label>Min length</Typography.Label>\n      <TextField\n        css={{width: '16rem'}}\n        label='Password'\n        placeholder='This has a min length of 5'\n        helperText='Your input should be equal or more than 5 characters.'\n        minLength={5}\n      />\n    </Column>\n  )\n}\n\nexport default Variants\n"}};k.scope={process:{},import:{"@comfortdelgro/react-compass":F,"@fortawesome/free-solid-svg-icons":v,"@fortawesome/react-fontawesome":L,react:E}};var C={"./Textfield.tsx":function(){var e=I.useState(""),n=(0,R.Z)(e,2),o=n[0],f=n[1];return(0,N.jsxs)(F.Column,{children:[(0,N.jsx)(F.Row,{children:(0,N.jsx)(F.TextField,{type:"number",placeholder:"Enter your name",isErrored:!0,helperText:"my helper text",errorMessage:"my error message",className:"my-class",onKeyDown:function(e){return console.log("onKeyDownTest",e)}})}),r||(r=(0,N.jsx)(F.Typography.Label,{children:"Controlled (min-max number input)"})),(0,N.jsx)(F.Row,{children:(0,N.jsx)(F.TextField,{placeholder:"Pick a number from 1 - 100",value:o,onChange:function(e){var n=Number(e);(n>=0&&n<=100||""===e)&&f(e)}})}),l||(l=(0,N.jsx)(F.Typography.Label,{children:"With Label"})),a||(a=(0,N.jsx)(F.Row,{children:(0,N.jsx)(F.TextField,{label:(0,N.jsxs)(N.Fragment,{children:["Name ",(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug})]}),placeholder:"Enter your name",isRequired:!0})})),t||(t=(0,N.jsx)(F.Typography.Label,{children:"With Helper Text"})),s||(s=(0,N.jsx)(F.Row,{children:(0,N.jsx)(F.TextField,{label:"Name",placeholder:"Enter your name",helperText:"Helper Text"})})),c||(c=(0,N.jsx)(F.Typography.Label,{children:"Error"})),i||(i=(0,N.jsx)(F.Row,{children:(0,N.jsx)(F.TextField,{isErrored:!0,label:"Name",placeholder:"Enter your name",helperText:"This is helpers text",errorMessage:"Errror"})})),d||(d=(0,N.jsx)(F.Typography.Label,{children:"With Icons"})),p||(p=(0,N.jsxs)(F.Row,{children:[(0,N.jsx)(F.TextField,{label:"Name",leftIcon:(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug}),placeholder:"Enter your name"}),(0,N.jsx)(F.TextField,{label:"Name",rightIcon:(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug}),placeholder:"Enter your name"}),(0,N.jsx)(F.TextField,{label:"Name",leftIcon:(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug}),rightIcon:(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug}),placeholder:"Enter your name"})]})),h||(h=(0,N.jsx)(F.Typography.Label,{children:"Disabled"})),m||(m=(0,N.jsxs)(F.Row,{children:[(0,N.jsx)(F.TextField,{label:"Name",placeholder:"Enter your name",isDisabled:!0}),(0,N.jsx)(F.TextField,{label:"Name",leftIcon:(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug}),placeholder:"Enter your name",isDisabled:!0}),(0,N.jsx)(F.TextField,{label:"Name",rightIcon:(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug}),placeholder:"Enter your name",isDisabled:!0}),(0,N.jsx)(F.TextField,{label:"Name",leftIcon:(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug}),rightIcon:(0,N.jsx)(L.FontAwesomeIcon,{icon:v.faBug}),placeholder:"Enter your name",isDisabled:!0})]})),u||(u=(0,N.jsx)(F.Typography.Label,{children:"Prefix"})),g||(g=(0,N.jsx)(F.Row,{children:(0,N.jsx)(F.TextField,{label:"Name",prefix:j,placeholder:"Enter your phone number"})})),y||(y=(0,N.jsx)(F.Typography.Label,{children:"Password"})),(0,N.jsx)(F.TextField,{css:{width:"16rem"},label:"Password",placeholder:"Enter your password",helperText:"Your password should contain at least 18 characters.",password:!0}),x||(x=(0,N.jsx)(F.Typography.Label,{children:"Max length"})),(0,N.jsx)(F.TextField,{css:{width:"16rem"},label:"Password",placeholder:"This has a max length of 10",helperText:"Your input should be equal or less than 10 characters.",maxLength:10}),b||(b=(0,N.jsx)(F.Typography.Label,{children:"Min length"})),(0,N.jsx)(F.TextField,{css:{width:"16rem"},label:"Password",placeholder:"This has a min length of 5",helperText:"Your input should be equal or more than 5 characters.",minLength:5})]})}},D={"components/common/ComponentLinkHeader.tsx":B.Z};function P(){return(0,N.jsx)(w.Z,(0,T.Z)({},f))}},4045:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/textfield",function(){return o(19618)}])}},function(e){e.O(0,[4308,8553,964,9958,31,9774,2888,179],function(){return e(e.s=4045)}),_N_E=e.O()}]);