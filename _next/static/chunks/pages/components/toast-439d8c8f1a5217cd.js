(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7449],{93279:function(t,n,e){"use strict";e.d(n,{Z:function(){return l}});var o,s,a=e(15393),i=e(16371),r=e.n(i),c=e(31549);function l(){return(0,c.jsxs)(a.Flexbox,{style:{marginBottom:"var(--cdg-spacing-4)"},children:[(0,c.jsx)(r(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:o||(o=(0,c.jsx)(a.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,c.jsx)(r(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:s||(s=(0,c.jsx)(a.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},9777:function(t,n,e){"use strict";e.r(n),e.d(n,{default:function(){return tn}});var o,s,a,i,r,c,l,d,u,m,h,f,T,p,g,x,I,v,w,C,k,B,b,y,O,S,j,D,A,L,M,R,z,P,H,X,F={};e.r(F),e.d(F,{demoComponents:function(){return Y},demos:function(){return Q},docs:function(){return $},srcComponents:function(){return tt}});var V=e(26098),W=e(43866),K=e(15393),_=e(42096),N=e(44194),Z=e.t(N,2),E=e(73804),q=e(31549),J=function(){var t=(0,K.useToast)();return(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(K.Button,{css:{width:"fit-content"},onClick:function(){return t.show({color:"informative",title:"Lorem ipsum dolor, sit amet consectetur"})},children:"Open toast"}),(0,q.jsx)(K.Button,{css:{width:"fit-content"},onClick:function(){return t.show({title:"Lorem ipsum dolor, sit amet consectetur",hasCloseIcon:!1})},children:"Open toast without close button"})]})},U=function(){var t=(0,K.useToast)();return(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(K.Button,{css:{width:"fit-content"},onClick:function(){return t.show({autoClose:!1,message:"Lorem ipsum dolor, sit amet consectetur.",icon:O||(O=(0,q.jsx)(K.Icon,{icon:_.faImage})),title:"My Title",actions:(0,q.jsxs)(q.Fragment,{children:[S||(S=(0,q.jsx)(K.Button,{children:"Take action"})),j||(j=(0,q.jsx)(K.Button,{children:"Take action"}))]}),label:"a few minutes ago"})},children:"Open toast autoClose: false"}),(0,q.jsx)(K.Button,{css:{width:"fit-content"},onClick:function(){return t.clearAll()},children:"Clear all toasts"})]})},G=e(93279),$={en:{description:"Toasts provide brief notifications.",location:"/docs/data/components/toast/toast.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Toast</h1><p class="description">Toasts provide brief notifications.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>Toast<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="examples">Examples<a aria-labelledby="examples" class="anchor-link" href="#examples" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="default">Default<a aria-labelledby="default" class="anchor-link" href="#default" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"ToastDefault.tsx"},'<h3 id="color">Color<a aria-labelledby="color" class="anchor-link" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"ToastColor.tsx"},'<h3 id="with-header">With Header<a aria-labelledby="with-header" class="anchor-link" href="#with-header" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"ToastWithHeader.tsx"},'<h3 id="auto-close">Auto Close<a aria-labelledby="auto-close" class="anchor-link" href="#auto-close" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"ToastAutoClose.tsx"},'<h3 id="toast-as-a-service">Toast as a service<a aria-labelledby="toast-as-a-service" class="anchor-link" href="#toast-as-a-service" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h4>Note: Toast As AService has an API that makes it easy to display toasts, without having to handle their open/close state.</h4><h4>Store multiple toasts and display them in the same container.</h4>',{demo:"ToastAsAService.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="toast-gt"><code>&lt;Toast/&gt;</code><a aria-labelledby="toast-gt" class="anchor-link" href="#toast-gt" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">color</td>\n<td align="left"><code>informative</code> | <code>neutral</code> | <code>negative</code> | <code>positive</code></td>\n<td align="left">&#39;neutral&#39;</td>\n<td align="left">Variants</td>\n</tr>\n<tr>\n<td align="left">handleClose</td>\n<td align="left"><code>Function</code></td>\n<td align="left">-</td>\n<td align="left">Callback to close toast.</td>\n</tr>\n<tr>\n<td align="left">isOpen</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">The toast is visible when true.</td>\n</tr>\n<tr>\n<td align="left">autoClose</td>\n<td align="left"><code>false</code> | <code>number</code></td>\n<td align="left">false</td>\n<td align="left">Number of miliseconds to auto close.</td>\n</tr>\n<tr>\n<td align="left">css</td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left">The system prop that allows defining system overrides as well as additional CSS styles.</td>\n</tr>\n<tr>\n<td align="left">portalTo</td>\n<td align="left"><code>HTMLElement</code></td>\n<td align="left">-</td>\n<td align="left">Using ReactPortals to create portal to an element, example document.body</td>\n</tr>\n<tr>\n<td align="left">anchorOrigin</td>\n<td align="left"><code>Anchor</code></td>\n<td align="left"><code>{horizontal: &#39;center&#39;, vertical: &#39;center&#39;}</code></td>\n<td align="left">Placements of Toast.</td>\n</tr>\n<tr>\n<td align="left">withHeader</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Add new white background for header</td>\n</tr>\n</tbody></table>\n<h3 id="usetoast"><code>useToast()</code><a aria-labelledby="usetoast" class="anchor-link" href="#usetoast" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h5>Used for Children component located in Toast Context Provider to add/remove current Toast</h5><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">show</td>\n<td align="left"><code>Function</code></td>\n<td align="left">-</td>\n<td align="left">Call to add toast to show in ToastContainer.</td>\n</tr>\n<tr>\n<td align="left">remove</td>\n<td align="left"><code>Function</code></td>\n<td align="left">-</td>\n<td align="left">Call to remove toast from ToastContext.</td>\n</tr>\n<tr>\n<td align="left">clearAll</td>\n<td align="left"><code>Function</code></td>\n<td align="left">—</td>\n<td align="left">Call to remove all toasts from ToastContext.</td>\n</tr>\n</tbody></table>\n<h3 id="toastcontextprovider"><code>ToastContextProvider</code><a aria-labelledby="toastcontextprovider" class="anchor-link" href="#toastcontextprovider" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><h5>Store multiple toasts and display them in the same container and handle toast&#39;s open/close state.</h5><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">anchorOrigin</td>\n<td align="left"><code>Anchor</code></td>\n<td align="left"><code>{horizontal: &#39;right&#39;, vertical: &#39;top&#39;}</code></td>\n<td align="left">Placements of ToastContainer.</td>\n</tr>\n<tr>\n<td align="left">toastItemClassName</td>\n<td align="left"><code>String</code></td>\n<td align="left">—</td>\n<td align="left">Class name of the ToastItem.</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Examples",level:2,hash:"examples",children:[{text:"Default",level:3,hash:"default"},{text:"Color",level:3,hash:"color"},{text:"With Header",level:3,hash:"with-header"},{text:"Auto Close",level:3,hash:"auto-close"},{text:"Toast as a service",level:3,hash:"toast-as-a-service"}]},{text:"Props",level:2,hash:"props",children:[{text:"<code>&lt;Toast/&gt;</code>",level:3,hash:"toast-gt"},{text:"<code>useToast(&#8203;)</code>",level:3,hash:"usetoast"},{text:"<code>ToastContextProvider</code>",level:3,hash:"toastcontextprovider"}]}],title:"React Page Toast component",headers:{title:"React Page Toast component",components:["Toast"],hooks:[]}}},Q={"ToastDefault.tsx":{module:"./ToastDefault.tsx",raw:"import {Button, Icon, Toast} from '@comfortdelgro/react-compass'\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst Default: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <>\n      <Button css={{width: '8rem'}} onPress={() => setIsOpen(true)}>\n        Open toast\n      </Button>\n      <Toast isOpen={isOpen} handleClose={() => setIsOpen(false)}>\n        <Toast.Icon>\n          <Icon icon={faImage} />\n        </Toast.Icon>\n        <Toast.Title>My Title</Toast.Title>\n        <Toast.Label>a few minutes ago</Toast.Label>\n        <Toast.CloseIcon>\n          <Icon icon={faXmark} />\n        </Toast.CloseIcon>\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n        <Toast.Actions>\n          <Button>Take action</Button>\n          <Button>Take action</Button>\n        </Toast.Actions>\n      </Toast>\n    </>\n  )\n}\n\nexport default Default\n",jsxPreview:"<Toast isOpen={isOpen} handleClose={() => setIsOpen(false)}>\n  <Toast.Icon>\n    <Icon icon={faImage} />\n  </Toast.Icon>\n  <Toast.Title>My Title</Toast.Title>\n  <Toast.Label>a few minutes ago</Toast.Label>\n  <Toast.CloseIcon>\n    <Icon icon={faXmark} />\n  </Toast.CloseIcon>\n  <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n  <Toast.Actions>\n    <Button>Take action</Button>\n    <Button>Take action</Button>\n  </Toast.Actions>\n</Toast>",moduleTS:"./ToastDefault.tsx",rawTS:"import {Button, Icon, Toast} from '@comfortdelgro/react-compass'\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst Default: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <>\n      <Button css={{width: '8rem'}} onPress={() => setIsOpen(true)}>\n        Open toast\n      </Button>\n      <Toast isOpen={isOpen} handleClose={() => setIsOpen(false)}>\n        <Toast.Icon>\n          <Icon icon={faImage} />\n        </Toast.Icon>\n        <Toast.Title>My Title</Toast.Title>\n        <Toast.Label>a few minutes ago</Toast.Label>\n        <Toast.CloseIcon>\n          <Icon icon={faXmark} />\n        </Toast.CloseIcon>\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n        <Toast.Actions>\n          <Button>Take action</Button>\n          <Button>Take action</Button>\n        </Toast.Actions>\n      </Toast>\n    </>\n  )\n}\n\nexport default Default\n"},"ToastColor.tsx":{module:"./ToastColor.tsx",raw:"import {Button, Icon, Toast} from '@comfortdelgro/react-compass'\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst Colors: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <>\n      <Button css={{width: '8rem'}} onPress={() => setIsOpen(true)}>\n        Open toast\n      </Button>\n      <Toast\n        isOpen={isOpen}\n        handleClose={() => setIsOpen(false)}\n        color='positive'\n        anchorOrigin={{horizontal: 'center', vertical: 'center'}}\n      >\n        <Toast.Icon>\n          <Icon icon={faImage} />\n        </Toast.Icon>\n        <Toast.Title>My Title</Toast.Title>\n        <Toast.Label>a few minutes ago</Toast.Label>\n        <Toast.CloseIcon>\n          <Icon icon={faXmark} />\n        </Toast.CloseIcon>\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n        <Toast.Actions>\n          <Button>Take action</Button>\n          <Button>Take action</Button>\n        </Toast.Actions>\n      </Toast>\n    </>\n  )\n}\n\nexport default Colors\n",jsxPreview:"<Toast\n  isOpen={isOpen}\n  handleClose={() => setIsOpen(false)}\n  color='positive'\n  anchorOrigin={{horizontal: 'center', vertical: 'center'}}\n>\n  <Toast.Icon>\n    <Icon icon={faImage} />\n  </Toast.Icon>\n  <Toast.Title>My Title</Toast.Title>\n  <Toast.Label>a few minutes ago</Toast.Label>\n  <Toast.CloseIcon>\n    <Icon icon={faXmark} />\n  </Toast.CloseIcon>\n  <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n  <Toast.Actions>\n    <Button>Take action</Button>\n    <Button>Take action</Button>\n  </Toast.Actions>\n</Toast>",moduleTS:"./ToastColor.tsx",rawTS:"import {Button, Icon, Toast} from '@comfortdelgro/react-compass'\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst Colors: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <>\n      <Button css={{width: '8rem'}} onPress={() => setIsOpen(true)}>\n        Open toast\n      </Button>\n      <Toast\n        isOpen={isOpen}\n        handleClose={() => setIsOpen(false)}\n        color='positive'\n        anchorOrigin={{horizontal: 'center', vertical: 'center'}}\n      >\n        <Toast.Icon>\n          <Icon icon={faImage} />\n        </Toast.Icon>\n        <Toast.Title>My Title</Toast.Title>\n        <Toast.Label>a few minutes ago</Toast.Label>\n        <Toast.CloseIcon>\n          <Icon icon={faXmark} />\n        </Toast.CloseIcon>\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n        <Toast.Actions>\n          <Button>Take action</Button>\n          <Button>Take action</Button>\n        </Toast.Actions>\n      </Toast>\n    </>\n  )\n}\n\nexport default Colors\n"},"ToastWithHeader.tsx":{module:"./ToastWithHeader.tsx",raw:"import {Button, Icon, Toast} from '@comfortdelgro/react-compass'\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst WithHeader: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  return (\n    <>\n      <Button css={{width: '8rem'}} onPress={() => setIsOpen(true)}>\n        Open toast\n      </Button>\n      <Toast\n        withHeader\n        isOpen={isOpen}\n        handleClose={() => setIsOpen(false)}\n        color='informative'\n        anchorOrigin={{horizontal: 'center', vertical: 'center'}}\n      >\n        <Toast.Icon>\n          <Icon icon={faImage} />\n        </Toast.Icon>\n        <Toast.Title>My Title</Toast.Title>\n        <Toast.Label>a few minutes ago</Toast.Label>\n        <Toast.CloseIcon>\n          <Icon icon={faXmark} />\n        </Toast.CloseIcon>\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n        <Toast.Actions>\n          <Button>Take action</Button>\n          <Button>Take action</Button>\n        </Toast.Actions>\n      </Toast>\n    </>\n  )\n}\n\nexport default WithHeader\n",jsxPreview:"<Toast\n  withHeader\n  isOpen={isOpen}\n  handleClose={() => setIsOpen(false)}\n  color='informative'\n  anchorOrigin={{horizontal: 'center', vertical: 'center'}}\n>\n  <Toast.Icon>\n    <Icon icon={faImage} />\n  </Toast.Icon>\n  <Toast.Title>My Title</Toast.Title>\n  <Toast.Label>a few minutes ago</Toast.Label>\n  <Toast.CloseIcon>\n    <Icon icon={faXmark} />\n  </Toast.CloseIcon>\n  <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n  <Toast.Actions>\n    <Button>Take action</Button>\n    <Button>Take action</Button>\n  </Toast.Actions>\n</Toast>",moduleTS:"./ToastWithHeader.tsx",rawTS:"import {Button, Icon, Toast} from '@comfortdelgro/react-compass'\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst WithHeader: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  return (\n    <>\n      <Button css={{width: '8rem'}} onPress={() => setIsOpen(true)}>\n        Open toast\n      </Button>\n      <Toast\n        withHeader\n        isOpen={isOpen}\n        handleClose={() => setIsOpen(false)}\n        color='informative'\n        anchorOrigin={{horizontal: 'center', vertical: 'center'}}\n      >\n        <Toast.Icon>\n          <Icon icon={faImage} />\n        </Toast.Icon>\n        <Toast.Title>My Title</Toast.Title>\n        <Toast.Label>a few minutes ago</Toast.Label>\n        <Toast.CloseIcon>\n          <Icon icon={faXmark} />\n        </Toast.CloseIcon>\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n        <Toast.Actions>\n          <Button>Take action</Button>\n          <Button>Take action</Button>\n        </Toast.Actions>\n      </Toast>\n    </>\n  )\n}\n\nexport default WithHeader\n"},"ToastAutoClose.tsx":{module:"./ToastAutoClose.tsx",raw:"import {Button, Icon, Toast} from '@comfortdelgro/react-compass'\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst AutoClose: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  return (\n    <>\n      <Button css={{width: '8rem'}} onPress={() => setIsOpen(true)}>\n        Open toast\n      </Button>\n      <Toast\n        isOpen={isOpen}\n        handleClose={() => setIsOpen(false)}\n        autoClose={1000}\n      >\n        <Toast.Icon>\n          <Icon icon={faImage} />\n        </Toast.Icon>\n        <Toast.Title>My Title</Toast.Title>\n        <Toast.Label>a few minutes ago</Toast.Label>\n        <Toast.CloseIcon>\n          <Icon icon={faXmark} />\n        </Toast.CloseIcon>\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n        <Toast.Actions>\n          <Button>Take action</Button>\n          <Button>Take action</Button>\n        </Toast.Actions>\n      </Toast>\n    </>\n  )\n}\n\nexport default AutoClose\n",jsxPreview:"<Toast\n  isOpen={isOpen}\n  handleClose={() => setIsOpen(false)}\n  autoClose={1000}\n>\n  <Toast.Icon>\n    <Icon icon={faImage} />\n  </Toast.Icon>\n  <Toast.Title>My Title</Toast.Title>\n  <Toast.Label>a few minutes ago</Toast.Label>\n  <Toast.CloseIcon>\n    <Icon icon={faXmark} />\n  </Toast.CloseIcon>\n  <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n  <Toast.Actions>\n    <Button>Take action</Button>\n    <Button>Take action</Button>\n  </Toast.Actions>\n</Toast>",moduleTS:"./ToastAutoClose.tsx",rawTS:"import {Button, Icon, Toast} from '@comfortdelgro/react-compass'\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst AutoClose: React.FC = () => {\n  const [isOpen, setIsOpen] = React.useState(false)\n  return (\n    <>\n      <Button css={{width: '8rem'}} onPress={() => setIsOpen(true)}>\n        Open toast\n      </Button>\n      <Toast\n        isOpen={isOpen}\n        handleClose={() => setIsOpen(false)}\n        autoClose={1000}\n      >\n        <Toast.Icon>\n          <Icon icon={faImage} />\n        </Toast.Icon>\n        <Toast.Title>My Title</Toast.Title>\n        <Toast.Label>a few minutes ago</Toast.Label>\n        <Toast.CloseIcon>\n          <Icon icon={faXmark} />\n        </Toast.CloseIcon>\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\n        <Toast.Actions>\n          <Button>Take action</Button>\n          <Button>Take action</Button>\n        </Toast.Actions>\n      </Toast>\n    </>\n  )\n}\n\nexport default AutoClose\n"},"ToastAsAService.tsx":{module:"./ToastAsAService.tsx",raw:"import {\n  Button,\n  Dropdown,\n  Icon,\n  ToastContextProvider,\n  useToast,\n} from '@comfortdelgro/react-compass'\nimport {faImage} from '@fortawesome/free-solid-svg-icons'\nimport React, {Key} from 'react'\n\ntype DirectionHorizontal = 'center' | 'left' | 'right'\ntype DirectionVertical = 'center' | 'top' | 'bottom'\n\nconst SubService1 = () => {\n  const toast = useToast()\n  return (\n    <>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            color: 'informative',\n            title: 'Lorem ipsum dolor, sit amet consectetur',\n          })\n        }\n      >\n        Open toast\n      </Button>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            title: 'Lorem ipsum dolor, sit amet consectetur',\n            hasCloseIcon: false,\n          })\n        }\n      >\n        Open toast without close button\n      </Button>\n    </>\n  )\n}\n\nconst SubService2 = () => {\n  const toast = useToast()\n  return (\n    <>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            autoClose: false,\n            message: 'Lorem ipsum dolor, sit amet consectetur.',\n            icon: <Icon icon={faImage} />,\n            title: 'My Title',\n            actions: (\n              <>\n                <Button>Take action</Button>\n                <Button>Take action</Button>\n              </>\n            ),\n            label: 'a few minutes ago',\n          })\n        }\n      >\n        Open toast autoClose: false\n      </Button>\n      <Button css={{width: 'fit-content'}} onClick={() => toast.clearAll()}>\n        Clear all toasts\n      </Button>\n    </>\n  )\n}\n\nconst ToastAsService: React.FC = () => {\n  const [horizontal, setHorizontal] =\n    React.useState<DirectionHorizontal>('right')\n  const [vertical, setVertical] = React.useState<DirectionVertical>('top')\n\n  return (\n    <>\n      <Dropdown.Select\n        isRequired\n        label='Please select horizontal'\n        placeholder='Choose a horizontal'\n        selectedKey={horizontal}\n        onSelectionChange={(k: Key) => setHorizontal(k as DirectionHorizontal)}\n      >\n        <Dropdown.Item key='left'>Left</Dropdown.Item>\n        <Dropdown.Item key='center'>Center</Dropdown.Item>\n        <Dropdown.Item key='right'>Right</Dropdown.Item>\n      </Dropdown.Select>\n      <br />\n      <Dropdown.Select\n        isRequired\n        label='Please select vertical'\n        placeholder='Choose a vertical'\n        selectedKey={vertical}\n        onSelectionChange={(k: Key) => setVertical(k as DirectionVertical)}\n      >\n        <Dropdown.Item key='top'>Top</Dropdown.Item>\n        <Dropdown.Item key='center'>Center</Dropdown.Item>\n        <Dropdown.Item key='bottom'>Bottom</Dropdown.Item>\n      </Dropdown.Select>\n      <ToastContextProvider anchorOrigin={{horizontal, vertical}}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n            gap: '0.5rem',\n            margin: '1rem',\n          }}\n        >\n          <SubService1 />\n          <SubService2 />\n        </div>\n      </ToastContextProvider>\n    </>\n  )\n}\n\nexport default ToastAsService\n",jsxPreview:"<ToastContextProvider anchorOrigin={{horizontal, vertical}}>\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      gap: '0.5rem',\n      margin: '1rem',\n    }}\n  >\n    <SubService1 />\n    <SubService2 />\n  </div>\n</ToastContextProvider>\n\nconst SubService1 = () => {\n  const toast = useToast()\n  return (\n    <>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            color: 'informative',\n            title: 'Lorem ipsum dolor, sit amet consectetur',\n          })\n        }\n      >\n        Open toast\n      </Button>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            title: 'Lorem ipsum dolor, sit amet consectetur',\n            hasCloseIcon: false,\n          })\n        }\n      >\n        Open toast without close button\n      </Button>\n    </>\n  )\n}\n\nconst SubService2 = () => {\n  const toast = useToast()\n  return (\n    <>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            autoClose: false,\n            message: 'Lorem ipsum dolor, sit amet consectetur.',\n            icon: <Icon icon={faImage} />,\n            title: 'My Title',\n            actions: (\n              <>\n                <Button>Take action</Button>\n                <Button>Take action</Button>\n              </>\n            ),\n            label: 'a few minutes ago',\n          })\n        }\n      >\n        Open toast autoClose: false\n      </Button>\n      <Button css={{width: 'fit-content'}} onClick={() => toast.clearAll()}>\n        Clear all toasts\n      </Button>\n    </>\n  )\n}\n",moduleTS:"./ToastAsAService.tsx",rawTS:"import {\n  Button,\n  Dropdown,\n  Icon,\n  ToastContextProvider,\n  useToast,\n} from '@comfortdelgro/react-compass'\nimport {faImage} from '@fortawesome/free-solid-svg-icons'\nimport React, {Key} from 'react'\n\ntype DirectionHorizontal = 'center' | 'left' | 'right'\ntype DirectionVertical = 'center' | 'top' | 'bottom'\n\nconst SubService1 = () => {\n  const toast = useToast()\n  return (\n    <>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            color: 'informative',\n            title: 'Lorem ipsum dolor, sit amet consectetur',\n          })\n        }\n      >\n        Open toast\n      </Button>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            title: 'Lorem ipsum dolor, sit amet consectetur',\n            hasCloseIcon: false,\n          })\n        }\n      >\n        Open toast without close button\n      </Button>\n    </>\n  )\n}\n\nconst SubService2 = () => {\n  const toast = useToast()\n  return (\n    <>\n      <Button\n        css={{width: 'fit-content'}}\n        onClick={() =>\n          toast.show({\n            autoClose: false,\n            message: 'Lorem ipsum dolor, sit amet consectetur.',\n            icon: <Icon icon={faImage} />,\n            title: 'My Title',\n            actions: (\n              <>\n                <Button>Take action</Button>\n                <Button>Take action</Button>\n              </>\n            ),\n            label: 'a few minutes ago',\n          })\n        }\n      >\n        Open toast autoClose: false\n      </Button>\n      <Button css={{width: 'fit-content'}} onClick={() => toast.clearAll()}>\n        Clear all toasts\n      </Button>\n    </>\n  )\n}\n\nconst ToastAsService: React.FC = () => {\n  const [horizontal, setHorizontal] =\n    React.useState<DirectionHorizontal>('right')\n  const [vertical, setVertical] = React.useState<DirectionVertical>('top')\n\n  return (\n    <>\n      <Dropdown.Select\n        isRequired\n        label='Please select horizontal'\n        placeholder='Choose a horizontal'\n        selectedKey={horizontal}\n        onSelectionChange={(k: Key) => setHorizontal(k as DirectionHorizontal)}\n      >\n        <Dropdown.Item key='left'>Left</Dropdown.Item>\n        <Dropdown.Item key='center'>Center</Dropdown.Item>\n        <Dropdown.Item key='right'>Right</Dropdown.Item>\n      </Dropdown.Select>\n      <br />\n      <Dropdown.Select\n        isRequired\n        label='Please select vertical'\n        placeholder='Choose a vertical'\n        selectedKey={vertical}\n        onSelectionChange={(k: Key) => setVertical(k as DirectionVertical)}\n      >\n        <Dropdown.Item key='top'>Top</Dropdown.Item>\n        <Dropdown.Item key='center'>Center</Dropdown.Item>\n        <Dropdown.Item key='bottom'>Bottom</Dropdown.Item>\n      </Dropdown.Select>\n      <ToastContextProvider anchorOrigin={{horizontal, vertical}}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n            gap: '0.5rem',\n            margin: '1rem',\n          }}\n        >\n          <SubService1 />\n          <SubService2 />\n        </div>\n      </ToastContextProvider>\n    </>\n  )\n}\n\nexport default ToastAsService\n"}};Q.scope={process:{},import:{"@comfortdelgro/react-compass":K,"@fortawesome/free-solid-svg-icons":_,react:Z}};var Y={"./ToastDefault.tsx":function(){var t=N.useState(!1),n=(0,E.Z)(t,2),e=n[0],l=n[1];return(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(K.Button,{css:{width:"8rem"},onPress:function(){return l(!0)},children:"Open toast"}),(0,q.jsxs)(K.Toast,{isOpen:e,handleClose:function(){return l(!1)},children:[o||(o=(0,q.jsx)(K.Toast.Icon,{children:(0,q.jsx)(K.Icon,{icon:_.faImage})})),s||(s=(0,q.jsx)(K.Toast.Title,{children:"My Title"})),a||(a=(0,q.jsx)(K.Toast.Label,{children:"a few minutes ago"})),i||(i=(0,q.jsx)(K.Toast.CloseIcon,{children:(0,q.jsx)(K.Icon,{icon:_.faXmark})})),r||(r=(0,q.jsx)(K.Toast.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),c||(c=(0,q.jsxs)(K.Toast.Actions,{children:[(0,q.jsx)(K.Button,{children:"Take action"}),(0,q.jsx)(K.Button,{children:"Take action"})]}))]})]})},"./ToastColor.tsx":function(){var t=N.useState(!1),n=(0,E.Z)(t,2),e=n[0],o=n[1];return(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(K.Button,{css:{width:"8rem"},onPress:function(){return o(!0)},children:"Open toast"}),(0,q.jsxs)(K.Toast,{isOpen:e,handleClose:function(){return o(!1)},color:"positive",anchorOrigin:{horizontal:"center",vertical:"center"},children:[l||(l=(0,q.jsx)(K.Toast.Icon,{children:(0,q.jsx)(K.Icon,{icon:_.faImage})})),d||(d=(0,q.jsx)(K.Toast.Title,{children:"My Title"})),u||(u=(0,q.jsx)(K.Toast.Label,{children:"a few minutes ago"})),m||(m=(0,q.jsx)(K.Toast.CloseIcon,{children:(0,q.jsx)(K.Icon,{icon:_.faXmark})})),h||(h=(0,q.jsx)(K.Toast.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),f||(f=(0,q.jsxs)(K.Toast.Actions,{children:[(0,q.jsx)(K.Button,{children:"Take action"}),(0,q.jsx)(K.Button,{children:"Take action"})]}))]})]})},"./ToastWithHeader.tsx":function(){var t=N.useState(!1),n=(0,E.Z)(t,2),e=n[0],o=n[1];return(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(K.Button,{css:{width:"8rem"},onPress:function(){return o(!0)},children:"Open toast"}),(0,q.jsxs)(K.Toast,{withHeader:!0,isOpen:e,handleClose:function(){return o(!1)},color:"informative",anchorOrigin:{horizontal:"center",vertical:"center"},children:[T||(T=(0,q.jsx)(K.Toast.Icon,{children:(0,q.jsx)(K.Icon,{icon:_.faImage})})),p||(p=(0,q.jsx)(K.Toast.Title,{children:"My Title"})),g||(g=(0,q.jsx)(K.Toast.Label,{children:"a few minutes ago"})),x||(x=(0,q.jsx)(K.Toast.CloseIcon,{children:(0,q.jsx)(K.Icon,{icon:_.faXmark})})),I||(I=(0,q.jsx)(K.Toast.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),v||(v=(0,q.jsxs)(K.Toast.Actions,{children:[(0,q.jsx)(K.Button,{children:"Take action"}),(0,q.jsx)(K.Button,{children:"Take action"})]}))]})]})},"./ToastAutoClose.tsx":function(){var t=N.useState(!1),n=(0,E.Z)(t,2),e=n[0],o=n[1];return(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(K.Button,{css:{width:"8rem"},onPress:function(){return o(!0)},children:"Open toast"}),(0,q.jsxs)(K.Toast,{isOpen:e,handleClose:function(){return o(!1)},autoClose:1e3,children:[w||(w=(0,q.jsx)(K.Toast.Icon,{children:(0,q.jsx)(K.Icon,{icon:_.faImage})})),C||(C=(0,q.jsx)(K.Toast.Title,{children:"My Title"})),k||(k=(0,q.jsx)(K.Toast.Label,{children:"a few minutes ago"})),B||(B=(0,q.jsx)(K.Toast.CloseIcon,{children:(0,q.jsx)(K.Icon,{icon:_.faXmark})})),b||(b=(0,q.jsx)(K.Toast.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),y||(y=(0,q.jsxs)(K.Toast.Actions,{children:[(0,q.jsx)(K.Button,{children:"Take action"}),(0,q.jsx)(K.Button,{children:"Take action"})]}))]})]})},"./ToastAsAService.tsx":function(){var t=N.useState("right"),n=(0,E.Z)(t,2),e=n[0],o=n[1],s=N.useState("top"),a=(0,E.Z)(s,2),i=a[0],r=a[1];return(0,q.jsxs)(q.Fragment,{children:[(0,q.jsxs)(K.Dropdown.Select,{isRequired:!0,label:"Please select horizontal",placeholder:"Choose a horizontal",selectedKey:e,onSelectionChange:function(t){return o(t)},children:[D||(D=(0,q.jsx)(K.Dropdown.Item,{children:"Left"},"left")),A||(A=(0,q.jsx)(K.Dropdown.Item,{children:"Center"},"center")),L||(L=(0,q.jsx)(K.Dropdown.Item,{children:"Right"},"right"))]}),M||(M=(0,q.jsx)("br",{})),(0,q.jsxs)(K.Dropdown.Select,{isRequired:!0,label:"Please select vertical",placeholder:"Choose a vertical",selectedKey:i,onSelectionChange:function(t){return r(t)},children:[R||(R=(0,q.jsx)(K.Dropdown.Item,{children:"Top"},"top")),z||(z=(0,q.jsx)(K.Dropdown.Item,{children:"Center"},"center")),P||(P=(0,q.jsx)(K.Dropdown.Item,{children:"Bottom"},"bottom"))]}),(0,q.jsx)(K.ToastContextProvider,{anchorOrigin:{horizontal:e,vertical:i},children:(0,q.jsxs)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",flexWrap:"wrap",gap:"0.5rem",margin:"1rem"},children:[H||(H=(0,q.jsx)(J,{})),X||(X=(0,q.jsx)(U,{}))]})})]})}},tt={"components/common/ComponentLinkHeader.tsx":G.Z};function tn(){return(0,q.jsx)(W.Z,(0,V.Z)({},F))}},67233:function(t,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/toast",function(){return e(9777)}])}},function(t){t.O(0,[4308,9813,5675,3866,9774,2888,179],function(){return t(t.s=67233)}),_N_E=t.O()}]);