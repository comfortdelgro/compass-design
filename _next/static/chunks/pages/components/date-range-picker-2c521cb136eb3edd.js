(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9338],{99223:function(e,n,a){"use strict";a.d(n,{Z:function(){return d}});var t,r,l=a(15393),i=a(92274),o=a.n(i),s=a(97458);function d(){return(0,s.jsxs)(l.Flexbox,{style:{marginBottom:"var(--cdg-spacing-4)"},children:[(0,s.jsx)(o(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:t||(t=(0,s.jsx)(l.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,s.jsx)(o(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:r||(r=(0,s.jsx)(l.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},59371:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return S}});var t,r,l,i,o,s,d,c,g={};a.r(g),a.d(g,{demoComponents:function(){return w},demos:function(){return y},docs:function(){return x},srcComponents:function(){return C}});var u=a(26098),p=a(916),h=a(15393),f=a(52983),k=a.t(f,2),D=a(97458),m=a(73804),R=h.Calendar.InternationalizedDate,b=R.getLocalTimeZone,v=R.parseDate,P=a(99223),x={en:{description:"DateRangePickers combine two input fields and a RangeCalendar popover to allow users to enter or select a date and time range .",location:"/docs/data/components/date-range-picker/date-range-picker.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Date Range Picker</h1><p class="description">\nDateRangePickers combine two input fields and a RangeCalendar popover to allow users to enter or select a date and time range .</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<h2 id="import">Import<a aria-labelledby="import" class="anchor-link" href="#import" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><div class="cdg-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>DateRangePicker<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="i18n-provider">I18n Provider<a aria-labelledby="i18n-provider" class="anchor-link" href="#i18n-provider" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>I18nProvider allows you to override the default locale as determined by the browser/system setting with a locale defined by your application (e.g. application setting).\nIn this docs, we will use English(Singapore) <code>en-SG</code> as default locale</p>\n<div class="cdg-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>Calendar<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  I18nProvider\n<span class="token punctuation">}</span> <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token constant">I18N</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">I18nProvider</span></span> <span class="token attr-name">locale</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en-SG<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span><span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">I18nProvider</span></span><span class="token punctuation">></span></span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="basic-date-range-picker">Basic Date Range Picker<a aria-labelledby="basic-date-range-picker" class="anchor-link" href="#basic-date-range-picker" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DateRangePickerBasic.tsx"},'<h3 id="controlled-date-range-picker">Controlled Date Range Picker<a aria-labelledby="controlled-date-range-picker" class="anchor-link" href="#controlled-date-range-picker" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DateRangePickerControlled.tsx"},'<h3 id="granularity">Granularity<a aria-labelledby="granularity" class="anchor-link" href="#granularity" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The granularity prop allows you to control the smallest unit that is displayed by a DatePicker.</p>\n',{demo:"DateRangePickerGranularity.tsx"},'<h3 id="labeling">Labeling<a aria-labelledby="labeling" class="anchor-link" href="#labeling" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A visual label should be provided for the DatePicker using the label prop. If the DatePicker is required, the isRequired and necessityIndicator props can be used to show a required state.</p>\n',{demo:"DateRangePickerLabeling.tsx"},'<h3 id="validation">Validation<a aria-labelledby="validation" class="anchor-link" href="#validation" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Date Range Picker supports marking certain dates as unavailable. These dates cannot be selected by the user and are displayed with a crossed out appearance. The isDateUnavailable prop accepts a callback that is called to evaluate whether each visible date is unavailable.</p>\n',{demo:"DateRangePickerValidation.tsx"},'<h3 id="non-contiguous-ranges">Non-contiguous ranges<a aria-labelledby="non-contiguous-ranges" class="anchor-link" href="#non-contiguous-ranges" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DateRangePickerNonContiguous.tsx"},'<h3 id="shortcuts">Shortcuts<a aria-labelledby="shortcuts" class="anchor-link" href="#shortcuts" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DateRangePickerShortcuts.tsx"},'<h3 id="one-calendar-only">One Calendar Only<a aria-labelledby="one-calendar-only" class="anchor-link" href="#one-calendar-only" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DateRangePickerOneCalendar.tsx"},'<h3 id="isdisabled">IsDisabled<a aria-labelledby="isdisabled" class="anchor-link" href="#isdisabled" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DateRangePickerIsDisabled.tsx"},'<h3 id="read-only">Read Only<a aria-labelledby="read-only" class="anchor-link" href="#read-only" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DateRangePickerReadOnly.tsx"},'<h3 id="invalid">InValid<a aria-labelledby="invalid" class="anchor-link" href="#invalid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DateRangePickerInvalid.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">calendarCSS</td>\n<td align="left"><code>CSS</code></td>\n<td align="left"></td>\n<td align="left">Style for calendar</td>\n</tr>\n<tr>\n<td align="left">allowsNonContiguousRanges</td>\n<td align="left"><code>boolean</code></td>\n<td align="left"></td>\n<td align="left">When combined with isDateUnavailable, determines whether non-contiguous ranges, i.e. ranges containing unavailable dates, may be selected.</td>\n</tr>\n<tr>\n<td align="left">minValue</td>\n<td align="left"><code>DateValue</code></td>\n<td align="left"></td>\n<td align="left">The minimum allowed date that a user may select.</td>\n</tr>\n<tr>\n<td align="left">maxValue</td>\n<td align="left"><code>DateValue</code></td>\n<td align="left"></td>\n<td align="left">The maximum allowed date that a user may select.</td>\n</tr>\n<tr>\n<td align="left">granularity</td>\n<td align="left"><code>&#39;day&#39; | &#39;hour&#39; | &#39;minute&#39; | &#39;second&#39;</code></td>\n<td align="left"></td>\n<td align="left">Determines the smallest unit that is displayed in the date picker. By default, this is &quot;day&quot; for dates, and &quot;minute&quot; for times.</td>\n</tr>\n<tr>\n<td align="left">visibleMonths</td>\n<td align="left">1 | 2</td>\n<td align="left">2</td>\n<td align="left">Whether the range calendar shows 2 months consecutively or not.</td>\n</tr>\n<tr>\n<td align="left">isReadOnly</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the calendar value is immutable.</td>\n</tr>\n<tr>\n<td align="left">isDisabled</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the calendar is disabled.</td>\n</tr>\n<tr>\n<td align="left">value</td>\n<td align="left"><code>RangeValue&lt;DateValue&gt;</code></td>\n<td align="left"></td>\n<td align="left">The current value (controlled).</td>\n</tr>\n<tr>\n<td align="left">defaultValue</td>\n<td align="left"><code>RangeValue&lt;DateValue&gt;</code></td>\n<td align="left"></td>\n<td align="left">The default value (uncontrolled).</td>\n</tr>\n<tr>\n<td align="left">hourCycle</td>\n<td align="left"><code>12                                       | 24</code></td>\n<td align="left"></td>\n<td align="left">Whether to display the time in 12 or 24 hour format. By default, this is determined by the user&#39;s locale.</td>\n</tr>\n<tr>\n<td align="left">startDateLabel</td>\n<td align="left"><code>React.ReactNode</code></td>\n<td align="left"></td>\n<td align="left">The content to display as the label.</td>\n</tr>\n<tr>\n<td align="left">endDateLabel</td>\n<td align="left"><code>React.ReactNode</code></td>\n<td align="left"></td>\n<td align="left">The content to display as the label.</td>\n</tr>\n<tr>\n<td align="left">helperText</td>\n<td align="left"><code>React.ReactNode</code></td>\n<td align="left"></td>\n<td align="left">The content to display as helper text</td>\n</tr>\n<tr>\n<td align="left">necessityIndicator</td>\n<td align="left"><code>&#39;icon&#39; | &#39;label&#39;</code></td>\n<td align="left"></td>\n<td align="left">Whether the required state should be shown as an icon or text.</td>\n</tr>\n<tr>\n<td align="left">shouldCloseOnSelect</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the overlay will close after selected.</td>\n</tr>\n<tr>\n<td align="left">necessityIndicator</td>\n<td align="left"><code>&#39;icon&#39; | &#39;label&#39;</code></td>\n<td align="left"></td>\n<td align="left">Whether the required state should be shown as an icon or text.</td>\n</tr>\n<tr>\n<td align="left">shouldOnChangeTriggerOnSameDate</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Should onChange fired when user re-select the selected start date</td>\n</tr>\n<tr>\n<td align="left">isMobile</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the overlay is in mobile variant.</td>\n</tr>\n<tr>\n<td align="left">isOpen</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the overlay is open by default (controlled).</td>\n</tr>\n<tr>\n<td align="left">defaultOpen</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the overlay is open by default (uncontrolled).</td>\n</tr>\n<tr>\n<td align="left">hasShortcuts</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">Whether the calendar shorcuts is shown.</td>\n</tr>\n<tr>\n<td align="left">onSearchButtonClick</td>\n<td align="left"><code>(e: MouseEvent) =&gt; void</code></td>\n<td align="left"></td>\n<td align="left">Callback fired when the Search Button in the footer is clicked.</td>\n</tr>\n<tr>\n<td align="left">ctaButtonRender</td>\n<td align="left"><code>React.ReactNode</code></td>\n<td align="left"></td>\n<td align="left">To render custom CTA Button in the footer</td>\n</tr>\n<tr>\n<td align="left">customShortcuts</td>\n<td align="left"><code>(defaultShortcuts: RangeCalendarShorcutItem[], isValid: (value: DateValue) =&gt; boolean) =&gt; RangeCalendarShorcutItem[]</code></td>\n<td align="left"></td>\n<td align="left">This callback function is to render custom shortcuts. It has two params: <code>defaultShortcuts</code> and <code>isInvalid</code> for user to use</td>\n</tr>\n<tr>\n<td align="left">onChange</td>\n<td align="left"><code>(e: RangeValue&lt;MappedDateValue&lt;DateValue&gt;&gt;) =&gt; void</code></td>\n<td align="left"></td>\n<td align="left">The default value (uncontrolled).</td>\n</tr>\n<tr>\n<td align="left">onCancel</td>\n<td align="left"><code>() =&gt; void</code></td>\n<td align="left"></td>\n<td align="left">Callback that is called when the cancel button is triggered</td>\n</tr>\n<tr>\n<td align="left">onApply</td>\n<td align="left"><code>(e: RangeValue&lt;MappedDateValue&lt;DateValue&gt;&gt;) =&gt; void</code></td>\n<td align="left"></td>\n<td align="left">Callback that is called when the apply button is triggered</td>\n</tr>\n<tr>\n<td align="left">isDateUnavailable</td>\n<td align="left"><code>(date: DateValue) =&gt; boolean</code></td>\n<td align="left"></td>\n<td align="left">Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Import",level:2,hash:"import",children:[{text:"I18n Provider",level:3,hash:"i18n-provider"},{text:"Basic Date Range Picker",level:3,hash:"basic-date-range-picker"},{text:"Controlled Date Range Picker",level:3,hash:"controlled-date-range-picker"},{text:"Granularity",level:3,hash:"granularity"},{text:"Labeling",level:3,hash:"labeling"},{text:"Validation",level:3,hash:"validation"},{text:"Non-contiguous ranges",level:3,hash:"non-contiguous-ranges"},{text:"Shortcuts",level:3,hash:"shortcuts"},{text:"One Calendar Only",level:3,hash:"one-calendar-only"},{text:"IsDisabled",level:3,hash:"isdisabled"},{text:"Read Only",level:3,hash:"read-only"},{text:"InValid",level:3,hash:"invalid"}]},{text:"Props",level:2,hash:"props",children:[]}],title:"React Date Picker component",headers:{title:"React Date Picker component",components:["Date Range Picker"],hooks:[]}}},y={"DateRangePickerBasic.tsx":{module:"./DateRangePickerBasic.tsx",raw:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerBasic() {\n  return (\n    <div>\n      <DateRangePicker startDateLabel='Start Date' endDateLabel='End Date' />\n    </div>\n  )\n}\n\nexport default DateRangePickerBasic\n",moduleTS:"./DateRangePickerBasic.tsx",rawTS:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerBasic() {\n  return (\n    <div>\n      <DateRangePicker startDateLabel='Start Date' endDateLabel='End Date' />\n    </div>\n  )\n}\n\nexport default DateRangePickerBasic\n"},"DateRangePickerControlled.tsx":{module:"./DateRangePickerControlled.tsx",raw:"import {\n  Calendar,\n  CalendarProps,\n  DateRangePicker,\n  RangeValue,\n  useDateFormatter,\n} from '@comfortdelgro/react-compass'\nimport React from 'react'\n\nconst {getLocalTimeZone, parseDate} = Calendar.InternationalizedDate\n\nfunction ControlledDateRangePicker() {\n  const [range, setRange] = React.useState<RangeValue<CalendarProps> | null>({\n    start: parseDate('2020-02-03'),\n    end: parseDate('2020-02-08'),\n  })\n  const formatter = useDateFormatter({dateStyle: 'long'})\n\n  const onChangeDateRangePicker = (value: RangeValue<CalendarProps> | null) => {\n    setRange(value as RangeValue<CalendarProps>)\n  }\n\n  return (\n    <>\n      {range &&\n        range.start &&\n        range.end &&\n        formatter.formatRange(\n          range.start.toDate(getLocalTimeZone()),\n          range.end.toDate(getLocalTimeZone()),\n        )}\n      <DateRangePicker value={range} onChange={onChangeDateRangePicker} />\n    </>\n  )\n}\n\nexport default ControlledDateRangePicker\n",moduleTS:"./DateRangePickerControlled.tsx",rawTS:"import {\n  Calendar,\n  CalendarProps,\n  DateRangePicker,\n  RangeValue,\n  useDateFormatter,\n} from '@comfortdelgro/react-compass'\nimport React from 'react'\n\nconst {getLocalTimeZone, parseDate} = Calendar.InternationalizedDate\n\nfunction ControlledDateRangePicker() {\n  const [range, setRange] = React.useState<RangeValue<CalendarProps> | null>({\n    start: parseDate('2020-02-03'),\n    end: parseDate('2020-02-08'),\n  })\n  const formatter = useDateFormatter({dateStyle: 'long'})\n\n  const onChangeDateRangePicker = (value: RangeValue<CalendarProps> | null) => {\n    setRange(value as RangeValue<CalendarProps>)\n  }\n\n  return (\n    <>\n      {range &&\n        range.start &&\n        range.end &&\n        formatter.formatRange(\n          range.start.toDate(getLocalTimeZone()),\n          range.end.toDate(getLocalTimeZone()),\n        )}\n      <DateRangePicker value={range} onChange={onChangeDateRangePicker} />\n    </>\n  )\n}\n\nexport default ControlledDateRangePicker\n"},"DateRangePickerGranularity.tsx":{module:"./DateRangePickerGranularity.tsx",raw:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerGranularity() {\n  return (\n    <div>\n      <DateRangePicker granularity='second' />\n    </div>\n  )\n}\n\nexport default DateRangePickerGranularity\n",moduleTS:"./DateRangePickerGranularity.tsx",rawTS:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerGranularity() {\n  return (\n    <div>\n      <DateRangePicker granularity='second' />\n    </div>\n  )\n}\n\nexport default DateRangePickerGranularity\n"},"DateRangePickerLabeling.tsx":{module:"./DateRangePickerLabeling.tsx",raw:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerLabeling() {\n  return (\n    <div>\n      <DateRangePicker startDateLabel='Start Date' endDateLabel='End Date' />\n      <br />\n      <DateRangePicker\n        startDateLabel='Start Date'\n        endDateLabel='End Date'\n        isRequired\n        necessityIndicator='icon'\n      />\n\n      <br />\n      <DateRangePicker\n        startDateLabel='Start Date'\n        endDateLabel='End Date'\n        isRequired\n        necessityIndicator='label'\n      />\n      <br />\n      <DateRangePicker\n        startDateLabel='Start Date'\n        endDateLabel='End Date'\n        necessityIndicator='label'\n      />\n    </div>\n  )\n}\n\nexport default DateRangePickerLabeling\n",moduleTS:"./DateRangePickerLabeling.tsx",rawTS:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerLabeling() {\n  return (\n    <div>\n      <DateRangePicker startDateLabel='Start Date' endDateLabel='End Date' />\n      <br />\n      <DateRangePicker\n        startDateLabel='Start Date'\n        endDateLabel='End Date'\n        isRequired\n        necessityIndicator='icon'\n      />\n\n      <br />\n      <DateRangePicker\n        startDateLabel='Start Date'\n        endDateLabel='End Date'\n        isRequired\n        necessityIndicator='label'\n      />\n      <br />\n      <DateRangePicker\n        startDateLabel='Start Date'\n        endDateLabel='End Date'\n        necessityIndicator='label'\n      />\n    </div>\n  )\n}\n\nexport default DateRangePickerLabeling\n"},"DateRangePickerValidation.tsx":{module:"./DateRangePickerValidation.tsx",raw:"import {\n  DateRangePicker,\n  isWeekend,\n  useLocale,\n} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerValidation() {\n  const {locale} = useLocale()\n  return (\n    <div>\n      <DateRangePicker\n        isDateUnavailable={(date) => {\n          if (!date) {\n            return true\n          } else {\n            return isWeekend(date, locale)\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default DateRangePickerValidation\n",moduleTS:"./DateRangePickerValidation.tsx",rawTS:"import {\n  DateRangePicker,\n  isWeekend,\n  useLocale,\n} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerValidation() {\n  const {locale} = useLocale()\n  return (\n    <div>\n      <DateRangePicker\n        isDateUnavailable={(date) => {\n          if (!date) {\n            return true\n          } else {\n            return isWeekend(date, locale)\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default DateRangePickerValidation\n"},"DateRangePickerNonContiguous.tsx":{module:"./DateRangePickerNonContiguous.tsx",raw:"import {\n  DateRangePicker,\n  isWeekend,\n  useLocale,\n} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerNonContiguous() {\n  const {locale} = useLocale()\n\n  return (\n    <div>\n      <DateRangePicker\n        allowsNonContiguousRanges\n        isDateUnavailable={(date) => {\n          if (!date) {\n            return true\n          } else {\n            return isWeekend(date, locale)\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default DateRangePickerNonContiguous\n",moduleTS:"./DateRangePickerNonContiguous.tsx",rawTS:"import {\n  DateRangePicker,\n  isWeekend,\n  useLocale,\n} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerNonContiguous() {\n  const {locale} = useLocale()\n\n  return (\n    <div>\n      <DateRangePicker\n        allowsNonContiguousRanges\n        isDateUnavailable={(date) => {\n          if (!date) {\n            return true\n          } else {\n            return isWeekend(date, locale)\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default DateRangePickerNonContiguous\n"},"DateRangePickerShortcuts.tsx":{module:"./DateRangePickerShortcuts.tsx",raw:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerShortcuts() {\n  return (\n    <div>\n      <DateRangePicker hasShortcuts />\n    </div>\n  )\n}\n\nexport default DateRangePickerShortcuts\n",moduleTS:"./DateRangePickerShortcuts.tsx",rawTS:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerShortcuts() {\n  return (\n    <div>\n      <DateRangePicker hasShortcuts />\n    </div>\n  )\n}\n\nexport default DateRangePickerShortcuts\n"},"DateRangePickerOneCalendar.tsx":{module:"./DateRangePickerOneCalendar.tsx",raw:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerOneCalendar() {\n  return (\n    <div>\n      <DateRangePicker visibleMonths={1} />\n    </div>\n  )\n}\n\nexport default DateRangePickerOneCalendar\n",moduleTS:"./DateRangePickerOneCalendar.tsx",rawTS:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerOneCalendar() {\n  return (\n    <div>\n      <DateRangePicker visibleMonths={1} />\n    </div>\n  )\n}\n\nexport default DateRangePickerOneCalendar\n"},"DateRangePickerIsDisabled.tsx":{module:"./DateRangePickerIsDisabled.tsx",raw:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerIsDisabled() {\n  return (\n    <div>\n      <DateRangePicker isDisabled />\n    </div>\n  )\n}\n\nexport default DateRangePickerIsDisabled\n",moduleTS:"./DateRangePickerIsDisabled.tsx",rawTS:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerIsDisabled() {\n  return (\n    <div>\n      <DateRangePicker isDisabled />\n    </div>\n  )\n}\n\nexport default DateRangePickerIsDisabled\n"},"DateRangePickerReadOnly.tsx":{module:"./DateRangePickerReadOnly.tsx",raw:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerReadOnly() {\n  return (\n    <div>\n      <DateRangePicker isReadOnly />\n    </div>\n  )\n}\n\nexport default DateRangePickerReadOnly\n",moduleTS:"./DateRangePickerReadOnly.tsx",rawTS:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerReadOnly() {\n  return (\n    <div>\n      <DateRangePicker isReadOnly />\n    </div>\n  )\n}\n\nexport default DateRangePickerReadOnly\n"},"DateRangePickerInvalid.tsx":{module:"./DateRangePickerInvalid.tsx",raw:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerInValid() {\n  return (\n    <div>\n      <DateRangePicker isInvalid />\n    </div>\n  )\n}\n\nexport default DateRangePickerInValid\n",moduleTS:"./DateRangePickerInvalid.tsx",rawTS:"import {DateRangePicker} from '@comfortdelgro/react-compass'\n\nfunction DateRangePickerInValid() {\n  return (\n    <div>\n      <DateRangePicker isInvalid />\n    </div>\n  )\n}\n\nexport default DateRangePickerInValid\n"}};y.scope={process:{},import:{"@comfortdelgro/react-compass":h,react:k}};var w={"./DateRangePickerBasic.tsx":function(){return t||(t=(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{startDateLabel:"Start Date",endDateLabel:"End Date"})}))},"./DateRangePickerControlled.tsx":function(){var e=f.useState({start:v("2020-02-03"),end:v("2020-02-08")}),n=(0,m.Z)(e,2),a=n[0],t=n[1],r=(0,h.useDateFormatter)({dateStyle:"long"});return(0,D.jsxs)(D.Fragment,{children:[a&&a.start&&a.end&&r.formatRange(a.start.toDate(b()),a.end.toDate(b())),(0,D.jsx)(h.DateRangePicker,{value:a,onChange:function(e){t(e)}})]})},"./DateRangePickerGranularity.tsx":function(){return r||(r=(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{granularity:"second"})}))},"./DateRangePickerLabeling.tsx":function(){return l||(l=(0,D.jsxs)("div",{children:[(0,D.jsx)(h.DateRangePicker,{startDateLabel:"Start Date",endDateLabel:"End Date"}),(0,D.jsx)("br",{}),(0,D.jsx)(h.DateRangePicker,{startDateLabel:"Start Date",endDateLabel:"End Date",isRequired:!0,necessityIndicator:"icon"}),(0,D.jsx)("br",{}),(0,D.jsx)(h.DateRangePicker,{startDateLabel:"Start Date",endDateLabel:"End Date",isRequired:!0,necessityIndicator:"label"}),(0,D.jsx)("br",{}),(0,D.jsx)(h.DateRangePicker,{startDateLabel:"Start Date",endDateLabel:"End Date",necessityIndicator:"label"})]}))},"./DateRangePickerValidation.tsx":function(){var e=(0,h.useLocale)().locale;return(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{isDateUnavailable:function(n){return!n||(0,h.isWeekend)(n,e)}})})},"./DateRangePickerNonContiguous.tsx":function(){var e=(0,h.useLocale)().locale;return(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{allowsNonContiguousRanges:!0,isDateUnavailable:function(n){return!n||(0,h.isWeekend)(n,e)}})})},"./DateRangePickerShortcuts.tsx":function(){return i||(i=(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{hasShortcuts:!0})}))},"./DateRangePickerOneCalendar.tsx":function(){return o||(o=(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{visibleMonths:1})}))},"./DateRangePickerIsDisabled.tsx":function(){return s||(s=(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{isDisabled:!0})}))},"./DateRangePickerReadOnly.tsx":function(){return d||(d=(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{isReadOnly:!0})}))},"./DateRangePickerInvalid.tsx":function(){return c||(c=(0,D.jsx)("div",{children:(0,D.jsx)(h.DateRangePicker,{isInvalid:!0})}))}},C={"components/common/ComponentLinkHeader.tsx":P.Z};function S(){return(0,D.jsx)(p.Z,(0,u.Z)({},g))}},86364:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/date-range-picker",function(){return a(59371)}])}},function(e){e.O(0,[4308,6555,47,916,9774,2888,179],function(){return e(e.s=86364)}),_N_E=e.O()}]);