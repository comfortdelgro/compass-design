(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3392],{93279:function(n,e,t){"use strict";t.d(e,{Z:function(){return c}});var o,a,i=t(15393),r=t(16371),l=t.n(r),s=t(31549);function c(){return(0,s.jsxs)(i.Flexbox,{style:{marginBottom:"var(--cdg-spacing-4)"},children:[(0,s.jsx)(l(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:o||(o=(0,s.jsx)(i.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,s.jsx)(l(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:a||(a=(0,s.jsx)(i.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},71683:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return E}});var o,a,i,r,l,s,c,d,g,p,u,m,D,h,f,x,v,y,b,w,O,T,B,C={};t.r(C),t.d(C,{demoComponents:function(){return F},demos:function(){return N},docs:function(){return $},srcComponents:function(){return _}});var A=t(26098),I=t(43866),j=t(15393),P=t(44194),R=t.t(P,2),k=t(42096),S=t(37154),L=t.n(S),M=t(1145),q=t(73804),z=t(31549),V=function(){var n=P.useState(!1),e=(0,q.Z)(n,2),t=e[0],o=e[1];return(0,z.jsxs)(z.Fragment,{children:[(0,z.jsx)(j.Button,{variant:"secondary",css:{width:"7.8rem"},onPress:function(){return o(!0)},children:"Open Child"}),(0,z.jsx)(j.Dialog.Trigger,{isOpen:t,handleClose:function(){return o(!1)},children:(0,z.jsxs)(j.Dialog,{css:{width:"20rem"},children:[c||(c=(0,z.jsx)(j.Dialog.Title,{children:"My Child dialog"})),(0,z.jsx)(j.Dialog.Description,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur."}),(0,z.jsx)(j.Dialog.Actions,{children:(0,z.jsx)(j.Button,{variant:"secondary",onPress:function(){return o(!1)},children:"Cancel"})})]})})]})},H=t(93279),$={en:{description:"These <b>Dialog</b> boxes can be used to raise and alert, or to get confirmation on any input or to have a kind of input from the users.",location:"/docs/data/components/dialog/dialog.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Dialog</h1><p class="description">These <b>Dialog</b> boxes can be used to raise and alert, or to get confirmation on any input or to have a kind of input from the users.\n</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>Dialog<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="example">Example<a aria-labelledby="example" class="anchor-link" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="basic">Basic<a aria-labelledby="basic" class="anchor-link" href="#basic" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DialogBasic.tsx"},'<h3 id="variant-dialog">Variant Dialog<a aria-labelledby="variant-dialog" class="anchor-link" href="#variant-dialog" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DialogVariant.tsx"},'<h3 id="nested-dialog">Nested Dialog<a aria-labelledby="nested-dialog" class="anchor-link" href="#nested-dialog" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DialogNested.tsx"},'<h3 id="mobile-dialog">Mobile Dialog<a aria-labelledby="mobile-dialog" class="anchor-link" href="#mobile-dialog" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"DialogMobile.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">onClose</td>\n<td align="left"><code>() =&gt; void</code></td>\n<td align="left">—</td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="left">variant</td>\n<td align="left"><code>&quot;confirmation&quot; or &quot;alert&quot;</code></td>\n<td align="left">—</td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="left">css</td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left"></td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Example",level:2,hash:"example",children:[{text:"Basic",level:3,hash:"basic"},{text:"Variant Dialog",level:3,hash:"variant-dialog"},{text:"Nested Dialog",level:3,hash:"nested-dialog"},{text:"Mobile Dialog",level:3,hash:"mobile-dialog"}]},{text:"Props",level:2,hash:"props",children:[]}],title:"React Dialog component",headers:{title:"React Dialog component",components:["Dialog"],hooks:[]}}},N={"DialogBasic.tsx":{module:"./DialogBasic.tsx",raw:"import {Button, Column, Dialog} from '@comfortdelgro/react-compass'\nimport React from 'react'\n\nconst Default: React.FC = () => {\n  const lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.'\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\n\n  return (\n    <Column>\n      <Button\n        css={{width: '7.8rem'}}\n        onPress={() => setDefaultOpen(true)}\n        variant='secondary'\n      >\n        Open Dialog\n      </Button>\n      <Dialog.Trigger\n        isOpen={defaultOpen}\n        handleClose={() => setDefaultOpen(false)}\n      >\n        <Dialog>\n          <Dialog.Title>My title</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button onPress={() => setDefaultOpen(false)} variant='secondary'>\n              Cancel\n            </Button>\n            <Button onPress={() => setDefaultOpen(false)} variant='secondary'>\n              Do it\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n    </Column>\n  )\n}\n\nexport default Default\n",jsxPreview:"<Button\r\ncss={{width: '7.8rem'}}\r\nonPress={() => setDefaultOpen(true)}\r\nvariant='secondary'\r\n>\r\nOpen Dialog\r\n</Button>\r\n<Dialog.Trigger\r\nisOpen={defaultOpen}\r\nhandleClose={() => setDefaultOpen(false)}\r\n>\r\n<Dialog>\r\n    <Dialog.Title>My title</Dialog.Title>\r\n    <Dialog.Description>{lorem}</Dialog.Description>\r\n    <Dialog.Actions>\r\n    <Button onPress={() => setDefaultOpen(false)} variant='secondary'>\r\n        Cancel\r\n    </Button>\r\n    <Button onPress={() => setDefaultOpen(false)} variant='secondary'>\r\n        Do it\r\n    </Button>\r\n    </Dialog.Actions>\r\n</Dialog>\r\n</Dialog.Trigger>",moduleTS:"./DialogBasic.tsx",rawTS:"import {Button, Column, Dialog} from '@comfortdelgro/react-compass'\nimport React from 'react'\n\nconst Default: React.FC = () => {\n  const lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.'\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\n\n  return (\n    <Column>\n      <Button\n        css={{width: '7.8rem'}}\n        onPress={() => setDefaultOpen(true)}\n        variant='secondary'\n      >\n        Open Dialog\n      </Button>\n      <Dialog.Trigger\n        isOpen={defaultOpen}\n        handleClose={() => setDefaultOpen(false)}\n      >\n        <Dialog>\n          <Dialog.Title>My title</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button onPress={() => setDefaultOpen(false)} variant='secondary'>\n              Cancel\n            </Button>\n            <Button onPress={() => setDefaultOpen(false)} variant='secondary'>\n              Do it\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n    </Column>\n  )\n}\n\nexport default Default\n"},"DialogVariant.tsx":{module:"./DialogVariant.tsx",raw:"import {\n  Button,\n  Column,\n  Dialog,\n  Icon,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {faBug} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst Variants: React.FC = () => {\n  const lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.'\n  const [confirmationOpen, setConfirmationOpen] = React.useState(false)\n  const [alertOpen, setAlertOpen] = React.useState(false)\n\n  return (\n    <Column>\n      <Typography.Label>Confirmation dialog</Typography.Label>\n      <Button\n        css={{width: '7.8rem'}}\n        onPress={() => setConfirmationOpen(true)}\n        variant='secondary'\n      >\n        Open Dialog\n      </Button>\n      <Dialog.Trigger\n        isOpen={confirmationOpen}\n        handleClose={() => setConfirmationOpen(false)}\n        variant='confirmation'\n      >\n        <Dialog>\n          <Dialog.Title>My title</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button\n              onPress={() => setConfirmationOpen(false)}\n              variant='secondary'\n            >\n              Cancel\n            </Button>\n            <Button\n              onPress={() => setConfirmationOpen(false)}\n              variant='secondary'\n            >\n              Do it\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n\n      <Typography.Label>Alert dialog</Typography.Label>\n\n      <Button\n        css={{width: '7.8rem'}}\n        onPress={() => setAlertOpen(true)}\n        variant='danger'\n      >\n        Open Dialog\n      </Button>\n      <Dialog.Trigger\n        isOpen={alertOpen}\n        handleClose={() => setAlertOpen(false)}\n        variant='alert'\n      >\n        <Dialog>\n          <Dialog.Title>My title</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button onPress={() => setAlertOpen(false)} variant='secondary'>\n              Ok\n            </Button>\n          </Dialog.Actions>\n          <Dialog.Icon>\n            <Icon icon={faBug} />\n          </Dialog.Icon>\n        </Dialog>\n      </Dialog.Trigger>\n    </Column>\n  )\n}\n\nexport default Variants\n",jsxPreview:"<Button\r\ncss={{width: '7.8rem'}}\r\nonPress={() => setConfirmationOpen(true)}\r\nvariant='secondary'\r\n>\r\nOpen Dialog\r\n</Button>\r\n<Dialog.Trigger\r\nisOpen={confirmationOpen}\r\nhandleClose={() => setConfirmationOpen(false)}\r\nvariant='confirmation'\r\n>\r\n<Dialog>\r\n    <Dialog.Title>My title</Dialog.Title>\r\n    <Dialog.Description>{lorem}</Dialog.Description>\r\n    <Dialog.Actions>\r\n    <Button\r\n        onPress={() => setConfirmationOpen(false)}\r\n        variant='secondary'\r\n    >\r\n        Cancel\r\n    </Button>\r\n    <Button\r\n        onPress={() => setConfirmationOpen(false)}\r\n        variant='secondary'\r\n    >\r\n        Do it\r\n    </Button>\r\n    </Dialog.Actions>\r\n</Dialog>\r\n</Dialog.Trigger>\r\n\r\n<h3>Alert dialog</h3>\r\n\r\n<Button\r\ncss={{width: '7.8rem'}}\r\nonPress={() => setAlertOpen(true)}\r\nvariant='danger'\r\n>\r\nOpen Dialog\r\n</Button>\r\n<Dialog.Trigger\r\nisOpen={alertOpen}\r\nhandleClose={() => setAlertOpen(false)}\r\nvariant='alert'\r\n>\r\n<Dialog>\r\n    <Dialog.Title>My title</Dialog.Title>\r\n    <Dialog.Description>{lorem}</Dialog.Description>\r\n    <Dialog.Actions>\r\n    <Button onPress={() => setAlertOpen(false)} variant='secondary'>\r\n        Ok\r\n    </Button>\r\n    </Dialog.Actions>\r\n    <Dialog.Icon>\r\n    <Icon icon={faBug} />\r\n    </Dialog.Icon>\r\n</Dialog>\r\n</Dialog.Trigger>",moduleTS:"./DialogVariant.tsx",rawTS:"import {\n  Button,\n  Column,\n  Dialog,\n  Icon,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport {faBug} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\n\nconst Variants: React.FC = () => {\n  const lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.'\n  const [confirmationOpen, setConfirmationOpen] = React.useState(false)\n  const [alertOpen, setAlertOpen] = React.useState(false)\n\n  return (\n    <Column>\n      <Typography.Label>Confirmation dialog</Typography.Label>\n      <Button\n        css={{width: '7.8rem'}}\n        onPress={() => setConfirmationOpen(true)}\n        variant='secondary'\n      >\n        Open Dialog\n      </Button>\n      <Dialog.Trigger\n        isOpen={confirmationOpen}\n        handleClose={() => setConfirmationOpen(false)}\n        variant='confirmation'\n      >\n        <Dialog>\n          <Dialog.Title>My title</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button\n              onPress={() => setConfirmationOpen(false)}\n              variant='secondary'\n            >\n              Cancel\n            </Button>\n            <Button\n              onPress={() => setConfirmationOpen(false)}\n              variant='secondary'\n            >\n              Do it\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n\n      <Typography.Label>Alert dialog</Typography.Label>\n\n      <Button\n        css={{width: '7.8rem'}}\n        onPress={() => setAlertOpen(true)}\n        variant='danger'\n      >\n        Open Dialog\n      </Button>\n      <Dialog.Trigger\n        isOpen={alertOpen}\n        handleClose={() => setAlertOpen(false)}\n        variant='alert'\n      >\n        <Dialog>\n          <Dialog.Title>My title</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button onPress={() => setAlertOpen(false)} variant='secondary'>\n              Ok\n            </Button>\n          </Dialog.Actions>\n          <Dialog.Icon>\n            <Icon icon={faBug} />\n          </Dialog.Icon>\n        </Dialog>\n      </Dialog.Trigger>\n    </Column>\n  )\n}\n\nexport default Variants\n"},"DialogNested.tsx":{module:"./DialogNested.tsx",raw:"import {Button, Column, Dialog} from '@comfortdelgro/react-compass'\nimport React from 'react'\n\nconst Child: React.FC = () => {\n  const lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.'\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\n\n  return (\n    <>\n      <Button\n        variant='secondary'\n        css={{width: '7.8rem'}}\n        onPress={() => setDefaultOpen(true)}\n      >\n        Open Child\n      </Button>\n      <Dialog.Trigger\n        isOpen={defaultOpen}\n        handleClose={() => setDefaultOpen(false)}\n      >\n        <Dialog css={{width: '20rem'}}>\n          <Dialog.Title>My Child dialog</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button variant='secondary' onPress={() => setDefaultOpen(false)}>\n              Cancel\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n    </>\n  )\n}\n\nconst NestedDialog: React.FC = () => {\n  const lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.'\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\n\n  return (\n    <Column>\n      <Button\n        variant='secondary'\n        css={{width: '7.8rem'}}\n        onPress={() => setDefaultOpen(true)}\n        data-target='parent-dialog' // this is required for the focus trap to work\n      >\n        Open Parent\n      </Button>\n      <Dialog.Trigger\n        isOpen={defaultOpen}\n        handleClose={() => setDefaultOpen(false)}\n        id='parent-dialog' // this is required for the focus trap to work\n      >\n        <Dialog>\n          <Dialog.Title>My Parent dialog</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button variant='secondary' onPress={() => setDefaultOpen(false)}>\n              Cancel\n            </Button>\n            <Child />\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n    </Column>\n  )\n}\n\nexport default NestedDialog\n",jsxPreview:"<Button\r\nvariant='secondary'\r\ncss={{width: '7.8rem'}}\r\nonPress={() => setDefaultOpen(true)}\r\ndata-target='parent-dialog' // this is required for the focus trap to work\r\n>\r\nOpen Parent\r\n</Button>\r\n<Dialog.Trigger\r\nisOpen={defaultOpen}\r\nhandleClose={() => setDefaultOpen(false)}\r\nid='parent-dialog' // this is required for the focus trap to work\r\n>\r\n<Dialog>\r\n    <Dialog.Title>My Parent dialog</Dialog.Title>\r\n    <Dialog.Description>{lorem}</Dialog.Description>\r\n    <Dialog.Actions>\r\n    <Button variant='secondary' onPress={() => setDefaultOpen(false)}>\r\n        Cancel\r\n    </Button>\r\n    <Child />\r\n    </Dialog.Actions>\r\n</Dialog>\r\n</Dialog.Trigger>",moduleTS:"./DialogNested.tsx",rawTS:"import {Button, Column, Dialog} from '@comfortdelgro/react-compass'\nimport React from 'react'\n\nconst Child: React.FC = () => {\n  const lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.'\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\n\n  return (\n    <>\n      <Button\n        variant='secondary'\n        css={{width: '7.8rem'}}\n        onPress={() => setDefaultOpen(true)}\n      >\n        Open Child\n      </Button>\n      <Dialog.Trigger\n        isOpen={defaultOpen}\n        handleClose={() => setDefaultOpen(false)}\n      >\n        <Dialog css={{width: '20rem'}}>\n          <Dialog.Title>My Child dialog</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button variant='secondary' onPress={() => setDefaultOpen(false)}>\n              Cancel\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n    </>\n  )\n}\n\nconst NestedDialog: React.FC = () => {\n  const lorem =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.'\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\n\n  return (\n    <Column>\n      <Button\n        variant='secondary'\n        css={{width: '7.8rem'}}\n        onPress={() => setDefaultOpen(true)}\n        data-target='parent-dialog' // this is required for the focus trap to work\n      >\n        Open Parent\n      </Button>\n      <Dialog.Trigger\n        isOpen={defaultOpen}\n        handleClose={() => setDefaultOpen(false)}\n        id='parent-dialog' // this is required for the focus trap to work\n      >\n        <Dialog>\n          <Dialog.Title>My Parent dialog</Dialog.Title>\n          <Dialog.Description>{lorem}</Dialog.Description>\n          <Dialog.Actions>\n            <Button variant='secondary' onPress={() => setDefaultOpen(false)}>\n              Cancel\n            </Button>\n            <Child />\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n    </Column>\n  )\n}\n\nexport default NestedDialog\n"},"DialogMobile.tsx":{module:"./DialogMobile.tsx",raw:"import {\n  Avatar,\n  Box,\n  Button,\n  Calendar,\n  Column,\n  Dialog,\n  Dropdown,\n  List,\n  Radio,\n  Textarea,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport Image from 'next/image'\nimport React from 'react'\nimport {getStaticPath} from 'utils'\n\nconst DialogMobile: React.FC = () => {\n  const contents: any = {\n    confirmation: null,\n    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.',\n    textArea: (\n      <Textarea\n        placeholder='e.g. ‘I’m standing near parking bay 2’'\n        css={{\n          textarea: {\n            height: '129px',\n          },\n        }}\n        resizable={false}\n      />\n    ),\n    list: (\n      <>\n        <List\n          title='Title'\n          variant='item'\n          description='Line 1'\n          leftInfo={<Avatar label='A' />}\n        />\n        <List\n          variant='item'\n          title='Title'\n          description='Line 1'\n          leftInfo={<Avatar label='A' />}\n        />\n      </>\n    ),\n    calendar: (\n      <Calendar\n        css={{\n          width: '100%',\n          table: {\n            width: '100%',\n          },\n          '.calendar-header-left-side button': {\n            backgroundColor: 'transparent',\n            color: '$cdgBlue100',\n            '&.calendar-header-middle': {\n              color: '$grayShades100',\n            },\n          },\n        }}\n      />\n    ),\n    avatar: (\n      <Box\n        css={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}\n      >\n        <Avatar\n          label='Albert Einstein'\n          image='https://i.pravatar.cc/150?u=a0425e81423429026704d'\n          size='lg'\n        />\n        <Typography.Header>Avatar name</Typography.Header>\n        <Typography.Body>Avatar description</Typography.Body>\n      </Box>\n    ),\n    radios: (\n      <Radio.Group orientation='vertical'>\n        <Radio\n          variant='h5'\n          label='test'\n          description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n          value='1'\n          tooltip='This is tooltip'\n        />\n        <Radio\n          variant='h5'\n          label='test2'\n          description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n          value='2'\n        />\n      </Radio.Group>\n    ),\n    image: (\n      <Image\n        src={getStaticPath('/static/images/banner.png')}\n        alt='banner'\n        sizes='100%'\n        width={300}\n        height={200}\n      />\n    ),\n  }\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\n  const [type, setType] = React.useState<string>('text')\n  return (\n    <Column>\n      <Dropdown.Select\n        isRequired\n        label='Dialog content type'\n        placeholder='Choose an type'\n        value={type}\n        onValueChange={(k: string | number) => setType(k.toString())}\n      >\n        <Dropdown.Item value='confirmation'>Confirmation</Dropdown.Item>\n        <Dropdown.Item value='text'>Text</Dropdown.Item>\n        <Dropdown.Item value='textArea'>Text Area</Dropdown.Item>\n        <Dropdown.Item value='list'>List</Dropdown.Item>\n        <Dropdown.Item value='calendar'>Calendar</Dropdown.Item>\n        <Dropdown.Item value='avatar'>Avatar</Dropdown.Item>\n        <Dropdown.Item value='image'>Image</Dropdown.Item>\n        <Dropdown.Item value='radios'>Radio</Dropdown.Item>\n      </Dropdown.Select>\n      <Button\n        css={{width: '7.8rem'}}\n        onPress={() => setDefaultOpen(true)}\n        variant='secondary'\n      >\n        Open Dialog\n      </Button>\n      <Dialog.Trigger\n        isOpen={defaultOpen}\n        handleClose={() => setDefaultOpen(false)}\n      >\n        <Dialog\n          css={{\n            '&.cdg-dialog-container': {\n              width: '343px',\n              borderRadius: '$xl',\n            },\n            '.cdg-dialog-content': {\n              gap: '8px',\n            },\n          }}\n        >\n          <Dialog.Title\n            css={{\n              textAlign: 'center',\n              fontSize: '28px',\n              fontWeight: 700,\n            }}\n          >\n            Dialog\n          </Dialog.Title>\n          <Dialog.Description\n            css={{\n              textAlign: 'center',\n            }}\n          >\n            {contents[type]}\n          </Dialog.Description>\n          <Dialog.Actions\n            css={{\n              flexDirection: 'column',\n            }}\n          >\n            <Button\n              css={{width: '100%', padding: '12px 24px', borderRadius: '$lg'}}\n              onPress={() => setDefaultOpen(false)}\n            >\n              Do it\n            </Button>\n            <Button\n              css={{width: '100%', padding: '12px 24px', borderRadius: '$lg'}}\n              onPress={() => setDefaultOpen(false)}\n              variant='secondary'\n            >\n              Cancel\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n    </Column>\n  )\n}\n\nexport default DialogMobile\n",jsxPreview:"const contents: any = {\r\n    none: null,\r\n    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.',\r\n    textArea: (\r\n      <Textarea\r\n        placeholder='e.g. ‘I’m standing near parking bay 2’'\r\n        css={{\r\n          textarea: {\r\n            height: '129px',\r\n          },\r\n        }}\r\n        resizable={false}\r\n      />\r\n    ),\r\n    list: (\r\n      <>\r\n        <List\r\n          title='Title'\r\n          variant='item'\r\n          description='Line 1'\r\n          leftInfo={<Avatar label='A' />}\r\n        />\r\n        <List\r\n          variant='item'\r\n          title='Title'\r\n          description='Line 1'\r\n          leftInfo={<Avatar label='A' />}\r\n        />\r\n      </>\r\n    ),\r\n    calendar: (\r\n      <Calendar\r\n        css={{\r\n          width: '100%',\r\n          table: {\r\n            width: '100%',\r\n          },\r\n          '.calendar-header-left-side button': {\r\n            backgroundColor: 'transparent',\r\n            color: '$cdgBlue100',\r\n            '&.calendar-header-middle': {\r\n              color: '$grayShades100',\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    ),\r\n    avatar: (\r\n      <Box\r\n        css={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}\r\n      >\r\n        <Avatar\r\n          label='Albert Einstein'\r\n          image='https://i.pravatar.cc/150?u=a0425e81423429026704d'\r\n          size='lg'\r\n          css={{opacity: '0.8', '&:hover': {opacity: '0.5', cursor: 'pointer'}}}\r\n        />\r\n        <Typography.Header>Avatar name</Typography.Header>\r\n        <Typography.Body>Avatar description</Typography.Body>\r\n      </Box>\r\n    ),\r\n    radios: (\r\n      <Radio.Group orientation='vertical'>\r\n        <Radio\r\n          variant='h5'\r\n          label='test'\r\n          description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\r\n          value='1'\r\n          tooltip='This is tooltip'\r\n        />\r\n        <Radio\r\n          variant='h5'\r\n          label='test2'\r\n          description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\r\n          value='2'\r\n        />\r\n      </Radio.Group>\r\n    ),\r\n  }\r\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\r\n  const [type, setType] = React.useState<string>('text')\r\n  return (\r\n    <Column>\r\n      <Dropdown.Select\r\n        isRequired\r\n        label='Dialog content type'\r\n        placeholder='Choose an type'\r\n        value={type}\r\n        onValueChange={(k: string | number) => setType(k.toString())}\r\n      >\r\n        <Dropdown.Item value='none'>None</Dropdown.Item>\r\n        <Dropdown.Item value='text'>Text</Dropdown.Item>\r\n        <Dropdown.Item value='textArea'>Text Area</Dropdown.Item>\r\n        <Dropdown.Item value='list'>List</Dropdown.Item>\r\n        <Dropdown.Item value='calendar'>Calendar</Dropdown.Item>\r\n        <Dropdown.Item value='avatar'>Avatar</Dropdown.Item>\r\n        <Dropdown.Item value='radios'>Radio</Dropdown.Item>\r\n      </Dropdown.Select>\r\n      <Button\r\n        css={{width: '7.8rem'}}\r\n        onPress={() => setDefaultOpen(true)}\r\n        variant='secondary'\r\n      >\r\n        Open Dialog\r\n      </Button>\r\n      <Dialog.Trigger\r\n        isOpen={defaultOpen}\r\n        handleClose={() => setDefaultOpen(false)}\r\n      >\r\n        <Dialog\r\n          css={{\r\n            '&.cdg-dialog-container': {\r\n              width: '343px',\r\n              borderRadius: '$xl',\r\n            },\r\n            '.cdg-dialog-content': {\r\n              gap: '8px',\r\n            },\r\n          }}\r\n        >\r\n          <Dialog.Title\r\n            css={{\r\n              textAlign: 'center',\r\n              fontSize: '28px',\r\n              fontWeight: 700,\r\n            }}\r\n          >\r\n            Dialog\r\n          </Dialog.Title>\r\n          <Dialog.Description\r\n            css={{\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            {contents[type]}\r\n          </Dialog.Description>\r\n          <Dialog.Actions\r\n            css={{\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <Button\r\n              css={{width: '100%', padding: '12px 24px', borderRadius: '$lg'}}\r\n              onPress={() => setDefaultOpen(false)}\r\n            >\r\n              Do it\r\n            </Button>\r\n            <Button\r\n              css={{width: '100%', padding: '12px 24px', borderRadius: '$lg'}}\r\n              onPress={() => setDefaultOpen(false)}\r\n              variant='secondary'\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Dialog.Trigger>\r\n    </Column>\r\n  )",moduleTS:"./DialogMobile.tsx",rawTS:"import {\n  Avatar,\n  Box,\n  Button,\n  Calendar,\n  Column,\n  Dialog,\n  Dropdown,\n  List,\n  Radio,\n  Textarea,\n  Typography,\n} from '@comfortdelgro/react-compass'\nimport Image from 'next/image'\nimport React from 'react'\nimport {getStaticPath} from 'utils'\n\nconst DialogMobile: React.FC = () => {\n  const contents: any = {\n    confirmation: null,\n    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.',\n    textArea: (\n      <Textarea\n        placeholder='e.g. ‘I’m standing near parking bay 2’'\n        css={{\n          textarea: {\n            height: '129px',\n          },\n        }}\n        resizable={false}\n      />\n    ),\n    list: (\n      <>\n        <List\n          title='Title'\n          variant='item'\n          description='Line 1'\n          leftInfo={<Avatar label='A' />}\n        />\n        <List\n          variant='item'\n          title='Title'\n          description='Line 1'\n          leftInfo={<Avatar label='A' />}\n        />\n      </>\n    ),\n    calendar: (\n      <Calendar\n        css={{\n          width: '100%',\n          table: {\n            width: '100%',\n          },\n          '.calendar-header-left-side button': {\n            backgroundColor: 'transparent',\n            color: '$cdgBlue100',\n            '&.calendar-header-middle': {\n              color: '$grayShades100',\n            },\n          },\n        }}\n      />\n    ),\n    avatar: (\n      <Box\n        css={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}\n      >\n        <Avatar\n          label='Albert Einstein'\n          image='https://i.pravatar.cc/150?u=a0425e81423429026704d'\n          size='lg'\n        />\n        <Typography.Header>Avatar name</Typography.Header>\n        <Typography.Body>Avatar description</Typography.Body>\n      </Box>\n    ),\n    radios: (\n      <Radio.Group orientation='vertical'>\n        <Radio\n          variant='h5'\n          label='test'\n          description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n          value='1'\n          tooltip='This is tooltip'\n        />\n        <Radio\n          variant='h5'\n          label='test2'\n          description='Lorem ipsum dolor sit amet, consectetur adipiscing elit'\n          value='2'\n        />\n      </Radio.Group>\n    ),\n    image: (\n      <Image\n        src={getStaticPath('/static/images/banner.png')}\n        alt='banner'\n        sizes='100%'\n        width={300}\n        height={200}\n      />\n    ),\n  }\n  const [defaultOpen, setDefaultOpen] = React.useState(false)\n  const [type, setType] = React.useState<string>('text')\n  return (\n    <Column>\n      <Dropdown.Select\n        isRequired\n        label='Dialog content type'\n        placeholder='Choose an type'\n        value={type}\n        onValueChange={(k: string | number) => setType(k.toString())}\n      >\n        <Dropdown.Item value='confirmation'>Confirmation</Dropdown.Item>\n        <Dropdown.Item value='text'>Text</Dropdown.Item>\n        <Dropdown.Item value='textArea'>Text Area</Dropdown.Item>\n        <Dropdown.Item value='list'>List</Dropdown.Item>\n        <Dropdown.Item value='calendar'>Calendar</Dropdown.Item>\n        <Dropdown.Item value='avatar'>Avatar</Dropdown.Item>\n        <Dropdown.Item value='image'>Image</Dropdown.Item>\n        <Dropdown.Item value='radios'>Radio</Dropdown.Item>\n      </Dropdown.Select>\n      <Button\n        css={{width: '7.8rem'}}\n        onPress={() => setDefaultOpen(true)}\n        variant='secondary'\n      >\n        Open Dialog\n      </Button>\n      <Dialog.Trigger\n        isOpen={defaultOpen}\n        handleClose={() => setDefaultOpen(false)}\n      >\n        <Dialog\n          css={{\n            '&.cdg-dialog-container': {\n              width: '343px',\n              borderRadius: '$xl',\n            },\n            '.cdg-dialog-content': {\n              gap: '8px',\n            },\n          }}\n        >\n          <Dialog.Title\n            css={{\n              textAlign: 'center',\n              fontSize: '28px',\n              fontWeight: 700,\n            }}\n          >\n            Dialog\n          </Dialog.Title>\n          <Dialog.Description\n            css={{\n              textAlign: 'center',\n            }}\n          >\n            {contents[type]}\n          </Dialog.Description>\n          <Dialog.Actions\n            css={{\n              flexDirection: 'column',\n            }}\n          >\n            <Button\n              css={{width: '100%', padding: '12px 24px', borderRadius: '$lg'}}\n              onPress={() => setDefaultOpen(false)}\n            >\n              Do it\n            </Button>\n            <Button\n              css={{width: '100%', padding: '12px 24px', borderRadius: '$lg'}}\n              onPress={() => setDefaultOpen(false)}\n              variant='secondary'\n            >\n              Cancel\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Dialog.Trigger>\n    </Column>\n  )\n}\n\nexport default DialogMobile\n"}};N.scope={process:{},import:{"@comfortdelgro/react-compass":j,react:R,"@fortawesome/free-solid-svg-icons":k,"next/image":S,utils:M}};var F={"./DialogBasic.tsx":function(){var n=P.useState(!1),e=(0,q.Z)(n,2),t=e[0],a=e[1];return(0,z.jsxs)(j.Column,{children:[(0,z.jsx)(j.Button,{css:{width:"7.8rem"},onPress:function(){return a(!0)},variant:"secondary",children:"Open Dialog"}),(0,z.jsx)(j.Dialog.Trigger,{isOpen:t,handleClose:function(){return a(!1)},children:(0,z.jsxs)(j.Dialog,{children:[o||(o=(0,z.jsx)(j.Dialog.Title,{children:"My title"})),(0,z.jsx)(j.Dialog.Description,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur."}),(0,z.jsxs)(j.Dialog.Actions,{children:[(0,z.jsx)(j.Button,{onPress:function(){return a(!1)},variant:"secondary",children:"Cancel"}),(0,z.jsx)(j.Button,{onPress:function(){return a(!1)},variant:"secondary",children:"Do it"})]})]})})]})},"./DialogVariant.tsx":function(){var n="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.",e=P.useState(!1),t=(0,q.Z)(e,2),o=t[0],c=t[1],d=P.useState(!1),g=(0,q.Z)(d,2),p=g[0],u=g[1];return(0,z.jsxs)(j.Column,{children:[a||(a=(0,z.jsx)(j.Typography.Label,{children:"Confirmation dialog"})),(0,z.jsx)(j.Button,{css:{width:"7.8rem"},onPress:function(){return c(!0)},variant:"secondary",children:"Open Dialog"}),(0,z.jsx)(j.Dialog.Trigger,{isOpen:o,handleClose:function(){return c(!1)},variant:"confirmation",children:(0,z.jsxs)(j.Dialog,{children:[i||(i=(0,z.jsx)(j.Dialog.Title,{children:"My title"})),(0,z.jsx)(j.Dialog.Description,{children:n}),(0,z.jsxs)(j.Dialog.Actions,{children:[(0,z.jsx)(j.Button,{onPress:function(){return c(!1)},variant:"secondary",children:"Cancel"}),(0,z.jsx)(j.Button,{onPress:function(){return c(!1)},variant:"secondary",children:"Do it"})]})]})}),r||(r=(0,z.jsx)(j.Typography.Label,{children:"Alert dialog"})),(0,z.jsx)(j.Button,{css:{width:"7.8rem"},onPress:function(){return u(!0)},variant:"danger",children:"Open Dialog"}),(0,z.jsx)(j.Dialog.Trigger,{isOpen:p,handleClose:function(){return u(!1)},variant:"alert",children:(0,z.jsxs)(j.Dialog,{children:[l||(l=(0,z.jsx)(j.Dialog.Title,{children:"My title"})),(0,z.jsx)(j.Dialog.Description,{children:n}),(0,z.jsx)(j.Dialog.Actions,{children:(0,z.jsx)(j.Button,{onPress:function(){return u(!1)},variant:"secondary",children:"Ok"})}),s||(s=(0,z.jsx)(j.Dialog.Icon,{children:(0,z.jsx)(j.Icon,{icon:k.faBug})}))]})})]})},"./DialogNested.tsx":function(){var n=P.useState(!1),e=(0,q.Z)(n,2),t=e[0],o=e[1];return(0,z.jsxs)(j.Column,{children:[(0,z.jsx)(j.Button,{variant:"secondary",css:{width:"7.8rem"},onPress:function(){return o(!0)},"data-target":"parent-dialog",children:"Open Parent"}),(0,z.jsx)(j.Dialog.Trigger,{isOpen:t,handleClose:function(){return o(!1)},id:"parent-dialog",children:(0,z.jsxs)(j.Dialog,{children:[d||(d=(0,z.jsx)(j.Dialog.Title,{children:"My Parent dialog"})),(0,z.jsx)(j.Dialog.Description,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur."}),(0,z.jsxs)(j.Dialog.Actions,{children:[(0,z.jsx)(j.Button,{variant:"secondary",onPress:function(){return o(!1)},children:"Cancel"}),g||(g=(0,z.jsx)(V,{}))]})]})})]})},"./DialogMobile.tsx":function(){var n={confirmation:null,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. pariatur.",textArea:(0,z.jsx)(j.Textarea,{placeholder:"e.g. ‘I’m standing near parking bay 2’",css:{textarea:{height:"129px"}},resizable:!1}),list:(0,z.jsxs)(z.Fragment,{children:[p||(p=(0,z.jsx)(j.List,{title:"Title",variant:"item",description:"Line 1",leftInfo:(0,z.jsx)(j.Avatar,{label:"A"})})),u||(u=(0,z.jsx)(j.List,{variant:"item",title:"Title",description:"Line 1",leftInfo:(0,z.jsx)(j.Avatar,{label:"A"})}))]}),calendar:(0,z.jsx)(j.Calendar,{css:{width:"100%",table:{width:"100%"},".calendar-header-left-side button":{backgroundColor:"transparent",color:"$cdgBlue100","&.calendar-header-middle":{color:"$grayShades100"}}}}),avatar:(0,z.jsxs)(j.Box,{css:{display:"flex",flexDirection:"column",alignItems:"center"},children:[m||(m=(0,z.jsx)(j.Avatar,{label:"Albert Einstein",image:"https://i.pravatar.cc/150?u=a0425e81423429026704d",size:"lg"})),D||(D=(0,z.jsx)(j.Typography.Header,{children:"Avatar name"})),h||(h=(0,z.jsx)(j.Typography.Body,{children:"Avatar description"}))]}),radios:f||(f=(0,z.jsxs)(j.Radio.Group,{orientation:"vertical",children:[(0,z.jsx)(j.Radio,{variant:"h5",label:"test",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit",value:"1",tooltip:"This is tooltip"}),(0,z.jsx)(j.Radio,{variant:"h5",label:"test2",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit",value:"2"})]})),image:(0,z.jsx)(L(),{src:(0,M.getStaticPath)("/static/images/banner.png"),alt:"banner",sizes:"100%",width:300,height:200})},e=P.useState(!1),t=(0,q.Z)(e,2),o=t[0],a=t[1],i=P.useState("text"),r=(0,q.Z)(i,2),l=r[0],s=r[1];return(0,z.jsxs)(j.Column,{children:[(0,z.jsxs)(j.Dropdown.Select,{isRequired:!0,label:"Dialog content type",placeholder:"Choose an type",value:l,onValueChange:function(n){return s(n.toString())},children:[x||(x=(0,z.jsx)(j.Dropdown.Item,{value:"confirmation",children:"Confirmation"})),v||(v=(0,z.jsx)(j.Dropdown.Item,{value:"text",children:"Text"})),y||(y=(0,z.jsx)(j.Dropdown.Item,{value:"textArea",children:"Text Area"})),b||(b=(0,z.jsx)(j.Dropdown.Item,{value:"list",children:"List"})),w||(w=(0,z.jsx)(j.Dropdown.Item,{value:"calendar",children:"Calendar"})),O||(O=(0,z.jsx)(j.Dropdown.Item,{value:"avatar",children:"Avatar"})),T||(T=(0,z.jsx)(j.Dropdown.Item,{value:"image",children:"Image"})),B||(B=(0,z.jsx)(j.Dropdown.Item,{value:"radios",children:"Radio"}))]}),(0,z.jsx)(j.Button,{css:{width:"7.8rem"},onPress:function(){return a(!0)},variant:"secondary",children:"Open Dialog"}),(0,z.jsx)(j.Dialog.Trigger,{isOpen:o,handleClose:function(){return a(!1)},children:(0,z.jsxs)(j.Dialog,{css:{"&.cdg-dialog-container":{width:"343px",borderRadius:"$xl"},".cdg-dialog-content":{gap:"8px"}},children:[(0,z.jsx)(j.Dialog.Title,{css:{textAlign:"center",fontSize:"28px",fontWeight:700},children:"Dialog"}),(0,z.jsx)(j.Dialog.Description,{css:{textAlign:"center"},children:n[l]}),(0,z.jsxs)(j.Dialog.Actions,{css:{flexDirection:"column"},children:[(0,z.jsx)(j.Button,{css:{width:"100%",padding:"12px 24px",borderRadius:"$lg"},onPress:function(){return a(!1)},children:"Do it"}),(0,z.jsx)(j.Button,{css:{width:"100%",padding:"12px 24px",borderRadius:"$lg"},onPress:function(){return a(!1)},variant:"secondary",children:"Cancel"})]})]})})]})}},_={"components/common/ComponentLinkHeader.tsx":H.Z};function E(){return(0,z.jsx)(I.Z,(0,A.Z)({},C))}},22206:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/dialog",function(){return t(71683)}])}},function(n){n.O(0,[4308,9813,5675,7154,3866,9774,2888,179],function(){return n(n.s=22206)}),_N_E=n.O()}]);