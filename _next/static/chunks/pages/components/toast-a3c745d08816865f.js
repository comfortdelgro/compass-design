(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7449],{37166:function(t,e,n){"use strict";n.d(e,{Z:function(){return c}});var o,r,s=n(38443),a=n(48329),i=n.n(a),l=n(97458);function c(){return(0,l.jsxs)(s.Flexbox,{css:{marginBottom:"$4"},children:[(0,l.jsx)(i(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:o||(o=(0,l.jsx)(s.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,l.jsx)(i(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:r||(r=(0,l.jsx)(s.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},85363:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return tB}});var o,r,s,a,i,l,c,d,u,f,m,h,p,T,g,v,x,I,C,w,k,b,B,j,y,O,S,A,D,L,M,P,R,N,z,X,H,F,K,_,V,Z,E,q,$,J,G,W,Q,U,Y,tt,te,tn,to,tr={};n.r(tr),n.d(tr,{demoComponents:function(){return tk},demos:function(){return tw},docs:function(){return tC},srcComponents:function(){return tb}});var ts=n(2815),ta=n(30031),ti=n(94335),tl=n(63622),tc=n.n(tl),td=n(81901),tu=n(66580),tf=n(52983),tm=n.t(tf,2),th=n(38443),tp=n(48044),tT=n(12717),tg=n(97458),tv=function(){var t=(0,th.useToast)();return(0,tg.jsxs)(tg.Fragment,{children:[(0,tg.jsx)(th.Button,{css:{width:"fit-content"},onClick:function(){return t.show({color:"informative",title:"Lorem ipsum dolor, sit amet consectetur"})},children:"Open toast"}),(0,tg.jsx)(th.Button,{css:{width:"fit-content"},onClick:function(){return t.show({title:"Lorem ipsum dolor, sit amet consectetur",hasCloseIcon:!1})},children:"Open toast without close button"})]})},tx=function(){var t=(0,th.useToast)();return(0,tg.jsxs)(tg.Fragment,{children:[(0,tg.jsx)(th.Button,{css:{width:"fit-content"},onClick:function(){return t.show({autoClose:!1,message:"Lorem ipsum dolor, sit amet consectetur.",icon:E||(E=(0,tg.jsx)(th.Icon,{icon:tu.faImage})),title:"My Title",actions:(0,tg.jsxs)(tg.Fragment,{children:[q||(q=(0,tg.jsx)(th.Button,{children:"Take action"})),$||($=(0,tg.jsx)(th.Button,{children:"Take action"}))]}),label:"a few minutes ago"})},children:"Open toast autoClose: false"}),(0,tg.jsx)(th.Button,{css:{width:"fit-content"},onClick:function(){return t.clearAll()},children:"Clear all toasts"})]})},tI=n(37166),tC={en:{description:"Toasts provide brief notifications.",location:"/docs/data/components/toast/toast.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Toast</h1><p class="description">Toasts provide brief notifications.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Toast <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/toast\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or</p>\n<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>Toast<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="examples">Examples<a aria-labelledby="examples" class="anchor-link" href="#examples" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="default">Default<a aria-labelledby="default" class="anchor-link" href="#default" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"ToastDefault.tsx"},'<h3 id="color">Color<a aria-labelledby="color" class="anchor-link" href="#color" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"ToastColor.tsx"},'<h3 id="auto-close">Auto Close<a aria-labelledby="auto-close" class="anchor-link" href="#auto-close" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"ToastAutoClose.tsx"},'<h3 id="toast-as-a-service">Toast as a service<a aria-labelledby="toast-as-a-service" class="anchor-link" href="#toast-as-a-service" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3>',{demo:"ToastAsAService.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="toast-gt"><code>&lt;Toast/&gt;</code><a aria-labelledby="toast-gt" class="anchor-link" href="#toast-gt" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">color</td>\n<td align="left"><code>informative</code> | <code>neutral</code> | <code>negative</code> | <code>positive</code></td>\n<td align="left">&#39;neutral&#39;</td>\n<td align="left">Variants</td>\n</tr>\n<tr>\n<td align="left">handleClose</td>\n<td align="left"><code>Function</code></td>\n<td align="left">-</td>\n<td align="left">Callback to close toast.</td>\n</tr>\n<tr>\n<td align="left">isOpen</td>\n<td align="left"><code>boolean</code></td>\n<td align="left">false</td>\n<td align="left">The toast is visible when true.</td>\n</tr>\n<tr>\n<td align="left">autoClose</td>\n<td align="left"><code>false</code> | <code>number</code></td>\n<td align="left">false</td>\n<td align="left">Number of miliseconds to auto close.</td>\n</tr>\n<tr>\n<td align="left">css</td>\n<td align="left"><code>CSS</code></td>\n<td align="left">—</td>\n<td align="left">The system prop that allows defining system overrides as well as additional CSS styles.</td>\n</tr>\n</tbody></table>\n<h3 id="usetoast"><code>useToast()</code><a aria-labelledby="usetoast" class="anchor-link" href="#usetoast" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">show</td>\n<td align="left"><code>Function</code></td>\n<td align="left">-</td>\n<td align="left">Call to add toast to show in ToastContainer.</td>\n</tr>\n<tr>\n<td align="left">remove</td>\n<td align="left"><code>Function</code></td>\n<td align="left">-</td>\n<td align="left">Call to remove toast from ToastContext.</td>\n</tr>\n<tr>\n<td align="left">clearAll</td>\n<td align="left"><code>Function</code></td>\n<td align="left">—</td>\n<td align="left">Call to remove all toasts from ToastContext.</td>\n</tr>\n</tbody></table>\n<h3 id="toastcontextprovider"><code>ToastContextProvider</code><a aria-labelledby="toastcontextprovider" class="anchor-link" href="#toastcontextprovider" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">anchorOrigin</td>\n<td align="left"><code>Anchor</code></td>\n<td align="left"><code>{horizontal: &#39;right&#39;, vertical: &#39;top&#39;}</code></td>\n<td align="left">Placements of ToastContainer.</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Examples",level:2,hash:"examples",children:[{text:"Default",level:3,hash:"default"},{text:"Color",level:3,hash:"color"},{text:"Auto Close",level:3,hash:"auto-close"},{text:"Toast as a service",level:3,hash:"toast-as-a-service"}]},{text:"Props",level:2,hash:"props",children:[{text:"<code>&lt;Toast/&gt;</code>",level:3,hash:"toast-gt"},{text:"<code>useToast(&#8203;)</code>",level:3,hash:"usetoast"},{text:"<code>ToastContextProvider</code>",level:3,hash:"toastcontextprovider"}]}],title:"React Page Toast component",headers:{title:"React Page Toast component",components:["Toast"],hooks:[]}}},tw={"ToastDefault.tsx":{module:"./ToastDefault.tsx",raw:"import Button from '@comfortdelgro/react-compass/button'\r\nimport Icon from '@comfortdelgro/react-compass/icon'\r\nimport Toast from '@comfortdelgro/react-compass/toast'\r\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\r\nimport React from 'react'\r\n\r\nconst Default: React.FC = () => {\r\n  const [isDefaultOpen, setIsDefaultOpen] = React.useState(false)\r\n\r\n  return (\r\n    <div>\r\n      <h3>Default toast</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsDefaultOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast isOpen={isDefaultOpen} handleClose={() => setIsDefaultOpen(false)}>\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Default\r\n",moduleTS:"./ToastDefault.tsx",rawTS:"import Button from '@comfortdelgro/react-compass/button'\r\nimport Icon from '@comfortdelgro/react-compass/icon'\r\nimport Toast from '@comfortdelgro/react-compass/toast'\r\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\r\nimport React from 'react'\r\n\r\nconst Default: React.FC = () => {\r\n  const [isDefaultOpen, setIsDefaultOpen] = React.useState(false)\r\n\r\n  return (\r\n    <div>\r\n      <h3>Default toast</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsDefaultOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast isOpen={isDefaultOpen} handleClose={() => setIsDefaultOpen(false)}>\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Default\r\n"},"ToastColor.tsx":{module:"./ToastColor.tsx",raw:"import Button from '@comfortdelgro/react-compass/button'\r\nimport Icon from '@comfortdelgro/react-compass/icon'\r\nimport Toast from '@comfortdelgro/react-compass/toast'\r\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\r\nimport React from 'react'\r\n\r\nconst Colors: React.FC = () => {\r\n  const [isInformativeOpen, setIsInformativeOpen] = React.useState(false)\r\n  const [isNeutralOpen, setIsNeutralOpen] = React.useState(false)\r\n  const [isPositiveOpen, setIsPositiveOpen] = React.useState(false)\r\n  const [isNegativeOpen, setIsNegativeOpen] = React.useState(false)\r\n\r\n  return (\r\n    <div>\r\n      <h3>Informative: blue</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsInformativeOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isInformativeOpen}\r\n        handleClose={() => setIsInformativeOpen(false)}\r\n        color='informative'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n\r\n      <h3>Neutral: white</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsNeutralOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isNeutralOpen}\r\n        handleClose={() => setIsNeutralOpen(false)}\r\n        color='neutral'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n\r\n      <h3>Negative: red</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsNegativeOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isNegativeOpen}\r\n        handleClose={() => setIsNegativeOpen(false)}\r\n        color='negative'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n\r\n      <h3>Positive: green</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsPositiveOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isPositiveOpen}\r\n        handleClose={() => setIsPositiveOpen(false)}\r\n        color='positive'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Colors\r\n",moduleTS:"./ToastColor.tsx",rawTS:"import Button from '@comfortdelgro/react-compass/button'\r\nimport Icon from '@comfortdelgro/react-compass/icon'\r\nimport Toast from '@comfortdelgro/react-compass/toast'\r\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\r\nimport React from 'react'\r\n\r\nconst Colors: React.FC = () => {\r\n  const [isInformativeOpen, setIsInformativeOpen] = React.useState(false)\r\n  const [isNeutralOpen, setIsNeutralOpen] = React.useState(false)\r\n  const [isPositiveOpen, setIsPositiveOpen] = React.useState(false)\r\n  const [isNegativeOpen, setIsNegativeOpen] = React.useState(false)\r\n\r\n  return (\r\n    <div>\r\n      <h3>Informative: blue</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsInformativeOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isInformativeOpen}\r\n        handleClose={() => setIsInformativeOpen(false)}\r\n        color='informative'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n\r\n      <h3>Neutral: white</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsNeutralOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isNeutralOpen}\r\n        handleClose={() => setIsNeutralOpen(false)}\r\n        color='neutral'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n\r\n      <h3>Negative: red</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsNegativeOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isNegativeOpen}\r\n        handleClose={() => setIsNegativeOpen(false)}\r\n        color='negative'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n\r\n      <h3>Positive: green</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsPositiveOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isPositiveOpen}\r\n        handleClose={() => setIsPositiveOpen(false)}\r\n        color='positive'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Colors\r\n"},"ToastAutoClose.tsx":{module:"./ToastAutoClose.tsx",raw:"import {Icon} from '@comfortdelgro/react-compass'\r\nimport Button from '@comfortdelgro/react-compass/button'\r\nimport Toast from '@comfortdelgro/react-compass/toast'\r\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\r\nimport React from 'react'\r\n\r\nconst AutoClose: React.FC = () => {\r\n  const [isAutoCloseOpen, setIsAutoCloseOpen] = React.useState(false)\r\n  return (\r\n    <div>\r\n      <h3>Auto-close toast</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsAutoCloseOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isAutoCloseOpen}\r\n        handleClose={() => setIsAutoCloseOpen(false)}\r\n        autoClose={500}\r\n        color='informative'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AutoClose\r\n",moduleTS:"./ToastAutoClose.tsx",rawTS:"import {Icon} from '@comfortdelgro/react-compass'\r\nimport Button from '@comfortdelgro/react-compass/button'\r\nimport Toast from '@comfortdelgro/react-compass/toast'\r\nimport {faImage, faXmark} from '@fortawesome/free-solid-svg-icons'\r\nimport React from 'react'\r\n\r\nconst AutoClose: React.FC = () => {\r\n  const [isAutoCloseOpen, setIsAutoCloseOpen] = React.useState(false)\r\n  return (\r\n    <div>\r\n      <h3>Auto-close toast</h3>\r\n      <Button css={{width: '8rem'}} onPress={() => setIsAutoCloseOpen(true)}>\r\n        Open toast\r\n      </Button>\r\n      <Toast\r\n        isOpen={isAutoCloseOpen}\r\n        handleClose={() => setIsAutoCloseOpen(false)}\r\n        autoClose={500}\r\n        color='informative'\r\n      >\r\n        <Toast.Icon>\r\n          <Icon icon={faImage} />\r\n        </Toast.Icon>\r\n        <Toast.Title>My Title</Toast.Title>\r\n        <Toast.Label>a few minutes ago</Toast.Label>\r\n        <Toast.CloseIcon>\r\n          <Icon icon={faXmark} />\r\n        </Toast.CloseIcon>\r\n        <Toast.Message>Lorem ipsum dolor, sit amet consectetur.</Toast.Message>\r\n        <Toast.Actions>\r\n          <Button>Take action</Button>\r\n          <Button>Take action</Button>\r\n        </Toast.Actions>\r\n      </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AutoClose\r\n"},"ToastAsAService.tsx":{module:"./ToastAsAService.tsx",raw:"import {\r\n  Button,\r\n  Icon,\r\n  ToastContextProvider,\r\n  useToast,\r\n} from '@comfortdelgro/react-compass'\r\nimport Dropdown from '@comfortdelgro/react-compass/dropdown'\r\nimport {faImage} from '@fortawesome/free-solid-svg-icons'\r\nimport React, {Key} from 'react'\r\n\r\nconst SubService1 = () => {\r\n  const toast = useToast()\r\n  return (\r\n    <>\r\n      <Button\r\n        css={{width: 'fit-content'}}\r\n        onClick={() =>\r\n          toast.show({\r\n            color: 'informative',\r\n            title: 'Lorem ipsum dolor, sit amet consectetur',\r\n          })\r\n        }\r\n      >\r\n        Open toast\r\n      </Button>\r\n      <Button\r\n        css={{width: 'fit-content'}}\r\n        onClick={() =>\r\n          toast.show({\r\n            title: 'Lorem ipsum dolor, sit amet consectetur',\r\n            hasCloseIcon: false,\r\n          })\r\n        }\r\n      >\r\n        Open toast without close button\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\nconst SubService2 = () => {\r\n  const toast = useToast()\r\n  return (\r\n    <>\r\n      <Button\r\n        css={{width: 'fit-content'}}\r\n        onClick={() =>\r\n          toast.show({\r\n            autoClose: false,\r\n            message: 'Lorem ipsum dolor, sit amet consectetur.',\r\n            icon: <Icon icon={faImage} />,\r\n            title: 'My Title',\r\n            actions: (\r\n              <>\r\n                <Button>Take action</Button>\r\n                <Button>Take action</Button>\r\n              </>\r\n            ),\r\n            label: 'a few minutes ago',\r\n          })\r\n        }\r\n      >\r\n        Open toast autoClose: false\r\n      </Button>\r\n      <Button css={{width: 'fit-content'}} onClick={() => toast.clearAll()}>\r\n        Clear all toasts\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ToastAsService: React.FC = () => {\r\n  const [horizontal, setHorizontal] = React.useState<\r\n    'center' | 'left' | 'right'\r\n  >('right')\r\n  const [vertical, setVertical] = React.useState<'center' | 'top' | 'bottom'>(\r\n    'top',\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h3>Toast as a service</h3>\r\n      <Dropdown.Select\r\n        isRequired\r\n        label='Please select horizontal'\r\n        placeholder='Choose a horizontal'\r\n        selectedKey={horizontal}\r\n        onSelectionChange={(k: Key) =>\r\n          setHorizontal(k as 'center' | 'left' | 'right')\r\n        }\r\n      >\r\n        <Dropdown.Item key='left'>Left</Dropdown.Item>\r\n        <Dropdown.Item key='center'>Center</Dropdown.Item>\r\n        <Dropdown.Item key='right'>Right</Dropdown.Item>\r\n      </Dropdown.Select>\r\n      <br />\r\n      <Dropdown.Select\r\n        isRequired\r\n        label='Please select vertical'\r\n        placeholder='Choose a vertical'\r\n        selectedKey={vertical}\r\n        onSelectionChange={(k: Key) =>\r\n          setVertical(k as 'center' | 'top' | 'bottom')\r\n        }\r\n      >\r\n        <Dropdown.Item key='top'>Top</Dropdown.Item>\r\n        <Dropdown.Item key='center'>Center</Dropdown.Item>\r\n        <Dropdown.Item key='bottom'>Bottom</Dropdown.Item>\r\n      </Dropdown.Select>\r\n      <ToastContextProvider anchorOrigin={{horizontal, vertical}}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            gap: '0.5rem',\r\n            margin: '1rem',\r\n          }}\r\n        >\r\n          <SubService1 />\r\n          <SubService2 />\r\n        </div>\r\n      </ToastContextProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToastAsService\r\n",moduleTS:"./ToastAsAService.tsx",rawTS:"import {\r\n  Button,\r\n  Icon,\r\n  ToastContextProvider,\r\n  useToast,\r\n} from '@comfortdelgro/react-compass'\r\nimport Dropdown from '@comfortdelgro/react-compass/dropdown'\r\nimport {faImage} from '@fortawesome/free-solid-svg-icons'\r\nimport React, {Key} from 'react'\r\n\r\nconst SubService1 = () => {\r\n  const toast = useToast()\r\n  return (\r\n    <>\r\n      <Button\r\n        css={{width: 'fit-content'}}\r\n        onClick={() =>\r\n          toast.show({\r\n            color: 'informative',\r\n            title: 'Lorem ipsum dolor, sit amet consectetur',\r\n          })\r\n        }\r\n      >\r\n        Open toast\r\n      </Button>\r\n      <Button\r\n        css={{width: 'fit-content'}}\r\n        onClick={() =>\r\n          toast.show({\r\n            title: 'Lorem ipsum dolor, sit amet consectetur',\r\n            hasCloseIcon: false,\r\n          })\r\n        }\r\n      >\r\n        Open toast without close button\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\nconst SubService2 = () => {\r\n  const toast = useToast()\r\n  return (\r\n    <>\r\n      <Button\r\n        css={{width: 'fit-content'}}\r\n        onClick={() =>\r\n          toast.show({\r\n            autoClose: false,\r\n            message: 'Lorem ipsum dolor, sit amet consectetur.',\r\n            icon: <Icon icon={faImage} />,\r\n            title: 'My Title',\r\n            actions: (\r\n              <>\r\n                <Button>Take action</Button>\r\n                <Button>Take action</Button>\r\n              </>\r\n            ),\r\n            label: 'a few minutes ago',\r\n          })\r\n        }\r\n      >\r\n        Open toast autoClose: false\r\n      </Button>\r\n      <Button css={{width: 'fit-content'}} onClick={() => toast.clearAll()}>\r\n        Clear all toasts\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ToastAsService: React.FC = () => {\r\n  const [horizontal, setHorizontal] = React.useState<\r\n    'center' | 'left' | 'right'\r\n  >('right')\r\n  const [vertical, setVertical] = React.useState<'center' | 'top' | 'bottom'>(\r\n    'top',\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h3>Toast as a service</h3>\r\n      <Dropdown.Select\r\n        isRequired\r\n        label='Please select horizontal'\r\n        placeholder='Choose a horizontal'\r\n        selectedKey={horizontal}\r\n        onSelectionChange={(k: Key) =>\r\n          setHorizontal(k as 'center' | 'left' | 'right')\r\n        }\r\n      >\r\n        <Dropdown.Item key='left'>Left</Dropdown.Item>\r\n        <Dropdown.Item key='center'>Center</Dropdown.Item>\r\n        <Dropdown.Item key='right'>Right</Dropdown.Item>\r\n      </Dropdown.Select>\r\n      <br />\r\n      <Dropdown.Select\r\n        isRequired\r\n        label='Please select vertical'\r\n        placeholder='Choose a vertical'\r\n        selectedKey={vertical}\r\n        onSelectionChange={(k: Key) =>\r\n          setVertical(k as 'center' | 'top' | 'bottom')\r\n        }\r\n      >\r\n        <Dropdown.Item key='top'>Top</Dropdown.Item>\r\n        <Dropdown.Item key='center'>Center</Dropdown.Item>\r\n        <Dropdown.Item key='bottom'>Bottom</Dropdown.Item>\r\n      </Dropdown.Select>\r\n      <ToastContextProvider anchorOrigin={{horizontal, vertical}}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            gap: '0.5rem',\r\n            margin: '1rem',\r\n          }}\r\n        >\r\n          <SubService1 />\r\n          <SubService2 />\r\n        </div>\r\n      </ToastContextProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToastAsService\r\n"}};tw.scope={process:{},import:{"@comfortdelgro/react-compass/button":ti,"@comfortdelgro/react-compass/icon":tl,"@comfortdelgro/react-compass/toast":td,"@fortawesome/free-solid-svg-icons":tu,react:tm,"@comfortdelgro/react-compass":th,"@comfortdelgro/react-compass/dropdown":tp}};var tk={"./ToastDefault.tsx":function(){var t=tf.useState(!1),e=(0,tT.Z)(t,2),n=e[0],d=e[1];return(0,tg.jsxs)("div",{children:[o||(o=(0,tg.jsx)("h3",{children:"Default toast"})),(0,tg.jsx)(ti.default,{css:{width:"8rem"},onPress:function(){return d(!0)},children:"Open toast"}),(0,tg.jsxs)(td.default,{isOpen:n,handleClose:function(){return d(!1)},children:[r||(r=(0,tg.jsx)(td.default.Icon,{children:(0,tg.jsx)(tc(),{icon:tu.faImage})})),s||(s=(0,tg.jsx)(td.default.Title,{children:"My Title"})),a||(a=(0,tg.jsx)(td.default.Label,{children:"a few minutes ago"})),i||(i=(0,tg.jsx)(td.default.CloseIcon,{children:(0,tg.jsx)(tc(),{icon:tu.faXmark})})),l||(l=(0,tg.jsx)(td.default.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),c||(c=(0,tg.jsxs)(td.default.Actions,{children:[(0,tg.jsx)(ti.default,{children:"Take action"}),(0,tg.jsx)(ti.default,{children:"Take action"})]}))]})]})},"./ToastColor.tsx":function(){var t=tf.useState(!1),e=(0,tT.Z)(t,2),n=e[0],o=e[1],r=tf.useState(!1),s=(0,tT.Z)(r,2),a=s[0],i=s[1],l=tf.useState(!1),c=(0,tT.Z)(l,2),X=c[0],H=c[1],F=tf.useState(!1),K=(0,tT.Z)(F,2),_=K[0],V=K[1];return(0,tg.jsxs)("div",{children:[d||(d=(0,tg.jsx)("h3",{children:"Informative: blue"})),(0,tg.jsx)(ti.default,{css:{width:"8rem"},onPress:function(){return o(!0)},children:"Open toast"}),(0,tg.jsxs)(td.default,{isOpen:n,handleClose:function(){return o(!1)},color:"informative",children:[u||(u=(0,tg.jsx)(td.default.Icon,{children:(0,tg.jsx)(tc(),{icon:tu.faImage})})),f||(f=(0,tg.jsx)(td.default.Title,{children:"My Title"})),m||(m=(0,tg.jsx)(td.default.Label,{children:"a few minutes ago"})),h||(h=(0,tg.jsx)(td.default.CloseIcon,{children:(0,tg.jsx)(tc(),{icon:tu.faXmark})})),p||(p=(0,tg.jsx)(td.default.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),T||(T=(0,tg.jsxs)(td.default.Actions,{children:[(0,tg.jsx)(ti.default,{children:"Take action"}),(0,tg.jsx)(ti.default,{children:"Take action"})]}))]}),g||(g=(0,tg.jsx)("h3",{children:"Neutral: white"})),(0,tg.jsx)(ti.default,{css:{width:"8rem"},onPress:function(){return i(!0)},children:"Open toast"}),(0,tg.jsxs)(td.default,{isOpen:a,handleClose:function(){return i(!1)},color:"neutral",children:[v||(v=(0,tg.jsx)(td.default.Icon,{children:(0,tg.jsx)(tc(),{icon:tu.faImage})})),x||(x=(0,tg.jsx)(td.default.Title,{children:"My Title"})),I||(I=(0,tg.jsx)(td.default.Label,{children:"a few minutes ago"})),C||(C=(0,tg.jsx)(td.default.CloseIcon,{children:(0,tg.jsx)(tc(),{icon:tu.faXmark})})),w||(w=(0,tg.jsx)(td.default.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),k||(k=(0,tg.jsxs)(td.default.Actions,{children:[(0,tg.jsx)(ti.default,{children:"Take action"}),(0,tg.jsx)(ti.default,{children:"Take action"})]}))]}),b||(b=(0,tg.jsx)("h3",{children:"Negative: red"})),(0,tg.jsx)(ti.default,{css:{width:"8rem"},onPress:function(){return V(!0)},children:"Open toast"}),(0,tg.jsxs)(td.default,{isOpen:_,handleClose:function(){return V(!1)},color:"negative",children:[B||(B=(0,tg.jsx)(td.default.Icon,{children:(0,tg.jsx)(tc(),{icon:tu.faImage})})),j||(j=(0,tg.jsx)(td.default.Title,{children:"My Title"})),y||(y=(0,tg.jsx)(td.default.Label,{children:"a few minutes ago"})),O||(O=(0,tg.jsx)(td.default.CloseIcon,{children:(0,tg.jsx)(tc(),{icon:tu.faXmark})})),S||(S=(0,tg.jsx)(td.default.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),A||(A=(0,tg.jsxs)(td.default.Actions,{children:[(0,tg.jsx)(ti.default,{children:"Take action"}),(0,tg.jsx)(ti.default,{children:"Take action"})]}))]}),D||(D=(0,tg.jsx)("h3",{children:"Positive: green"})),(0,tg.jsx)(ti.default,{css:{width:"8rem"},onPress:function(){return H(!0)},children:"Open toast"}),(0,tg.jsxs)(td.default,{isOpen:X,handleClose:function(){return H(!1)},color:"positive",children:[L||(L=(0,tg.jsx)(td.default.Icon,{children:(0,tg.jsx)(tc(),{icon:tu.faImage})})),M||(M=(0,tg.jsx)(td.default.Title,{children:"My Title"})),P||(P=(0,tg.jsx)(td.default.Label,{children:"a few minutes ago"})),R||(R=(0,tg.jsx)(td.default.CloseIcon,{children:(0,tg.jsx)(tc(),{icon:tu.faXmark})})),N||(N=(0,tg.jsx)(td.default.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),z||(z=(0,tg.jsxs)(td.default.Actions,{children:[(0,tg.jsx)(ti.default,{children:"Take action"}),(0,tg.jsx)(ti.default,{children:"Take action"})]}))]})]})},"./ToastAutoClose.tsx":function(){var t=tf.useState(!1),e=(0,tT.Z)(t,2),n=e[0],o=e[1];return(0,tg.jsxs)("div",{children:[X||(X=(0,tg.jsx)("h3",{children:"Auto-close toast"})),(0,tg.jsx)(ti.default,{css:{width:"8rem"},onPress:function(){return o(!0)},children:"Open toast"}),(0,tg.jsxs)(td.default,{isOpen:n,handleClose:function(){return o(!1)},autoClose:500,color:"informative",children:[H||(H=(0,tg.jsx)(td.default.Icon,{children:(0,tg.jsx)(th.Icon,{icon:tu.faImage})})),F||(F=(0,tg.jsx)(td.default.Title,{children:"My Title"})),K||(K=(0,tg.jsx)(td.default.Label,{children:"a few minutes ago"})),_||(_=(0,tg.jsx)(td.default.CloseIcon,{children:(0,tg.jsx)(th.Icon,{icon:tu.faXmark})})),V||(V=(0,tg.jsx)(td.default.Message,{children:"Lorem ipsum dolor, sit amet consectetur."})),Z||(Z=(0,tg.jsxs)(td.default.Actions,{children:[(0,tg.jsx)(ti.default,{children:"Take action"}),(0,tg.jsx)(ti.default,{children:"Take action"})]}))]})]})},"./ToastAsAService.tsx":function(){var t=tf.useState("right"),e=(0,tT.Z)(t,2),n=e[0],o=e[1],r=tf.useState("top"),s=(0,tT.Z)(r,2),a=s[0],i=s[1];return(0,tg.jsxs)("div",{children:[J||(J=(0,tg.jsx)("h3",{children:"Toast as a service"})),(0,tg.jsxs)(tp.default.Select,{isRequired:!0,label:"Please select horizontal",placeholder:"Choose a horizontal",selectedKey:n,onSelectionChange:function(t){return o(t)},children:[G||(G=(0,tg.jsx)(tp.default.Item,{children:"Left"},"left")),W||(W=(0,tg.jsx)(tp.default.Item,{children:"Center"},"center")),Q||(Q=(0,tg.jsx)(tp.default.Item,{children:"Right"},"right"))]}),U||(U=(0,tg.jsx)("br",{})),(0,tg.jsxs)(tp.default.Select,{isRequired:!0,label:"Please select vertical",placeholder:"Choose a vertical",selectedKey:a,onSelectionChange:function(t){return i(t)},children:[Y||(Y=(0,tg.jsx)(tp.default.Item,{children:"Top"},"top")),tt||(tt=(0,tg.jsx)(tp.default.Item,{children:"Center"},"center")),te||(te=(0,tg.jsx)(tp.default.Item,{children:"Bottom"},"bottom"))]}),(0,tg.jsx)(th.ToastContextProvider,{anchorOrigin:{horizontal:n,vertical:a},children:(0,tg.jsxs)("div",{style:{display:"flex",justifyContent:"center",gap:"0.5rem",margin:"1rem"},children:[tn||(tn=(0,tg.jsx)(tv,{})),to||(to=(0,tg.jsx)(tx,{}))]})})]})}},tb={"components/common/ComponentLinkHeader.tsx":tI.Z};function tB(){return(0,tg.jsx)(ta.Z,(0,ts.Z)({},tr))}},51910:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/toast",function(){return n(85363)}])}},function(t){t.O(0,[4308,8553,964,9958,31,9774,2888,179],function(){return t(t.s=51910)}),_N_E=t.O()}]);