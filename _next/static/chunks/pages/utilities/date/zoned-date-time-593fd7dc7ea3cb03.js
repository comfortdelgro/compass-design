(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[190],{74710:function(n,s,a){"use strict";a.d(s,{Z:function(){return l}});var e,t,o=a(38443),p=a(54284),c=a.n(p),i=a(97458);function l(){return(0,i.jsxs)(o.Flexbox,{css:{marginBottom:"$4"},children:[(0,i.jsx)(c(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:e||(e=(0,i.jsx)(o.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,i.jsx)(c(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:t||(t=(0,i.jsx)(o.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},23006:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return d}});var e={};a.r(e),a.d(e,{demoComponents:function(){return l},demos:function(){return i},docs:function(){return c},srcComponents:function(){return r}});var t=a(80208),o=a(34706),p=a(74710),c={en:{description:"A ZonedDateTime represents a date and time in a specific time zone and calendar system.",location:"/docs/data/utilities/date/zoned-date-time.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>ZonedDateTime</h1><p class="description">A ZonedDateTime represents a date and time in a specific time zone and calendar system.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<h2 id="introduction">Introduction<a aria-labelledby="introduction" class="anchor-link" href="#introduction" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>A <code>ZonedDateTime</code> object represents an exact date and time in a specific time zone, in a specific calendar system such as the Gregorian calendar. Use this type to represent an exact moment in time at a particular location on Earth.</p>\n<p>A <code>ZonedDateTime</code> can be created using the constructor. This example creates a date that represents February 3rd, 2022 at 9:15 AM in the Gregorian calendar system, with a time zone of <code>&quot;America/Los Angeles&quot;</code>.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>ZonedDateTime<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">(</span>\n  <span class="token comment">// Date</span>\n  <span class="token number">2022</span><span class="token punctuation">,</span>\n  <span class="token number">2</span><span class="token punctuation">,</span>\n  <span class="token number">3</span><span class="token punctuation">,</span>\n  <span class="token comment">// Time zone and UTC offset</span>\n  <span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">,</span>\n  <span class="token operator">-</span><span class="token number">28800000</span><span class="token punctuation">,</span>\n  <span class="token comment">// Time</span>\n  <span class="token number">9</span><span class="token punctuation">,</span>\n  <span class="token number">15</span><span class="token punctuation">,</span>\n  <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>You can also create a <code>ZonedDateTime</code> using a <code>Date</code> object or epoch time (milliseconds) using one of the following functions:</p>\n<ul>\n<li><code>fromDate</code> – This function creates a <code>ZonedDateTime</code> from a <code>Date</code> object. A time zone identifier, e.g. <code>America/Los_Angeles</code>, must be passed, and the result will be converted into that time zone.</li>\n<li><code>fromAbsolute</code> – This function creates a <code>ZonedDateTime</code> from a Unix epoch (e.g. <code>1688023843144</code>, representing milliseconds since 1970). A time zone identifier, e.g. <code>America/Los_Angeles</code>, must be provided, and the result will be converted into that time zone.</li>\n</ul>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>fromAbsolute<span class="token punctuation">,</span> fromDate<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">fromDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">fromAbsolute</span><span class="token punctuation">(</span><span class="token number">1688023843144</span><span class="token punctuation">,</span> <span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">)</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The current time can be retrieved using the <code>now</code> function. This requires a time zone identifier to be provided, which is used to determine the local time. The <code>getLocalTimeZone</code> function can be used to retrieve the user&#39;s current time zone.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>getLocalTimeZone<span class="token punctuation">,</span> now<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> nyTime <span class="token operator">=</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token string">\'America/New_York\'</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> localTime <span class="token operator">=</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token function">getLocalTimeZone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Once you have a <code>ZonedDateTime</code> object, you can read its properties, or manipulate it as described in the <a href="#manipulating-dates" >Manipulating dates</a> section below. You can also convert it to an ISO 8601 string, native JavaScript <code>Date</code> object, or another representation. See the <a href="#conversion" >Conversion</a> section below for details.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">(</span>\n  <span class="token number">2022</span><span class="token punctuation">,</span>\n  <span class="token number">2</span><span class="token punctuation">,</span>\n  <span class="token number">3</span><span class="token punctuation">,</span>\n  <span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">,</span>\n  <span class="token operator">-</span><span class="token number">28800000</span><span class="token punctuation">,</span>\n  <span class="token number">12</span><span class="token punctuation">,</span>\n  <span class="token number">24</span><span class="token punctuation">,</span>\n  <span class="token number">45</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n\ndate<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \'2022-02-03T12:24:45-08:00[America/Los_Angeles]\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="properties-amp-methods">Properties &amp; Methods<a aria-labelledby="properties-amp-methods" class="anchor-link" href="#properties-amp-methods" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">calendar</td>\n<td align="left"><code>Calendar</code></td>\n<td align="left">The calendar system associated with this date, e.g. Gregorian.</td>\n</tr>\n<tr>\n<td align="left">era</td>\n<td align="left"><code>string</code></td>\n<td align="left">The calendar era for this date, e.g. &quot;BC&quot; or &quot;AD&quot;.</td>\n</tr>\n<tr>\n<td align="left">year</td>\n<td align="left"><code>number</code></td>\n<td align="left">The year of this date within the era.</td>\n</tr>\n<tr>\n<td align="left">month</td>\n<td align="left"><code>number</code></td>\n<td align="left">The month number within the year. Note that some calendar systems such as Hebrew may have a variable number of months per year. Therefore, month numbers may not always correspond to the same month names in different years.</td>\n</tr>\n<tr>\n<td align="left">day</td>\n<td align="left"><code>number</code></td>\n<td align="left">The day number within the month.</td>\n</tr>\n<tr>\n<td align="left">hour</td>\n<td align="left"><code>number</code></td>\n<td align="left">The day number within the month.</td>\n</tr>\n<tr>\n<td align="left">minute</td>\n<td align="left"><code>number</code></td>\n<td align="left">The day number within the month.</td>\n</tr>\n<tr>\n<td align="left">second</td>\n<td align="left"><code>number</code></td>\n<td align="left">The day number within the month.</td>\n</tr>\n<tr>\n<td align="left">millisecond</td>\n<td align="left"><code>number</code></td>\n<td align="left">The millisecond in the second.</td>\n</tr>\n<tr>\n<td align="left">timeZone</td>\n<td align="left"><code>number</code></td>\n<td align="left">The IANA time zone identifier that this date and time is represented in.</td>\n</tr>\n<tr>\n<td align="left">offset</td>\n<td align="left"><code>number</code></td>\n<td align="left">The UTC offset for this time, in milliseconds.</td>\n</tr>\n<tr>\n<td align="left">constructor</td>\n<td align="left"><code>(...args: any[]): void  </code></td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="left">copy</td>\n<td align="left"><code>(): ZonedDateTime  </code></td>\n<td align="left">Returns a copy of this date.</td>\n</tr>\n<tr>\n<td align="left">add</td>\n<td align="left"><code>(duration: DateTimeDuration): void</code></td>\n<td align="left">Returns a new ZonedDateTime with the given duration added to it.</td>\n</tr>\n<tr>\n<td align="left">subtract</td>\n<td align="left"><code>(duration: DateTimeDuration): CalendarDate</code></td>\n<td align="left">Returns a new ZonedDateTime with the given duration subtracted from it.</td>\n</tr>\n<tr>\n<td align="left">set</td>\n<td align="left"><code>(fields: DateFields &amp; TimeFields, disambiguation?: Disambiguation): void	</code></td>\n<td align="left">Returns a new ZonedDateTime with the given fields set to the provided values. Other fields will be constrained accordingly.</td>\n</tr>\n<tr>\n<td align="left">cycle</td>\n<td align="left"><code>( field: DateField | TimeField, amount: number, options?: CycleOptions ): void</code></td>\n<td align="left">Returns a new ZonedDateTime with the given field adjusted by a specified amount. When the resulting value reaches the limits of the field, it wraps around.</td>\n</tr>\n<tr>\n<td align="left">toDate</td>\n<td align="left"><code>(): void</code></td>\n<td align="left">Converts the date to a native JavaScript Date object.</td>\n</tr>\n<tr>\n<td align="left">toString</td>\n<td align="left"><code>(): void</code></td>\n<td align="left">Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier.</td>\n</tr>\n<tr>\n<td align="left">toAbsoluteString</td>\n<td align="left"><code>(): void</code></td>\n<td align="left">Converts the date to an ISO 8601 formatted string in UTC.</td>\n</tr>\n<tr>\n<td align="left">compare</td>\n<td align="left"><code>(b: AnyCalendarDate): number</code></td>\n<td align="left">Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after.</td>\n</tr>\n</tbody></table>\n<h2 id="calendar-systems">Calendar systems<a aria-labelledby="calendar-systems" class="anchor-link" href="#calendar-systems" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default, <code>ZonedDateTime</code> uses the Gregorian calendar system, but many other calendar systems that are used around the world are supported, such as Hebrew, Indian, Islamic, Buddhist, Ethiopic, and more. A <code>Calendar</code> instance can be passed to the <code>ZonedDateTime</code> constructor to represent dates in that calendar system.</p>\n<p>This example creates a date in the Buddhist calendar system, which is equivalent to April 30th, 2020 at 9:15 AM in the Gregorian calendar.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>BuddhistCalendar<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">(</span>\n  <span class="token keyword">new</span> <span class="token class-name">BuddhistCalendar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token number">2563</span><span class="token punctuation">,</span>\n  <span class="token number">4</span><span class="token punctuation">,</span>\n  <span class="token number">30</span><span class="token punctuation">,</span>\n  <span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">,</span>\n  <span class="token operator">-</span><span class="token number">28800000</span><span class="token punctuation">,</span>\n  <span class="token number">9</span><span class="token punctuation">,</span>\n  <span class="token number">15</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>See the <code>Calendar</code> docs for details about the supported calendars.</p>\n<h3 id="eras">Eras<a aria-labelledby="eras" class="anchor-link" href="#eras" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Many calendar systems have only one era, or a modern era and a pre-modern era (e.g. AD and BC in the Gregorian calendar). However, other calendar systems may have many eras. For example, the Japanese calendar has eras for the reign of each Emperor. <code>ZonedDateTime</code> represents eras using string identifiers, which can be passed as an additional parameter to the constructor before the year. When eras are present, years are numbered starting from 1 within the era.</p>\n<p>This example creates a date in the Japanese calendar system, which is equivalent to April 30th, 2019 at 9:15 AM in the Gregorian calendar.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>JapaneseCalendar<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">(</span>\n  <span class="token keyword">new</span> <span class="token class-name">JapaneseCalendar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token string">\'heisei\'</span><span class="token punctuation">,</span>\n  <span class="token number">31</span><span class="token punctuation">,</span>\n  <span class="token number">4</span><span class="token punctuation">,</span>\n  <span class="token number">30</span><span class="token punctuation">,</span>\n  <span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">,</span>\n  <span class="token operator">-</span><span class="token number">28800000</span><span class="token punctuation">,</span>\n  <span class="token number">9</span><span class="token punctuation">,</span>\n  <span class="token number">15</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>A list of valid era identifiers can be retrieved using the <code>getEras</code> method of a <code>Calendar</code> instance. If an era is not provided, the date is assumed to be in the current era.</p>\n<h3 id="converting-between-calendars">Converting between calendars<a aria-labelledby="converting-between-calendars" class="anchor-link" href="#converting-between-calendars" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>toCalendar</code> function can be used to convert a date from one calendar system to another.</p>\n<p>This example converts a Gregorian date to a Hebrew one.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>HebrewCalendar<span class="token punctuation">,</span> toCalendar<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> gregorianDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">(</span>\n  <span class="token number">2020</span><span class="token punctuation">,</span>\n  <span class="token number">9</span><span class="token punctuation">,</span>\n  <span class="token number">19</span><span class="token punctuation">,</span>\n  <span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">,</span>\n  <span class="token operator">-</span><span class="token number">28800000</span><span class="token punctuation">,</span>\n  <span class="token number">10</span><span class="token punctuation">,</span>\n  <span class="token number">30</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> hebrewDate <span class="token operator">=</span> <span class="token function">toCalendar</span><span class="token punctuation">(</span>gregorianDate<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HebrewCalendar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="manipulating-dates">Manipulating dates<a aria-labelledby="manipulating-dates" class="anchor-link" href="#manipulating-dates" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="adding-and-subtracting-durations">Adding and subtracting durations<a aria-labelledby="adding-and-subtracting-durations" class="anchor-link" href="#adding-and-subtracting-durations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A <code>DateTimeDuration</code> is an object that represents an amount of time, with fields such as <code>years</code>, <code>months</code>, <code>hours</code>, and <code>minutes</code>. The <code>add</code> and <code>subtract</code> methods of <code>ZonedDateTime</code> objects can be used to adjust the date by the given duration. These methods return a new date, and do not mutate the original.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>weeks<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-10T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>months<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-03-03T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>years<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> months<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> days<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2023-03-04T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hours<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T10:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>minutes<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T10:15[America/Los_Angeles]</span>\n\ndate<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">{</span>weeks<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-01-27T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">{</span>months<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-01-03T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">{</span>years<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> months<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> days<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2021-01-02T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hours<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T8:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token punctuation">{</span>minutes<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T09:15[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Adding or subtracting a duration that goes beyond the limits of a particular field will cause the date to be <em>balanced</em>. For example, adding one day to August 31st results in September 1st. In addition, if adding or subtracting one field causes another to be invalid, the date will be <em>constrained</em>. For example, adding one month to August 31st results in September 30th because September 31st does not exist.</p>\n<p>Adding and subtracting is time zone aware. When adjusting a date around a daylight saving time transition, the hour may be adjusted accordingly. For example, in the United States, adding one hour during a &quot;spring forward&quot; transition skips the 2 AM hour, and adding an hour in a &quot;fall back&quot; transition repeats the 1 AM hour. Under the hood, the UTC offset is changing instead.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token comment">// A "spring forward" transition</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-03-08T01:00-08:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hours<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2020-03-08T03:00-07:00[America/Los_Angeles]</span>\n\n<span class="token comment">// A "fall back" transition</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-11-01T01:00-07:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hours<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2020-11-01T01:00-08:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hours<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2020-11-01T02:00-08:00[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>In addition, when changing the date portion of a <code>ZonedDateTime</code> around a daylight saving time transition, the hour may change if it is invalid in the target date. For example, during a &quot;spring forward&quot; transition, the 2 AM hour is skipped.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token comment">// A "spring forward" transition</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-03-07T02:00-08:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>days<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2020-03-08T03:00-07:00[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="parsing-durations">Parsing durations<a aria-labelledby="parsing-durations" class="anchor-link" href="#parsing-durations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>parseDuration</code> function can be used to convert a <a href="https://en.wikipedia.org/wiki/ISO_8601#Durations" target="_blank" rel="noopener nofollow">ISO 8601 duration string</a> into a <code>DateTimeDuration</code> object. The smallest time unit may include decimal values written with a comma or period, and negative values can be written by prefixing the entire string with a minus sign.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token function">parseDuration</span><span class="token punctuation">(</span><span class="token string">\'P3Y6M6W4DT12H30M5S\'</span><span class="token punctuation">)</span>\n<span class="token comment">// => {years: 3, months: 6, weeks: 6, days: 4, hours: 12, minutes: 30, seconds: 5}</span>\n\n<span class="token function">parseDuration</span><span class="token punctuation">(</span><span class="token string">\'-P3Y6M6W4DT12H30M5S\'</span><span class="token punctuation">)</span>\n<span class="token comment">// => {years: -3, months: -6, weeks: -6, days: -4, hours: -12, minutes: -30, seconds: -5}</span>\n\n<span class="token function">parseDuration</span><span class="token punctuation">(</span><span class="token string">\'P3Y6M6W4DT12H30M5.5S\'</span><span class="token punctuation">)</span>\n<span class="token comment">// => {years: 3, months: 6, weeks: 6, days: 4, hours: 12, minutes: 30, seconds: 5.5}</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="setting-fields">Setting fields<a aria-labelledby="setting-fields" class="anchor-link" href="#setting-fields" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>ZonedDateTime</code> objects are immutable, which means their properties cannot be set directly. Instead, use the <code>set</code> method, and pass the fields to be modified. This will return a new <code>ZonedDateTime</code> with the updated values.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>day<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-10T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>month<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// // 2022-05-03T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>year<span class="token operator">:</span> <span class="token number">2023</span><span class="token punctuation">,</span> month<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> day<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2023-10-16T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hour<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T18:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>minute<span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T09:15[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Setting a field to a value that is outside the valid range will cause it to be <em>constrained</em>. For example, setting the day to a value that is greater than the number of days in the month, will result in the last day of the month.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>day<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-28T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>month<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-12-03T09:45[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>hour<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T23:45[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Setting fields is time zone aware. When setting fields around a daylight saving time transition, the UTC offset will be adjusted accordingly. For example, when changing the <code>day</code> field from before a daylight saving transition to after, the time remains the same but the UTC offset changes.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-03-01T10:00-08:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>day<span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2020-03-14T10:00-07:00[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>In addition, some time values during daylight saving transitions may be <em>ambiguous</em>. For example, in the United States, the 2 AM hour is skipped in the spring, and the 1 AM hour occurs twice in the fall. When setting date fields, this ambiguity must be resolved to determine the exact time. By default, the later of the two possible times is chosen for &quot;spring forward&quot; transitions, and the earlier time is chosen for &quot;fall back&quot; transitions. This can be controlled by passing the <code>disambiguation</code> parameter to the <code>set</code> method.</p>\n<ul>\n<li><code>&#39;earlier&#39;</code> – choose the earlier of the two possible times</li>\n<li><code>&#39;later&#39;</code> – choose the later of the two possible times</li>\n<li><code>&#39;compatible&#39;</code> (default) – choose the later of the two times during &quot;spring forward&quot; transitions, and the earlier time during &quot;fall back&quot; transitions.</li>\n<li><code>&#39;reject&#39;</code> – throws an error when the time is ambiguous</li>\n</ul>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token comment">// A "spring forward" transition</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-03-01T02:00-08:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>day<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2020-03-08T03:00:00-07:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>day<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">\'earlier\'</span><span class="token punctuation">)</span> <span class="token comment">// 2020-03-08T01:00:00-08:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>day<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">\'later\'</span><span class="token punctuation">)</span> <span class="token comment">// 2020-03-08T03:00:00-07:00[America/Los_Angeles]</span>\n\n<span class="token comment">// A "fall back" transition</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-10-01T01:00-07:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>month<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2020-11-01T01:00:00-07:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>month<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">\'earlier\'</span><span class="token punctuation">)</span> <span class="token comment">// 2020-11-01T01:00:00-07:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>month<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">\'later\'</span><span class="token punctuation">)</span> <span class="token comment">// 2020-11-01T01:00:00-08:00[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="cycling-fields">Cycling fields<a aria-labelledby="cycling-fields" class="anchor-link" href="#cycling-fields" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>cycle</code> method allows incrementing or decrementing a single field. It is similar to the <code>add</code> and <code>subtract</code> methods, but when the value reaches the minimum or maximum, it wraps around rather than affecting other fields.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-12-31T23:59[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'day\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-12-01T23:59[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'month\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-01-31T23:59[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'hour\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-12-31T00:59[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'minute\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-12-31T23:00[America/Los_Angeles]</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-01-01T00:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'day\'</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-01-31T00:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'month\'</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-12-01T00:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'hour\'</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-01-01T23:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'minute\'</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-01-01T00:59[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Note that if cycling a field causes another field to become invalid, the date is <em>constrained</em>. For example, adding one month to August 31st results in September 30th because September 31st does not exist.</p>\n<p>The <code>round</code> option may also be passed, which causes the value to be rounded to increments of the given amount. For example, you could round the minute to increments of 15.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:22[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'minute\'</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T09:37:00-08:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'minute\'</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>round<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T09:30:00-08:00[America/Los_Angeles]</span>\n\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'minute\'</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T09:07:00-08:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'minute\'</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>round<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T09:15:00-08:00[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>By default, the <code>hour</code> field is cycled within a 24 hour range. The <code>hourCycle</code> option can be set to <code>12</code> to use a 12 hour clock instead, which will preserve the AM/PM value when formatted.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T11:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'hour\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T12:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'hour\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>hourCycle<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T00:00[America/Los_Angeles]</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T23:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'hour\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T00:00[America/Los_Angeles]</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'hour\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>hourCycle<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T12:00[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Cycling fields is time zone aware. When adjusting a date around a daylight saving time transition, the hour may be adjusted accordingly. For example, in the United States, adding one hour during a &quot;spring forward&quot; transition skips the 2 AM hour, and adding an hour in a &quot;fall back&quot; transition repeats the 1 AM hour. Under the hood, the UTC offset is changing instead.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token comment">// A "spring forward" transition</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-03-08T01:00-08:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'hour\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2020-03-08T03:00-07:00[America/Los_Angeles]</span>\n\n<span class="token comment">// A "fall back" transition</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-11-01T01:00-07:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'hour\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2020-11-01T01:00-08:00[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>In addition, when changing the date portion of a <code>ZonedDateTime</code> around a daylight saving time transition, the hour may change if it is invalid in the target date. For example, during a &quot;spring forward&quot; transition, the 2 AM hour is skipped.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token comment">// A "spring forward" transition</span>\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2020-03-07T02:00-08:00[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">cycle</span><span class="token punctuation">(</span><span class="token string">\'day\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2020-03-08T03:00-07:00[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="conversion">Conversion<a aria-labelledby="conversion" class="anchor-link" href="#conversion" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="to-a-string">To a string<a aria-labelledby="to-a-string" class="anchor-link" href="#to-a-string" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>ZonedDateTime</code> objects can be converted to an <a href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank" rel="noopener nofollow">ISO 8601</a> formatted string using the <code>toString</code> method. This format preserves the maximum amount of information, including the UTC offset and time zone identifier, in the same format used in other languages like Java.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">(</span>\n  <span class="token number">2022</span><span class="token punctuation">,</span>\n  <span class="token number">2</span><span class="token punctuation">,</span>\n  <span class="token number">3</span><span class="token punctuation">,</span>\n  <span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">,</span>\n  <span class="token operator">-</span><span class="token number">28800000</span><span class="token punctuation">,</span>\n  <span class="token number">12</span><span class="token punctuation">,</span>\n  <span class="token number">24</span><span class="token punctuation">,</span>\n  <span class="token number">45</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n\ndate<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \'2022-02-03T12:24:45-08:00[America/Los_Angeles]\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>If the exact local time and time zone that a user selected is important, use this format. Storing the time zone and offset that was selected rather than converting to UTC ensures that the local time is correct regardless of daylight saving rule changes (e.g. if a locale abolishes DST). Examples where this applies include calendar events, reminders, and other times that occur in a particular location.</p>\n<p>You can also use the <code>toAbsoluteString</code> method to convert the date to a UTC string. Use this format if the exact time no matter the time zone is needed.</p>\n<div class="cdg-root"><pre><code class="language-tsx">date<span class="token punctuation">.</span><span class="token function">toAbsoluteString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \'2022-02-03T20:24:45.000Z\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="to-a-native-date-object">To a native Date object<a aria-labelledby="to-a-native-date-object" class="anchor-link" href="#to-a-native-date-object" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A <code>ZonedDateTime</code> can be converted to a native JavaScript <code>Date</code> object using the <code>toDate</code> method. In general, the <code>Date</code> object should be avoided because it has many internationalization issues and other flaws. However, it is necessary to use some functionality like date formatting.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\ndate<span class="token punctuation">.</span><span class="token function">toDate</span><span class="token punctuation">(</span><span class="token string">\'America/Los_Angeles\'</span><span class="token punctuation">)</span> <span class="token comment">// Thu Feb 03 2022 09:45:00 GMT-0800 (Pacific Standard Time)</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="to-a-date-or-time-only">To a date or time only<a aria-labelledby="to-a-date-or-time-only" class="anchor-link" href="#to-a-date-or-time-only" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A <code>ZonedDateTime</code> can be converted to a <code>CalendarDate</code> or <code>Time</code> object if only one of these components is needed.</p>\n<p>Use the <code>toCalendarDate</code> function to convert a <code>ZonedDateTime</code> to a <code>CalendarDate</code>.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>toCalendarDate<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n<span class="token function">toCalendarDate</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token comment">// 2022-02-03</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Use the <code>toTime</code> function to convert a <code>ZonedDateTime</code> to a <code>Time</code>.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>toTime<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n<span class="token function">toTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token comment">// 09:45</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="to-a-date-and-time-without-a-time-zone">To a date and time without a time zone<a aria-labelledby="to-a-date-and-time-without-a-time-zone" class="anchor-link" href="#to-a-date-and-time-without-a-time-zone" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A <code>ZonedDateTime</code> can be converted to a <code>CalendarDateTime</code>, which represents a date and time that is not in any specific time zone. Use this type to represent times that occur at the same local time regardless of the time zone, such as the time of New Years Eve fireworks which always occur at midnight. Most times are better stored as a <code>ZonedDateTime</code>.</p>\n<p>Use the <code>toCalendarDateTime</code> function to convert a <code>ZonedDateTime</code> to a <code>CalendarDateTime</code>.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>toCalendarDateTime<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n<span class="token function">toCalendarDateTime</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T09:45:00</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="between-time-zones">Between time zones<a aria-labelledby="between-time-zones" class="anchor-link" href="#between-time-zones" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A <code>ZonedDateTime</code> can be converted to a different time zone using the <code>toTimeZone</code> function. The <code>toLocalTimeZone</code> function can also be used to convert to the current user&#39;s local time zone.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>toLocalTimeZone<span class="token punctuation">,</span> toTimeZone<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n<span class="token function">toTimeZone</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'America/Chicago\'</span><span class="token punctuation">)</span> <span class="token comment">// 2022-02-03T11:45[America/Chicago]</span>\n<span class="token function">toLocalTimeZone</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token comment">// e.g. 2022-02-03T12:45[America/New_York]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="queries">Queries<a aria-labelledby="queries" class="anchor-link" href="#queries" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="comparison">Comparison<a aria-labelledby="comparison" class="anchor-link" href="#comparison" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><code>ZonedDateTime</code> objects can be compared either for full or partial equality, or in order to determine which date is before or after another.</p>\n<p>The <code>compare</code> method can be used to determine if a date is before or after another. It returns a number less than zero if the first date is before the second, zero if the values are equal, or a number greater than zero if the first date is after the second.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-03-04T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n\na<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token comment">// true</span>\nb<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token comment">// true</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>In addition, the following functions can be used to perform a partial comparison. These functions accept dates in different calendar systems, and the second date is converted to the calendar system of the first date before comparison.</p>\n<ul>\n<li><code>isSameYear</code></li>\n<li><code>isSameMonth</code></li>\n<li><code>isSameDay</code></li>\n<li><code>isToday</code></li>\n</ul>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>isSameMonth<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token function">isSameMonth</span><span class="token punctuation">(</span>\n  <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-04-16T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-04-30T05:15[America/Los_Angeles]\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token function">isSameMonth</span><span class="token punctuation">(</span>\n  <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-04-16T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-08-020T05:15[America/Los_Angeles]\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>A similar set of functions is also available that does not convert between calendar systems and requires the calendars to be equal.</p>\n<ul>\n<li><code>isEqualYear</code></li>\n<li><code>isEqualMonth</code></li>\n<li><code>isEqualDay</code></li>\n</ul>\n<h3 id="start-and-end-dates">Start and end dates<a aria-labelledby="start-and-end-dates" class="anchor-link" href="#start-and-end-dates" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The following functions can be used to find the start or end dates of a particular unit of time. These only affect the date components of a <code>ZonedDateTime</code>. The time fields are left unchanged.</p>\n<ul>\n<li><code>startOfYear</code></li>\n<li><code>endOfYear</code></li>\n<li><code>startOfMonth</code></li>\n<li><code>endOfMonth</code></li>\n<li><code>startOfWeek</code></li>\n<li><code>endOfWeek</code></li>\n</ul>\n<p>Note that <code>startOfWeek</code> and <code>endOfWeek</code> require a locale string to be provided. This is because the first day of the week changes depending on the locale. For example, in the United States, the first day of the week is on Sunday, but in France it is on Monday.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>startOfMonth<span class="token punctuation">,</span> startOfWeek<span class="token punctuation">,</span> startOfYear<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-03T09:45[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n\n<span class="token function">startOfYear</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token comment">// 2022-01-01T09:45[America/Los_Angeles]</span>\n<span class="token function">startOfMonth</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token comment">// 2022-02-01T09:45[America/Los_Angeles]</span>\n<span class="token function">startOfWeek</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'en-US\'</span><span class="token punctuation">)</span> <span class="token comment">// 2022-01-30T09:45[America/Los_Angeles]</span>\n<span class="token function">startOfWeek</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'fr-FR\'</span><span class="token punctuation">)</span> <span class="token comment">// 2022-01-31T09:45[America/Los_Angeles]</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="day-of-week">Day of week<a aria-labelledby="day-of-week" class="anchor-link" href="#day-of-week" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>getDayOfWeek</code>function returns the day of the week for the given date and locale. Days are numbered from zero to six, where zero is the first day of the week in the given locale. For example, in the United States, the first day of the week is Sunday, but in France it is Monday.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>getDayOfWeek<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-06T08:30[America/Los_Angeles]\'</span><span class="token punctuation">)</span> <span class="token comment">// a Sunday</span>\n\n<span class="token function">getDayOfWeek</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'en-US\'</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>\n<span class="token function">getDayOfWeek</span><span class="token punctuation">(</span>locale<span class="token punctuation">,</span> <span class="token string">\'fr-FR\'</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="weekdays-and-weekends">Weekdays and weekends<a aria-labelledby="weekdays-and-weekends" class="anchor-link" href="#weekdays-and-weekends" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>isWeekday</code> and <code>isWeekend</code> functions can be used to determine if a date is weekday or weekend respectively. This depends on the locale. For example, in the United States, weekends are Saturday and Sunday, but in Israel they are Friday and Saturday.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>isWeekday<span class="token punctuation">,</span> isWeekend<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2022-02-06T08:30[America/Los_Angeles]\'</span><span class="token punctuation">)</span> <span class="token comment">// a Sunday</span>\n\n<span class="token function">isWeekday</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'en-US\'</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n<span class="token function">isWeekday</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'he-IL\'</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n\n<span class="token function">isWeekend</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'en-US\'</span><span class="token punctuation">)</span> <span class="token comment">// true</span>\n<span class="token function">isWeekend</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'he-IL\'</span><span class="token punctuation">)</span> <span class="token comment">// false</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="weeks-in-month">Weeks in month<a aria-labelledby="weeks-in-month" class="anchor-link" href="#weeks-in-month" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>getWeeksInMonth</code> function returns the number of weeks in the given month. This depends on the number of days in the month, what day of the week the month starts on, and the given locale. For example, in the United States, the first day of the week is Sunday, but in France it is Monday.</p>\n<div class="cdg-root"><pre><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>getWeeksInMonth<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@internationalized/date\'</span>\n\n<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token function">parseZonedDateTime</span><span class="token punctuation">(</span><span class="token string">\'2023-01-01T08:30[America/Los_Angeles]\'</span><span class="token punctuation">)</span>\n\n<span class="token function">getWeeksInMonth</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'en-US\'</span><span class="token punctuation">)</span> <span class="token comment">// 5</span>\n<span class="token function">getWeeksInMonth</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">\'fr-FR\'</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n'],toc:[{text:"Introduction",level:2,hash:"introduction",children:[]},{text:"Properties &amp; Methods",level:2,hash:"properties-amp-methods",children:[]},{text:"Calendar systems",level:2,hash:"calendar-systems",children:[{text:"Eras",level:3,hash:"eras"},{text:"Converting between calendars",level:3,hash:"converting-between-calendars"}]},{text:"Manipulating dates",level:2,hash:"manipulating-dates",children:[{text:"Adding and subtracting durations",level:3,hash:"adding-and-subtracting-durations"},{text:"Parsing durations",level:3,hash:"parsing-durations"},{text:"Setting fields",level:3,hash:"setting-fields"},{text:"Cycling fields",level:3,hash:"cycling-fields"}]},{text:"Conversion",level:2,hash:"conversion",children:[{text:"To a string",level:3,hash:"to-a-string"},{text:"To a native Date object",level:3,hash:"to-a-native-date-object"},{text:"To a date or time only",level:3,hash:"to-a-date-or-time-only"},{text:"To a date and time without a time zone",level:3,hash:"to-a-date-and-time-without-a-time-zone"},{text:"Between time zones",level:3,hash:"between-time-zones"}]},{text:"Queries",level:2,hash:"queries",children:[{text:"Comparison",level:3,hash:"comparison"},{text:"Start and end dates",level:3,hash:"start-and-end-dates"},{text:"Day of week",level:3,hash:"day-of-week"},{text:"Weekdays and weekends",level:3,hash:"weekdays-and-weekends"},{text:"Weeks in month",level:3,hash:"weeks-in-month"}]}],title:"ZonedDateTime",headers:{title:"ZonedDateTime",components:[],hooks:[]}}},i={};i.scope={process:{},import:{}};var l={},r={"components/common/ComponentLinkHeader.tsx":p.Z},u=a(97458);function d(){return(0,u.jsx)(o.Z,(0,t.Z)({},e))}},45693:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/utilities/date/zoned-date-time",function(){return a(23006)}])}},function(n){n.O(0,[4308,7633,6471,9102,4706,9774,2888,179],function(){return n(n.s=45693)}),_N_E=n.O()}]);