(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9137],{37166:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var o,d,r=n(38443),i=n(48329),s=n.n(i),a=n(97458);function c(){return(0,a.jsxs)(r.Flexbox,{css:{marginBottom:"$4"},children:[(0,a.jsx)(s(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:o||(o=(0,a.jsx)(r.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,a.jsx)(s(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:d||(d=(0,a.jsx)(r.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},92819:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return h}});var o={};n.r(o),n.d(o,{demoComponents:function(){return p},demos:function(){return l},docs:function(){return c},srcComponents:function(){return u}});var d=n(2815),r=n(30031),i=n(76229),s=n(97458),a=n(37166),c={en:{description:"The Grid component is designed to create responsive and fluid grid layouts for your application.",location:"/docs/data/components/grid/grid.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>Grid</h1><p class="description">The Grid component is designed to create responsive and fluid grid layouts for your application.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>Grid<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or</p>\n<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Grid <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/grid\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="example">Example<a aria-labelledby="example" class="anchor-link" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"GridBasic.tsx"},'<h3 id="grid-component-usage">Grid Component Usage:<a aria-labelledby="grid-component-usage" class="anchor-link" href="#grid-component-usage" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><ol>\n<li>Fluid grids use columns that scale and resize content. A fluid grid&#39;s layout can use breakpoints to determine if the layout needs to change dramatically.</li>\n<li>It uses CSS&#39;s Flexible Box module for high flexibility.</li>\n<li>There are two types of layout: containers and items.</li>\n<li>Item widths are set in percentages, so they&#39;re always fluid and sized relative to their parent element.</li>\n<li>Items have padding to create the spacing between individual items.</li>\n<li>There are five grid breakpoints: xs, sm, md, lg, and xl.</li>\n<li>Integer values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the breakpoint constraints.</li>\n</ol>\n<h3 id="default-breakpoints">Default Breakpoints:<a aria-labelledby="default-breakpoints" class="anchor-link" href="#default-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><ol>\n<li>xs, extra-small: 0px</li>\n<li>sm, small: 600px</li>\n<li>md, medium: 900px</li>\n<li>lg, large: 1200px</li>\n<li>xl, extra-large: 1536px</li>\n</ol>\n<h3 id="props-of-grid">Props of Grid:<a aria-labelledby="props-of-grid" class="anchor-link" href="#props-of-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>spacing</td>\n<td>string</td>\n<td>—</td>\n<td>The spacing between grid items. Possible values: <code>&quot;none&quot;</code>, <code>&quot;xs&quot;</code>, <code>&quot;sm&quot;</code>, <code>&quot;md&quot;</code>, <code>&quot;lg&quot;</code>, <code>&quot;xl&quot;</code>, <code>&quot;xxl&quot;</code>, or a custom CSS value (e.g., <code>&quot;8px&quot;</code>, <code>&quot;16px&quot;</code>).</td>\n</tr>\n<tr>\n<td>direction</td>\n<td>string</td>\n<td>—</td>\n<td>The direction of the grid layout. Possible values: <code>&quot;row&quot;</code>, <code>&quot;column&quot;</code>, <code>&quot;row-reverse&quot;</code>, or <code>&quot;column-reverse&quot;</code>.</td>\n</tr>\n<tr>\n<td>wrap</td>\n<td>string</td>\n<td>—</td>\n<td>Determines whether the grid items should wrap when there&#39;s not enough space. Possible values: <code>&quot;nowrap&quot;</code>, <code>&quot;wrap&quot;</code>, <code>&quot;wrap-reverse&quot;</code>.</td>\n</tr>\n<tr>\n<td>alignItems</td>\n<td>string</td>\n<td>—</td>\n<td>Determines the vertical alignment of the grid items. Possible values: <code>&quot;start&quot;</code>, <code>&quot;end&quot;</code>, <code>&quot;center&quot;</code>, <code>&quot;stretch&quot;</code>, or <code>&quot;baseline&quot;</code>.</td>\n</tr>\n<tr>\n<td>justifyContent</td>\n<td>string</td>\n<td>—</td>\n<td>Determines the horizontal alignment of the grid items. Possible values: <code>&quot;start&quot;</code>, <code>&quot;end&quot;</code>, <code>&quot;center&quot;</code>, <code>&quot;between&quot;</code>, <code>&quot;around&quot;</code>, or <code>&quot;evenly&quot;</code>.</td>\n</tr>\n<tr>\n<td>alignContent</td>\n<td>string</td>\n<td>—</td>\n<td>Determines the alignment of grid items when there&#39;s extra space. Possible values: <code>&quot;start&quot;</code>, <code>&quot;end&quot;</code>, <code>&quot;center&quot;</code>, <code>&quot;stretch&quot;</code>, <code>&quot;between&quot;</code>, or <code>&quot;around&quot;</code>.</td>\n</tr>\n<tr>\n<td>itemComponent</td>\n<td>React.ElementType | string</td>\n<td><code>&#39;div&#39;</code></td>\n<td>The component or HTML element to use as the grid item container.</td>\n</tr>\n<tr>\n<td>css</td>\n<td><code>CSS</code></td>\n<td>—</td>\n<td>The system prop that allows defining system overrides as well as additional CSS styles.</td>\n</tr>\n</tbody></table>\n<h3 id="props-of-grid-item">Props of Grid.Item:<a aria-labelledby="props-of-grid-item" class="anchor-link" href="#props-of-grid-item" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>xs</td>\n<td>number</td>\n<td>—</td>\n<td>The number of columns the item should occupy at the <code>&quot;xs&quot;</code> breakpoint (viewport width less than <code>600px</code>).</td>\n</tr>\n<tr>\n<td>sm</td>\n<td>number</td>\n<td>—</td>\n<td>The number of columns the item should occupy at the <code>&quot;sm&quot;</code> breakpoint (viewport width greater than or equal to <code>600px</code>).</td>\n</tr>\n<tr>\n<td>md</td>\n<td>number</td>\n<td>—</td>\n<td>The number of columns the item should occupy at the <code>&quot;md&quot;</code> breakpoint (viewport width greater than or equal to <code>900px</code>).</td>\n</tr>\n<tr>\n<td>lg</td>\n<td>number</td>\n<td>—</td>\n<td>The number of columns the item should occupy at the <code>&quot;lg&quot;</code> breakpoint (viewport width greater than or equal to <code>1200px</code>).</td>\n</tr>\n<tr>\n<td>xl</td>\n<td>number</td>\n<td>—</td>\n<td>The number of columns the item should occupy at the <code>&quot;xl&quot;</code> breakpoint (viewport width greater than or equal to <code>1536px</code>).</td>\n</tr>\n<tr>\n<td>css</td>\n<td><code>CSS</code></td>\n<td>—</td>\n<td>The system prop that allows defining system overrides as well as additional CSS styles.</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Example",level:2,hash:"example",children:[{text:"Grid Component Usage:",level:3,hash:"grid-component-usage"},{text:"Default Breakpoints:",level:3,hash:"default-breakpoints"},{text:"Props of Grid:",level:3,hash:"props-of-grid"},{text:"Props of Grid.Item:",level:3,hash:"props-of-grid-item"}]}],title:"React Grid component",headers:{title:"React Grid component",components:["Grid"],hooks:[]}}},l={"GridBasic.tsx":{module:"./GridBasic.tsx",raw:"import Grid from '@comfortdelgro/react-compass/grid'\n\nfunction GridBasic() {\n  return (\n    <div>\n      <Grid spacing='sm' alignItems='center' style={{height: '100%'}}>\n        <Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n          <div\n            style={{\n              padding: '16px',\n              borderRadius: '4px',\n              textAlign: 'center',\n              color: '#ede9f9',\n              fontWeight: '700',\n              backgroundColor: '#47b0b0',\n              boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n            }}\n          >\n            Box\n          </div>\n        </Grid.Item>\n        <Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n          <div\n            style={{\n              padding: '16px',\n              borderRadius: '4px',\n              textAlign: 'center',\n              color: '#ede9f9',\n              fontWeight: '700',\n              backgroundColor: '#47b0b0',\n              boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n            }}\n          >\n            Box\n          </div>\n        </Grid.Item>\n        <Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n          <div\n            style={{\n              padding: '16px',\n              borderRadius: '4px',\n              textAlign: 'center',\n              color: '#ede9f9',\n              fontWeight: '700',\n              backgroundColor: '#47b0b0',\n              boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n            }}\n          >\n            Box\n          </div>\n        </Grid.Item>\n        <Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n          <div\n            style={{\n              padding: '16px',\n              borderRadius: '4px',\n              textAlign: 'center',\n              color: '#ede9f9',\n              fontWeight: '700',\n              backgroundColor: '#47b0b0',\n              boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n            }}\n          >\n            Box\n          </div>\n        </Grid.Item>\n      </Grid>\n    </div>\n  )\n}\n\nexport default GridBasic\n",moduleTS:"./GridBasic.tsx",rawTS:"import Grid from '@comfortdelgro/react-compass/grid'\n\nfunction GridBasic() {\n  return (\n    <div>\n      <Grid spacing='sm' alignItems='center' style={{height: '100%'}}>\n        <Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n          <div\n            style={{\n              padding: '16px',\n              borderRadius: '4px',\n              textAlign: 'center',\n              color: '#ede9f9',\n              fontWeight: '700',\n              backgroundColor: '#47b0b0',\n              boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n            }}\n          >\n            Box\n          </div>\n        </Grid.Item>\n        <Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n          <div\n            style={{\n              padding: '16px',\n              borderRadius: '4px',\n              textAlign: 'center',\n              color: '#ede9f9',\n              fontWeight: '700',\n              backgroundColor: '#47b0b0',\n              boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n            }}\n          >\n            Box\n          </div>\n        </Grid.Item>\n        <Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n          <div\n            style={{\n              padding: '16px',\n              borderRadius: '4px',\n              textAlign: 'center',\n              color: '#ede9f9',\n              fontWeight: '700',\n              backgroundColor: '#47b0b0',\n              boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n            }}\n          >\n            Box\n          </div>\n        </Grid.Item>\n        <Grid.Item xs={12} sm={6} md={4} lg={3} xl={3}>\n          <div\n            style={{\n              padding: '16px',\n              borderRadius: '4px',\n              textAlign: 'center',\n              color: '#ede9f9',\n              fontWeight: '700',\n              backgroundColor: '#47b0b0',\n              boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.25)',\n            }}\n          >\n            Box\n          </div>\n        </Grid.Item>\n      </Grid>\n    </div>\n  )\n}\n\nexport default GridBasic\n"}};l.scope={process:{},import:{"@comfortdelgro/react-compass/grid":i}};var p={"./GridBasic.tsx":function(){return(0,s.jsx)("div",{children:(0,s.jsxs)(i.default,{spacing:"sm",alignItems:"center",style:{height:"100%"},children:[(0,s.jsx)(i.default.Item,{xs:12,sm:6,md:4,lg:3,xl:3,children:(0,s.jsx)("div",{style:{padding:"16px",borderRadius:"4px",textAlign:"center",color:"#ede9f9",fontWeight:"700",backgroundColor:"#47b0b0",boxShadow:"0px 2px 2px rgba(0, 0, 0, 0.25)"},children:"Box"})}),(0,s.jsx)(i.default.Item,{xs:12,sm:6,md:4,lg:3,xl:3,children:(0,s.jsx)("div",{style:{padding:"16px",borderRadius:"4px",textAlign:"center",color:"#ede9f9",fontWeight:"700",backgroundColor:"#47b0b0",boxShadow:"0px 2px 2px rgba(0, 0, 0, 0.25)"},children:"Box"})}),(0,s.jsx)(i.default.Item,{xs:12,sm:6,md:4,lg:3,xl:3,children:(0,s.jsx)("div",{style:{padding:"16px",borderRadius:"4px",textAlign:"center",color:"#ede9f9",fontWeight:"700",backgroundColor:"#47b0b0",boxShadow:"0px 2px 2px rgba(0, 0, 0, 0.25)"},children:"Box"})}),(0,s.jsx)(i.default.Item,{xs:12,sm:6,md:4,lg:3,xl:3,children:(0,s.jsx)("div",{style:{padding:"16px",borderRadius:"4px",textAlign:"center",color:"#ede9f9",fontWeight:"700",backgroundColor:"#47b0b0",boxShadow:"0px 2px 2px rgba(0, 0, 0, 0.25)"},children:"Box"})})]})})}},u={"components/common/ComponentLinkHeader.tsx":a.Z};function h(){return(0,s.jsx)(r.Z,(0,d.Z)({},o))}},77806:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/compass-design/components/grid",function(){return n(92819)}])}},function(e){e.O(0,[4308,8553,964,9958,31,9774,2888,179],function(){return e(e.s=77806)}),_N_E=e.O()}]);