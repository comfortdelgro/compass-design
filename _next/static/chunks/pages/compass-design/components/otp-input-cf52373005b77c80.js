(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5863],{37166:function(n,e,t){"use strict";t.d(e,{Z:function(){return p}});var o,s,l=t(38443),a=t(48329),r=t.n(a),c=t(97458);function p(){return(0,c.jsxs)(l.Flexbox,{css:{marginBottom:"$4"},children:[(0,c.jsx)(r(),{href:"https://github.com/comfortdelgro/compass-design",target:"_blank",style:{textDecoration:"none"},children:o||(o=(0,c.jsx)(l.Badge,{label:"Github",color:"info",variant:"outline"}))}),(0,c.jsx)(r(),{href:"https://www.figma.com/file/JSiK3cmMmxTt8qhR3dty8t/Workbench-Design-System?type=design&node-id=502-54719&mode=design&t=a4SJbARIttEHmcZS-0",target:"_blank",style:{textDecoration:"none"},children:s||(s=(0,c.jsx)(l.Badge,{label:"Figma",color:"danger",variant:"outline"}))})]})}},43233:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return g}});var o={};t.r(o),t.d(o,{demoComponents:function(){return u},demos:function(){return i},docs:function(){return p},srcComponents:function(){return d}});var s=t(2815),l=t(30031),a=t(38443),r=t(97458),c=t(37166),p={en:{description:"OTP Input component for inputting One-Time Passwords.",location:"/docs/data/components/otp-input/otp-input.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n    <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n      <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n    </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n        <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n      </symbol>\n      </svg>','<h1>OTP Input</h1><p class="description">OTP Input component for inputting One-Time Passwords.</p>\n\n',{component:"components/common/ComponentLinkHeader.tsx"},'<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>OTPInput<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>or</p>\n<div class="cdg-root"><pre><code class="language-jsx"><span class="token keyword">import</span> OTPInput <span class="token keyword">from</span> <span class="token string">\'@comfortdelgro/react-compass/otpinput\'</span>\n</code></pre><button aria-label="Copy the code" class="cdg-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24"><use class="cdg-copy-icon" xlink:href="#copy-icon" /><use class="cdg-copied-icon" xlink:href="#copied-icon" /></svg><span class="cdg-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="example">Example<a aria-labelledby="example" class="anchor-link" href="#example" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"OTPInput.tsx"},'<h2 id="props">Props<a aria-labelledby="props" class="anchor-link" href="#props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Type</th>\n<th align="left">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">length</td>\n<td align="left"><code>number</code></td>\n<td align="left">—</td>\n<td align="left">The length of the OTP input</td>\n</tr>\n<tr>\n<td align="left">isNumberInput</td>\n<td align="left"><code>bool</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">Whether the input should be numbers</td>\n</tr>\n<tr>\n<td align="left">autoFocus</td>\n<td align="left"><code>bool</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">Whether to autofocus the first input</td>\n</tr>\n<tr>\n<td align="left">onChangeOTP</td>\n<td align="left"><code>func</code></td>\n<td align="left">—</td>\n<td align="left">Callback when the OTP value changes</td>\n</tr>\n<tr>\n<td align="left">disabled</td>\n<td align="left"><code>bool</code></td>\n<td align="left"><code>false</code></td>\n<td align="left">Whether the input should be disabled</td>\n</tr>\n</tbody></table>\n'],toc:[{text:"Example",level:2,hash:"example",children:[]},{text:"Props",level:2,hash:"props",children:[]}],title:"React OTP Input component",headers:{title:"React OTP Input component",components:["OTPInput"],hooks:[]}}},i={"OTPInput.tsx":{module:"./OTPInput.tsx",raw:"import {Flexbox, OTPInput, Typography} from '@comfortdelgro/react-compass'\n\nfunction Default() {\n  return (\n    <Flexbox\n      css={{\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\n        Number OTP\n      </Typography.Label>\n      <OTPInput\n        length={4}\n        isNumberInput\n        autoFocus\n        onChangeOTP={(otp) => console.log('Number OTP: ', otp)}\n      />{' '}\n      <Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\n        6 Numbers\n      </Typography.Label>\n      <OTPInput\n        length={6}\n        isNumberInput\n        autoFocus\n        onChangeOTP={(otp) => console.log('Number OTP: ', otp)}\n      />\n      <Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\n        String OTP\n      </Typography.Label>\n      <OTPInput\n        autoFocus\n        length={4}\n        onChangeOTP={(otp) => console.log('String OTP: ', otp)}\n      />\n      <Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\n        Disabled\n      </Typography.Label>\n      <OTPInput\n        autoFocus\n        disabled\n        length={4}\n        onChangeOTP={(otp) => console.log('String OTP: ', otp)}\n      />\n    </Flexbox>\n  )\n}\n\nexport default Default\n",jsxPreview:"<Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\r\n    Number OTP\r\n</Typography.Label>\r\n    <OTPInput\r\n    length={4}\r\n    isNumberInput\r\n    autoFocus\r\n    onChangeOTP={(otp) => console.log('Number OTP: ', otp)}\r\n    />{' '}\r\n<Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\r\n    6 Numbers\r\n</Typography.Label>\r\n    <OTPInput\r\n    length={6}\r\n    isNumberInput\r\n    autoFocus\r\n    onChangeOTP={(otp) => console.log('Number OTP: ', otp)}\r\n    />  \r\n<Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\r\n    String OTP\r\n</Typography.Label>\r\n    <OTPInput\r\n    autoFocus\r\n    length={4}\r\n    onChangeOTP={(otp) => console.log('String OTP: ', otp)}\r\n    />\r\n<Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\r\n    Disabled\r\n</Typography.Label>\r\n    <OTPInput\r\n    autoFocus\r\n    disabled\r\n    length={4}\r\n    onChangeOTP={(otp) => console.log('String OTP: ', otp)}\r\n    />",moduleTS:"./OTPInput.tsx",rawTS:"import {Flexbox, OTPInput, Typography} from '@comfortdelgro/react-compass'\n\nfunction Default() {\n  return (\n    <Flexbox\n      css={{\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\n        Number OTP\n      </Typography.Label>\n      <OTPInput\n        length={4}\n        isNumberInput\n        autoFocus\n        onChangeOTP={(otp) => console.log('Number OTP: ', otp)}\n      />{' '}\n      <Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\n        6 Numbers\n      </Typography.Label>\n      <OTPInput\n        length={6}\n        isNumberInput\n        autoFocus\n        onChangeOTP={(otp) => console.log('Number OTP: ', otp)}\n      />\n      <Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\n        String OTP\n      </Typography.Label>\n      <OTPInput\n        autoFocus\n        length={4}\n        onChangeOTP={(otp) => console.log('String OTP: ', otp)}\n      />\n      <Typography.Label css={{justifyContent: 'center', display: 'flex'}}>\n        Disabled\n      </Typography.Label>\n      <OTPInput\n        autoFocus\n        disabled\n        length={4}\n        onChangeOTP={(otp) => console.log('String OTP: ', otp)}\n      />\n    </Flexbox>\n  )\n}\n\nexport default Default\n"}};i.scope={process:{},import:{"@comfortdelgro/react-compass":a}};var u={"./OTPInput.tsx":function(){return(0,r.jsxs)(a.Flexbox,{css:{justifyContent:"center",alignItems:"center",flexDirection:"column"},children:[(0,r.jsx)(a.Typography.Label,{css:{justifyContent:"center",display:"flex"},children:"Number OTP"}),(0,r.jsx)(a.OTPInput,{length:4,isNumberInput:!0,autoFocus:!0,onChangeOTP:function(n){return console.log("Number OTP: ",n)}})," ",(0,r.jsx)(a.Typography.Label,{css:{justifyContent:"center",display:"flex"},children:"6 Numbers"}),(0,r.jsx)(a.OTPInput,{length:6,isNumberInput:!0,autoFocus:!0,onChangeOTP:function(n){return console.log("Number OTP: ",n)}}),(0,r.jsx)(a.Typography.Label,{css:{justifyContent:"center",display:"flex"},children:"String OTP"}),(0,r.jsx)(a.OTPInput,{autoFocus:!0,length:4,onChangeOTP:function(n){return console.log("String OTP: ",n)}}),(0,r.jsx)(a.Typography.Label,{css:{justifyContent:"center",display:"flex"},children:"Disabled"}),(0,r.jsx)(a.OTPInput,{autoFocus:!0,disabled:!0,length:4,onChangeOTP:function(n){return console.log("String OTP: ",n)}})]})}},d={"components/common/ComponentLinkHeader.tsx":c.Z};function g(){return(0,r.jsx)(l.Z,(0,s.Z)({},o))}},18247:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/compass-design/components/otp-input",function(){return t(43233)}])}},function(n){n.O(0,[4308,8553,964,9958,31,9774,2888,179],function(){return n(n.s=18247)}),_N_E=n.O()}]);