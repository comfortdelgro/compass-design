@import './drawer-shared.module.css';

@layer default, variant, compoundVariant;

@layer default {
  .drawer {
    max-height: 100dvh;
  }

  .drawerHeader {
    padding: var(--cdg-spacing-4);

    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--cdg-spacing-4);
  }

  .drawerContent {
    flex: 1;
    padding: var(--cdg-spacing-4);

    max-height: 100%;
    width: 100%;
    overflow: hidden auto;
  }

  .drawerFooter {
    padding: var(--cdg-spacing-4);
  }

  @media (prefers-reduced-motion: no-preference) {
    .drawer,
    .drawer::backdrop {
      opacity: 0;
    }

    .drawer {
      display: flex;
      animation: var(--cdg-drawer-close-animation-duration)
        var(--cdg-drawer-animation-timing-fn) forwards;
      transition: height var(--cdg-drawer-close-animation-duration) ease,
        opacity var(--cdg-drawer-close-animation-duration) ease;
    }

    .drawer[open] {
      animation: var(--cdg-drawer-open-animation-duration)
        var(--cdg-drawer-animation-timing-fn) forwards;
      opacity: 1;
    }

    .drawer[open]::backdrop {
      opacity: var(--cdg-drawer-backdrop-opacity);
    }

    @supports (transition-behavior: allow-discrete) {
      .drawer,
      .drawer::backdrop {
        transition: opacity var(--cdg-drawer-close-animation-duration),
          display var(--cdg-drawer-close-animation-duration) allow-discrete,
          overlay var(--cdg-drawer-close-animation-duration) allow-discrete;
      }
    }
  }
}

@layer compoundVariant {
  .drawer.default {
    height: 100dvh;
    width: 100%;
  }

  .drawer.non-modal {
    position: fixed;
    inset-block: 0;
    overflow: hidden;
  }

  .drawer.left {
    inset-inline: 0 auto;
    animation-name: slideOutLeft;
  }

  .drawer.left[open] {
    animation-name: slideInLeft;
  }

  .drawer.right {
    inset-inline: auto 0;
    animation-name: slideOutRight;
  }

  .drawer.right[open] {
    animation-name: slideInRight;
  }

  .drawer.bottom {
    height: 40dvh;
    width: 100%;
    inset-block: auto 0;

    box-shadow: 0 -4px 6px -1px rgb(0 0 0 / 0.1),
      0 -2px 4px -2px rgb(0 0 0 / 0.1);
    animation-name: slideOutUp;
  }

  .drawer.bottom[open] {
    animation-name: slideInUp;
  }

  @media (min-width: 600px) {
    .drawer.default:not(.bottom) {
      width: clamp(30vw, var(--cdg-spacing-160), 50vw);
    }
  }
}
