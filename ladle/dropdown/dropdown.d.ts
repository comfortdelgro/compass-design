import React from '../../../../node_modules/.pnpm/react@18.3.1/node_modules/react';
import { CSS } from '../utils/objectToCss';
export interface Props {
    defaultOpen?: boolean;
    selectedKey?: React.Key;
    defaultSelectedKey?: React.Key;
    value?: React.Key;
    defaultValue?: React.Key;
    shouldDeselect?: boolean;
    allowsCustomValue?: boolean;
    type?: 'select' | 'combobox';
    prefix?: React.ReactNode;
    icon?: React.ReactNode;
    label?: React.ReactNode;
    isLoading?: boolean;
    autoFocus?: boolean;
    isErrored?: boolean;
    helperText?: string;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    isRequired?: boolean;
    placeholder?: string;
    errorMessage?: string;
    numberOfRows?: number;
    disabledKeys?: string[] | number[];
    disabledValues?: string[] | number[];
    children?: React.ReactNode;
    description?: React.ReactNode;
    disableClearable?: boolean;
    noDataMessage?: string;
    isCloseOnSelect?: boolean;
    isLoadingMore?: boolean;
    popoverCSS?: React.CSSProperties;
    css?: CSS;
    inputRef?: React.RefObject<HTMLInputElement>;
    buttonRef?: React.RefObject<HTMLButtonElement>;
    disabledAutofill?: boolean;
    onBlur?: (event: React.FocusEvent) => void;
    onFocus?: () => void;
    onLoadMore?: () => void;
    onOpenChange?: (isOpen: boolean) => void;
    onSelectionChange?: (key: React.Key) => void;
    onValueChange?: (key: React.Key) => void;
    isFloatingPortal?: boolean;
}
export declare const Icon: () => import('../../../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime').JSX.Element;
export type DropdownProps = Props & Omit<React.HTMLAttributes<HTMLDivElement>, keyof Props>;
declare const Select: any;
export default Select;
